
            using System;
            using System.Linq;
            using System.Collections.Generic;

            using Spice86.Emulator.Function;
            using Spice86.Emulator.Machine;
            using Spice86.Emulator.Memory;
            using Spice86.Emulator.Reverseengineer;

            ///<summary>
            /// Getters and setters for what could be global variables, split per segment register. 0 addresses in total.
            /// Observed values for segments:
            /// DS:0xFF0,0x1F4B,0x351D,0x6860,0x46A5,0x563E,0x569C,0x3705,0x6060,0xA000,0x2411SS:0x1F4BCS:0x1000,0x334B,0x563EES:0x40,0x0

            /// Number of globals:
            /// 2002
            /// Globals content:
            /// 
            // Accessors for values accessed via register DS
            public class GlobalsOnDS : MemoryBasedDataStructureWithDSBaseAddress {
                public GlobalsOnDS(Machine machine) {
                    base(machine);
                }

                // Getters and Setters for address 0xFF0:0x2/0xFF02.
            // Was accessed via the following registers: DS
            public int GetWord16_0FF0_0002() {
                return GetUint16(0x2);
            }
            
            // Operation not registered by running code
            public void SetWord16_0FF0_0002(int value) {
                SetUint16(0x2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x0/0x1F4B0.
            // Operation not registered by running code
            public int GetWord16_1F4B_0000() {
                return GetUint16(0x0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0000(int value) {
                SetUint16(0x0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2/0x1F4B2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0002() {
                return GetUint16(0x2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0002(int value) {
                SetUint16(0x2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4/0x1F4B4.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0004() {
                return GetUint8(0x4);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0004(int value) {
                SetUint8(0x4, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0004() {
                return GetUint16(0x4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0004(int value) {
                SetUint16(0x4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5/0x1F4B5.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0005() {
                return GetUint8(0x5);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0005(int value) {
                SetUint8(0x5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x6/0x1F4B6.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0006() {
                return GetUint8(0x6);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0006(int value) {
                SetUint8(0x6, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0006() {
                return GetUint16(0x6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0006(int value) {
                SetUint16(0x6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8/0x1F4B8.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0008() {
                return GetUint8(0x8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0008(int value) {
                SetUint8(0x8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x9/0x1F4B9.
            // Operation not registered by running code
            public int GetByte8_1F4B_0009() {
                return GetUint8(0x9);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0009(int value) {
                SetUint8(0x9, value);
            }
            
// Getters and Setters for address 0x1F4B:0xB/0x1F4BB.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_000B() {
                return GetUint8(0xB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_000B(int value) {
                SetUint8(0xB, value);
            }
            
// Getters and Setters for address 0x1F4B:0xC/0x1F4BC.
            // Operation not registered by running code
            public int GetByte8_1F4B_000C() {
                return GetUint8(0xC);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_000C(int value) {
                SetUint8(0xC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD/0x1F4BD.
            // Operation not registered by running code
            public int GetByte8_1F4B_000D() {
                return GetUint8(0xD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_000D(int value) {
                SetUint8(0xD, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE/0x1F4BE.
            // Operation not registered by running code
            public int GetWord16_1F4B_000E() {
                return GetUint16(0xE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_000E(int value) {
                SetUint16(0xE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x10/0x1F4C0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0010() {
                return GetUint16(0x10);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_0010(int value) {
                SetUint16(0x10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x12/0x1F4C2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0012() {
                return GetUint16(0x12);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0012(int value) {
                SetUint16(0x12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x14/0x1F4C4.
            // Operation not registered by running code
            public int GetWord16_1F4B_0014() {
                return GetUint16(0x14);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0014(int value) {
                SetUint16(0x14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x16/0x1F4C6.
            // Operation not registered by running code
            public int GetWord16_1F4B_0016() {
                return GetUint16(0x16);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0016(int value) {
                SetUint16(0x16, value);
            }
            
// Getters and Setters for address 0x1F4B:0x18/0x1F4C8.
            // Operation not registered by running code
            public int GetByte8_1F4B_0018() {
                return GetUint8(0x18);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0018(int value) {
                SetUint8(0x18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x19/0x1F4C9.
            // Operation not registered by running code
            public int GetByte8_1F4B_0019() {
                return GetUint8(0x19);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0019(int value) {
                SetUint8(0x19, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1A/0x1F4CA.
            // Operation not registered by running code
            public int GetByte8_1F4B_001A() {
                return GetUint8(0x1A);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_001A(int value) {
                SetUint8(0x1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1B/0x1F4CB.
            // Operation not registered by running code
            public int GetByte8_1F4B_001B() {
                return GetUint8(0x1B);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_001B(int value) {
                SetUint8(0x1B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x23/0x1F4D3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0023() {
                return GetUint8(0x23);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0023(int value) {
                SetUint8(0x23, value);
            }
            
// Getters and Setters for address 0x1F4B:0x26/0x1F4D6.
            // Operation not registered by running code
            public int GetByte8_1F4B_0026() {
                return GetUint8(0x26);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0026(int value) {
                SetUint8(0x26, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28/0x1F4D8.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0028() {
                return GetUint8(0x28);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0028(int value) {
                SetUint8(0x28, value);
            }
            
// Getters and Setters for address 0x1F4B:0x29/0x1F4D9.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0029() {
                return GetUint8(0x29);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0029(int value) {
                SetUint8(0x29, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2A/0x1F4DA.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_002A() {
                return GetUint8(0x2A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_002A(int value) {
                SetUint8(0x2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2B/0x1F4DB.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_002B() {
                return GetUint8(0x2B);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_002B(int value) {
                SetUint8(0x2B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4D/0x1F4FD.
            // Operation not registered by running code
            public int GetByte8_1F4B_004D() {
                return GetUint8(0x4D);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_004D(int value) {
                SetUint8(0x4D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E/0x1F4FE.
            // Operation not registered by running code
            public int GetWord16_1F4B_004E() {
                return GetUint16(0x4E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_004E(int value) {
                SetUint16(0x4E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x50/0x1F500.
            // Operation not registered by running code
            public int GetByte8_1F4B_0050() {
                return GetUint8(0x50);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0050(int value) {
                SetUint8(0x50, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51/0x1F501.
            // Operation not registered by running code
            public int GetByte8_1F4B_0051() {
                return GetUint8(0x51);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0051(int value) {
                SetUint8(0x51, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52/0x1F502.
            // Operation not registered by running code
            public int GetByte8_1F4B_0052() {
                return GetUint8(0x52);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0052(int value) {
                SetUint8(0x52, value);
            }
            
// Getters and Setters for address 0x1F4B:0x53/0x1F503.
            // Operation not registered by running code
            public int GetByte8_1F4B_0053() {
                return GetUint8(0x53);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0053(int value) {
                SetUint8(0x53, value);
            }
            
// Getters and Setters for address 0x1F4B:0x54/0x1F504.
            // Operation not registered by running code
            public int GetByte8_1F4B_0054() {
                return GetUint8(0x54);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0054(int value) {
                SetUint8(0x54, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5C/0x1F50C.
            // Operation not registered by running code
            public int GetWord16_1F4B_005C() {
                return GetUint16(0x5C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_005C(int value) {
                SetUint16(0x5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5E/0x1F50E.
            // Operation not registered by running code
            public int GetWord16_1F4B_005E() {
                return GetUint16(0x5E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_005E(int value) {
                SetUint16(0x5E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x60/0x1F510.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0060() {
                return GetUint8(0x60);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0060(int value) {
                SetUint8(0x60, value);
            }
            
// Getters and Setters for address 0x1F4B:0x61/0x1F511.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_0061() {
                return GetUint8(0x61);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0061(int value) {
                SetUint8(0x61, value);
            }
            
// Getters and Setters for address 0x1F4B:0x7E/0x1F52E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_007E() {
                return GetUint8(0x7E);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_007E(int value) {
                SetUint8(0x7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x7F/0x1F52F.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_007F() {
                return GetUint8(0x7F);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_007F(int value) {
                SetUint8(0x7F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x90/0x1F540.
            // Operation not registered by running code
            public int GetByte8_1F4B_0090() {
                return GetUint8(0x90);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0090(int value) {
                SetUint8(0x90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x91/0x1F541.
            // Operation not registered by running code
            public int GetByte8_1F4B_0091() {
                return GetUint8(0x91);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0091(int value) {
                SetUint8(0x91, value);
            }
            
// Getters and Setters for address 0x1F4B:0x92/0x1F542.
            // Operation not registered by running code
            public int GetByte8_1F4B_0092() {
                return GetUint8(0x92);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0092(int value) {
                SetUint8(0x92, value);
            }
            
// Getters and Setters for address 0x1F4B:0x94/0x1F544.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0094() {
                return GetUint16(0x94);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0094(int value) {
                SetUint16(0x94, value);
            }
            
// Getters and Setters for address 0x1F4B:0x96/0x1F546.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_0096() {
                return GetUint16(0x96);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0096(int value) {
                SetUint16(0x96, value);
            }
            
// Getters and Setters for address 0x1F4B:0x98/0x1F548.
            // Operation not registered by running code
            public int GetWord16_1F4B_0098() {
                return GetUint16(0x98);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_0098(int value) {
                SetUint16(0x98, value);
            }
            
// Getters and Setters for address 0x1F4B:0x9A/0x1F54A.
            // Operation not registered by running code
            public int GetWord16_1F4B_009A() {
                return GetUint16(0x9A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_009A(int value) {
                SetUint16(0x9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x9C/0x1F54C.
            // Operation not registered by running code
            public int GetByte8_1F4B_009C() {
                return GetUint8(0x9C);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_009C(int value) {
                SetUint8(0x9C, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA0/0x1F550.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00A0() {
                return GetUint16(0xA0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_00A0(int value) {
                SetUint16(0xA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA2/0x1F552.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00A2() {
                return GetUint16(0xA2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00A2(int value) {
                SetUint16(0xA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA4/0x1F554.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00A4() {
                return GetUint16(0xA4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00A4(int value) {
                SetUint16(0xA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA6/0x1F556.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00A6() {
                return GetUint16(0xA6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00A6(int value) {
                SetUint16(0xA6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA8/0x1F558.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00A8() {
                return GetUint16(0xA8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00A8(int value) {
                SetUint16(0xA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAA/0x1F55A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00AA() {
                return GetUint16(0xAA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00AA(int value) {
                SetUint16(0xAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAC/0x1F55C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00AC() {
                return GetUint16(0xAC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00AC(int value) {
                SetUint16(0xAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAE/0x1F55E.
            // Operation not registered by running code
            public int GetWord16_1F4B_00AE() {
                return GetUint16(0xAE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00AE(int value) {
                SetUint16(0xAE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xB0/0x1F560.
            // Operation not registered by running code
            public int GetWord16_1F4B_00B0() {
                return GetUint16(0xB0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00B0(int value) {
                SetUint16(0xB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xB2/0x1F562.
            // Operation not registered by running code
            public int GetWord16_1F4B_00B2() {
                return GetUint16(0xB2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00B2(int value) {
                SetUint16(0xB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xBF/0x1F56F.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00BF() {
                return GetUint8(0xBF);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_00BF(int value) {
                SetUint8(0xBF, value);
            }
            
// Getters and Setters for address 0x1F4B:0xC2/0x1F572.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00C2() {
                return GetUint8(0xC2);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_00C2(int value) {
                SetUint8(0xC2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xC5/0x1F575.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00C5() {
                return GetUint8(0xC5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00C5(int value) {
                SetUint8(0xC5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xC6/0x1F576.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00C6() {
                return GetUint8(0xC6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00C6(int value) {
                SetUint8(0xC6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCA/0x1F57A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00CA() {
                return GetUint16(0xCA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00CA(int value) {
                SetUint16(0xCA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCC/0x1F57C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00CC() {
                return GetUint16(0xCC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00CC(int value) {
                SetUint16(0xCC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD0/0x1F580.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00D0() {
                return GetUint16(0xD0);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00D0(int value) {
                SetUint16(0xD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD5/0x1F585.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00D5() {
                return GetUint8(0xD5);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_00D5(int value) {
                SetUint8(0xD5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD6/0x1F586.
            // Operation not registered by running code
            public int GetWord16_1F4B_00D6() {
                return GetUint16(0xD6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00D6(int value) {
                SetUint16(0xD6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC/0x1F58C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00DC() {
                return GetUint16(0xDC);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00DC(int value) {
                SetUint16(0xDC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE2/0x1F592.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00E2() {
                return GetUint16(0xE2);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00E2(int value) {
                SetUint16(0xE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE8/0x1F598.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00E8() {
                return GetUint8(0xE8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00E8(int value) {
                SetUint8(0xE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xEA/0x1F59A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00EA() {
                return GetUint8(0xEA);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_00EA(int value) {
                SetUint8(0xEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xF0/0x1F5A0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_00F0() {
                return GetUint16(0xF0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00F0(int value) {
                SetUint16(0xF0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xF4/0x1F5A4.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00F4() {
                return GetUint8(0xF4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00F4(int value) {
                SetUint8(0xF4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xF5/0x1F5A5.
            // Operation not registered by running code
            public int GetByte8_1F4B_00F5() {
                return GetUint8(0xF5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00F5(int value) {
                SetUint8(0xF5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xF6/0x1F5A6.
            // Operation not registered by running code
            public int GetByte8_1F4B_00F6() {
                return GetUint8(0xF6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00F6(int value) {
                SetUint8(0xF6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xF7/0x1F5A7.
            // Operation not registered by running code
            public int GetByte8_1F4B_00F7() {
                return GetUint8(0xF7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00F7(int value) {
                SetUint8(0xF7, value);
            }
            
// Getters and Setters for address 0x1F4B:0xFA/0x1F5AA.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00FA() {
                return GetUint8(0xFA);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00FA(int value) {
                SetUint8(0xFA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xFB/0x1F5AB.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_00FB() {
                return GetUint8(0xFB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00FB(int value) {
                SetUint8(0xFB, value);
            }
            
// Getters and Setters for address 0x1F4B:0xFD/0x1F5AD.
            // Operation not registered by running code
            public int GetByte8_1F4B_00FD() {
                return GetUint8(0xFD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00FD(int value) {
                SetUint8(0xFD, value);
            }
            
// Getters and Setters for address 0x1F4B:0xFE/0x1F5AE.
            // Operation not registered by running code
            public int GetByte8_1F4B_00FE() {
                return GetUint8(0xFE);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00FE(int value) {
                SetUint8(0xFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xFF/0x1F5AF.
            // Operation not registered by running code
            public int GetByte8_1F4B_00FF() {
                return GetUint8(0xFF);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_00FF(int value) {
                SetUint8(0xFF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x115/0x1F5C5.
            // Operation not registered by running code
            public int GetByte8_1F4B_0115() {
                return GetUint8(0x115);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_0115(int value) {
                SetUint8(0x115, value);
            }
            
// Getters and Setters for address 0x1F4B:0x101A/0x204CA.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_101A() {
                return GetUint16(0x101A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_101A(int value) {
                SetUint16(0x101A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x109A/0x2054A.
            // Operation not registered by running code
            public int GetWord16_1F4B_109A() {
                return GetUint16(0x109A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_109A(int value) {
                SetUint16(0x109A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x10AA/0x2055A.
            // Operation not registered by running code
            public int GetWord16_1F4B_10AA() {
                return GetUint16(0x10AA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_10AA(int value) {
                SetUint16(0x10AA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x10BA/0x2056A.
            // Operation not registered by running code
            public int GetWord16_1F4B_10BA() {
                return GetUint16(0x10BA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_10BA(int value) {
                SetUint16(0x10BA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x10CA/0x2057A.
            // Operation not registered by running code
            public int GetWord16_1F4B_10CA() {
                return GetUint16(0x10CA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_10CA(int value) {
                SetUint16(0x10CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x114E/0x205FE.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_114E() {
                return GetUint16(0x114E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_114E(int value) {
                SetUint16(0x114E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1150/0x20600.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1150() {
                return GetUint16(0x1150);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1150(int value) {
                SetUint16(0x1150, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1152/0x20602.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_1152() {
                return GetUint8(0x1152);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1152(int value) {
                SetUint8(0x1152, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1152() {
                return GetUint16(0x1152);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1152(int value) {
                SetUint16(0x1152, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1153/0x20603.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_1153() {
                return GetUint8(0x1153);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1153(int value) {
                SetUint8(0x1153, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1154/0x20604.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1154() {
                return GetUint16(0x1154);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1154(int value) {
                SetUint16(0x1154, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1156/0x20606.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1156() {
                return GetUint16(0x1156);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1156(int value) {
                SetUint16(0x1156, value);
            }
            
// Getters and Setters for address 0x1F4B:0x115C/0x2060C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_115C() {
                return GetUint16(0x115C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_115C(int value) {
                SetUint16(0x115C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1170/0x20620.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1170() {
                return GetUint16(0x1170);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1170(int value) {
                SetUint16(0x1170, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1172/0x20622.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1172() {
                return GetUint16(0x1172);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1172(int value) {
                SetUint16(0x1172, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1174/0x20624.
            // Operation not registered by running code
            public int GetWord16_1F4B_1174() {
                return GetUint16(0x1174);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1174(int value) {
                SetUint16(0x1174, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1176/0x20626.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1176() {
                return GetUint16(0x1176);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1176(int value) {
                SetUint16(0x1176, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11BD/0x2066D.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11BD() {
                return GetUint16(0x11BD);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11BD(int value) {
                SetUint16(0x11BD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11C5/0x20675.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11C5() {
                return GetUint16(0x11C5);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11C5(int value) {
                SetUint16(0x11C5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11C7/0x20677.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_11C7() {
                return GetUint8(0x11C7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11C7(int value) {
                SetUint8(0x11C7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11C8/0x20678.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_11C8() {
                return GetUint8(0x11C8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11C8(int value) {
                SetUint8(0x11C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11C9/0x20679.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_11C9() {
                return GetUint8(0x11C9);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11C9(int value) {
                SetUint8(0x11C9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11CA/0x2067A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_11CA() {
                return GetUint8(0x11CA);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11CA(int value) {
                SetUint8(0x11CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11CB/0x2067B.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_11CB() {
                return GetUint8(0x11CB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11CB(int value) {
                SetUint8(0x11CB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11CC/0x2067C.
            // Operation not registered by running code
            public int GetByte8_1F4B_11CC() {
                return GetUint8(0x11CC);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_11CC(int value) {
                SetUint8(0x11CC, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11CC() {
                return GetUint16(0x11CC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11CC(int value) {
                SetUint16(0x11CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11CE/0x2067E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11CE() {
                return GetUint16(0x11CE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11CE(int value) {
                SetUint16(0x11CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11DB/0x2068B.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11DB() {
                return GetUint16(0x11DB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_11DB(int value) {
                SetUint16(0x11DB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11ED/0x2069D.
            // Operation not registered by running code
            public int GetWord16_1F4B_11ED() {
                return GetUint16(0x11ED);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11ED(int value) {
                SetUint16(0x11ED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11EF/0x2069F.
            // Operation not registered by running code
            public int GetWord16_1F4B_11EF() {
                return GetUint16(0x11EF);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11EF(int value) {
                SetUint16(0x11EF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11F7/0x206A7.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_11F7() {
                return GetUint16(0x11F7);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11F7(int value) {
                SetUint16(0x11F7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x11FD/0x206AD.
            // Operation not registered by running code
            public int GetWord16_1F4B_11FD() {
                return GetUint16(0x11FD);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_11FD(int value) {
                SetUint16(0x11FD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x144C/0x208FC.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_144C() {
                return GetUint8(0x144C);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_144C(int value) {
                SetUint8(0x144C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x146E/0x2091E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_146E() {
                return GetUint16(0x146E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_146E(int value) {
                SetUint16(0x146E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x149A/0x2094A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_149A() {
                return GetUint16(0x149A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_149A(int value) {
                SetUint16(0x149A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x194A/0x20DFA.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_194A() {
                return GetUint16(0x194A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_194A(int value) {
                SetUint16(0x194A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x194C/0x20DFC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_194C() {
                return GetUint16(0x194C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_194C(int value) {
                SetUint16(0x194C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1954/0x20E04.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_1954() {
                return GetUint8(0x1954);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1954(int value) {
                SetUint8(0x1954, value);
            }
            
            // Operation not registered by running code
            public int GetWord16_1F4B_1954() {
                return GetUint16(0x1954);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1954(int value) {
                SetUint16(0x1954, value);
            }
            
// Getters and Setters for address 0x1F4B:0x196A/0x20E1A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_196A() {
                return GetUint16(0x196A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_196A(int value) {
                SetUint16(0x196A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x196C/0x20E1C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_196C() {
                return GetUint8(0x196C);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_196C(int value) {
                SetUint8(0x196C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x197C/0x20E2C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_197C() {
                return GetUint16(0x197C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_197C(int value) {
                SetUint16(0x197C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x197E/0x20E2E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_197E() {
                return GetUint16(0x197E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_197E(int value) {
                SetUint16(0x197E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1AFE/0x20FAE.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1AFE() {
                return GetUint16(0x1AFE);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1AFE(int value) {
                SetUint16(0x1AFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1B0C/0x20FBC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1B0C() {
                return GetUint16(0x1B0C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1B0C(int value) {
                SetUint16(0x1B0C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1BF0/0x210A0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1BF0() {
                return GetUint16(0x1BF0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1BF0(int value) {
                SetUint16(0x1BF0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1BF2/0x210A2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1BF2() {
                return GetUint16(0x1BF2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1BF2(int value) {
                SetUint16(0x1BF2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1BF8/0x210A8.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_1BF8() {
                return GetUint8(0x1BF8);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1BF8(int value) {
                SetUint8(0x1BF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1C06/0x210B6.
            // Operation not registered by running code
            public int GetByte8_1F4B_1C06() {
                return GetUint8(0x1C06);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_1C06(int value) {
                SetUint8(0x1C06, value);
            }
            
            // Operation not registered by running code
            public int GetWord16_1F4B_1C06() {
                return GetUint16(0x1C06);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1C06(int value) {
                SetUint16(0x1C06, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1C14/0x210C4.
            // Operation not registered by running code
            public int GetWord16_1F4B_1C14() {
                return GetUint16(0x1C14);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1C14(int value) {
                SetUint16(0x1C14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1C22/0x210D2.
            // Operation not registered by running code
            public int GetWord16_1F4B_1C22() {
                return GetUint16(0x1C22);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_1C22(int value) {
                SetUint16(0x1C22, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1CC4/0x21174.
            // Operation not registered by running code
            public int GetByte8_1F4B_1CC4() {
                return GetUint8(0x1CC4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_1CC4(int value) {
                SetUint8(0x1CC4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F11/0x213C1.
            // Operation not registered by running code
            public int GetByte8_1F4B_1F11() {
                return GetUint8(0x1F11);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_1F11(int value) {
                SetUint8(0x1F11, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F12/0x213C2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_1F12() {
                return GetUint16(0x1F12);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F12(int value) {
                SetUint16(0x1F12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x21DA/0x2168A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_21DA() {
                return GetUint16(0x21DA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_21DA(int value) {
                SetUint16(0x21DA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x21FD/0x216AD.
            // Operation not registered by running code
            public int GetByte8_1F4B_21FD() {
                return GetUint8(0x21FD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_21FD(int value) {
                SetUint8(0x21FD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2222/0x216D2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2222() {
                return GetUint16(0x2222);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2222(int value) {
                SetUint16(0x2222, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2224/0x216D4.
            // Operation not registered by running code
            public int GetWord16_1F4B_2224() {
                return GetUint16(0x2224);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2224(int value) {
                SetUint16(0x2224, value);
            }
            
// Getters and Setters for address 0x1F4B:0x222C/0x216DC.
            // Operation not registered by running code
            public int GetWord16_1F4B_222C() {
                return GetUint16(0x222C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_222C(int value) {
                SetUint16(0x222C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2234/0x216E4.
            // Operation not registered by running code
            public int GetWord16_1F4B_2234() {
                return GetUint16(0x2234);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2234(int value) {
                SetUint16(0x2234, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2240/0x216F0.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_2240() {
                return GetUint16(0x2240);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2240(int value) {
                SetUint16(0x2240, value);
            }
            
// Getters and Setters for address 0x1F4B:0x226D/0x2171D.
            // Operation not registered by running code
            public int GetByte8_1F4B_226D() {
                return GetUint8(0x226D);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_226D(int value) {
                SetUint8(0x226D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x227D/0x2172D.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_227D() {
                return GetUint8(0x227D);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_227D(int value) {
                SetUint8(0x227D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x227E/0x2172E.
            // Operation not registered by running code
            public int GetWord16_1F4B_227E() {
                return GetUint16(0x227E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_227E(int value) {
                SetUint16(0x227E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22A6/0x21756.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22A6() {
                return GetUint16(0x22A6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22A6(int value) {
                SetUint16(0x22A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22D9/0x21789.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22D9() {
                return GetUint16(0x22D9);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22D9(int value) {
                SetUint16(0x22D9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22DB/0x2178B.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22DB() {
                return GetUint16(0x22DB);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22DB(int value) {
                SetUint16(0x22DB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22DD/0x2178D.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22DD() {
                return GetUint16(0x22DD);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22DD(int value) {
                SetUint16(0x22DD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22DF/0x2178F.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22DF() {
                return GetUint16(0x22DF);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22DF(int value) {
                SetUint16(0x22DF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22E3/0x21793.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_22E3() {
                return GetUint8(0x22E3);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_22E3(int value) {
                SetUint8(0x22E3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x22FC/0x217AC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_22FC() {
                return GetUint16(0x22FC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_22FC(int value) {
                SetUint16(0x22FC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2460/0x21910.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2460() {
                return GetUint16(0x2460);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2460(int value) {
                SetUint16(0x2460, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2514/0x219C4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2514() {
                return GetUint16(0x2514);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2514(int value) {
                SetUint16(0x2514, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2516/0x219C6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2516() {
                return GetUint16(0x2516);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2516(int value) {
                SetUint16(0x2516, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2518/0x219C8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2518() {
                return GetUint16(0x2518);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2518(int value) {
                SetUint16(0x2518, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2570/0x21A20.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2570() {
                return GetUint16(0x2570);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2570(int value) {
                SetUint16(0x2570, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2580/0x21A30.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2580() {
                return GetUint8(0x2580);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2580(int value) {
                SetUint8(0x2580, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2580() {
                return GetUint16(0x2580);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2580(int value) {
                SetUint16(0x2580, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2581/0x21A31.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2581() {
                return GetUint8(0x2581);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2581(int value) {
                SetUint8(0x2581, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2582/0x21A32.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2582() {
                return GetUint16(0x2582);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2582(int value) {
                SetUint16(0x2582, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2772/0x21C22.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2772() {
                return GetUint16(0x2772);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2772(int value) {
                SetUint16(0x2772, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2784/0x21C34.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2784() {
                return GetUint16(0x2784);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2784(int value) {
                SetUint16(0x2784, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2786/0x21C36.
            // Operation not registered by running code
            public int GetWord16_1F4B_2786() {
                return GetUint16(0x2786);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_2786(int value) {
                SetUint16(0x2786, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2788/0x21C38.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2788() {
                return GetUint8(0x2788);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2788(int value) {
                SetUint8(0x2788, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2886/0x21D36.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2886() {
                return GetUint16(0x2886);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2886(int value) {
                SetUint16(0x2886, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2888/0x21D38.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_2888() {
                return GetUint16(0x2888);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2888(int value) {
                SetUint16(0x2888, value);
            }
            
// Getters and Setters for address 0x1F4B:0x288E/0x21D3E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_288E() {
                return GetUint8(0x288E);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_288E(int value) {
                SetUint8(0x288E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2896/0x21D46.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2896() {
                return GetUint8(0x2896);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2896(int value) {
                SetUint8(0x2896, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2897/0x21D47.
            // Operation not registered by running code
            public int GetByte8_1F4B_2897() {
                return GetUint8(0x2897);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2897(int value) {
                SetUint8(0x2897, value);
            }
            
// Getters and Setters for address 0x1F4B:0x289E/0x21D4E.
            // Operation not registered by running code
            public int GetByte8_1F4B_289E() {
                return GetUint8(0x289E);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_289E(int value) {
                SetUint8(0x289E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x289F/0x21D4F.
            // Operation not registered by running code
            public int GetByte8_1F4B_289F() {
                return GetUint8(0x289F);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_289F(int value) {
                SetUint8(0x289F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28A6/0x21D56.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_28A6() {
                return GetUint8(0x28A6);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_28A6(int value) {
                SetUint8(0x28A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28AE/0x21D5E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_28AE() {
                return GetUint8(0x28AE);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_28AE(int value) {
                SetUint8(0x28AE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28BE/0x21D6E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_28BE() {
                return GetUint8(0x28BE);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_28BE(int value) {
                SetUint8(0x28BE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28C7/0x21D77.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_28C7() {
                return GetUint16(0x28C7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_28C7(int value) {
                SetUint16(0x28C7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28C9/0x21D79.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_28C9() {
                return GetUint16(0x28C9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_28C9(int value) {
                SetUint16(0x28C9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28E7/0x21D97.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_28E7() {
                return GetUint8(0x28E7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_28E7(int value) {
                SetUint8(0x28E7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x28E8/0x21D98.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_28E8() {
                return GetUint8(0x28E8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_28E8(int value) {
                SetUint8(0x28E8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2941/0x21DF1.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2941() {
                return GetUint8(0x2941);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2941(int value) {
                SetUint8(0x2941, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2942/0x21DF2.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2942() {
                return GetUint8(0x2942);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_2942(int value) {
                SetUint8(0x2942, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2943/0x21DF3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2943() {
                return GetUint8(0x2943);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_2943(int value) {
                SetUint8(0x2943, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2944/0x21DF4.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_2944() {
                return GetUint8(0x2944);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_2944(int value) {
                SetUint8(0x2944, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3403/0x228B3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_3403() {
                return GetUint8(0x3403);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_3403(int value) {
                SetUint8(0x3403, value);
            }
            
// Getters and Setters for address 0x1F4B:0x35A6/0x22A56.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_35A6() {
                return GetUint16(0x35A6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_35A6(int value) {
                SetUint16(0x35A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x37E2/0x22C92.
            // Operation not registered by running code
            public int GetByte8_1F4B_37E2() {
                return GetUint8(0x37E2);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_37E2(int value) {
                SetUint8(0x37E2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3810/0x22CC0.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_3810() {
                return GetUint8(0x3810);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_3810(int value) {
                SetUint8(0x3810, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3813/0x22CC3.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_3813() {
                return GetUint16(0x3813);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3813(int value) {
                SetUint16(0x3813, value);
            }
            
// Getters and Setters for address 0x1F4B:0x381B/0x22CCB.
            // Operation not registered by running code
            public int GetWord16_1F4B_381B() {
                return GetUint16(0x381B);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_381B(int value) {
                SetUint16(0x381B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3821/0x22CD1.
            // Operation not registered by running code
            public int GetWord16_1F4B_3821() {
                return GetUint16(0x3821);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_3821(int value) {
                SetUint16(0x3821, value);
            }
            
// Getters and Setters for address 0x1F4B:0x38A6/0x22D56.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_38A6() {
                return GetUint16(0x38A6);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_38A6(int value) {
                SetUint16(0x38A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x38AF/0x22D5F.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_38AF() {
                return GetUint8(0x38AF);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_38AF(int value) {
                SetUint8(0x38AF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x38B5/0x22D65.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38B5() {
                return new SegmentedAddress(GetUint16(0x38B5 + 2), GetUint16(0x38B5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38B5(SegmentedAddress value) {
                SetUint16(0x38B5 + 2, value.GetSegment());
                SetUint16(0x38B5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38B9/0x22D69.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38B9() {
                return new SegmentedAddress(GetUint16(0x38B9 + 2), GetUint16(0x38B9));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38B9(SegmentedAddress value) {
                SetUint16(0x38B9 + 2, value.GetSegment());
                SetUint16(0x38B9, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38BD/0x22D6D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38BD() {
                return new SegmentedAddress(GetUint16(0x38BD + 2), GetUint16(0x38BD));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38BD(SegmentedAddress value) {
                SetUint16(0x38BD + 2, value.GetSegment());
                SetUint16(0x38BD, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38C1/0x22D71.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38C1() {
                return new SegmentedAddress(GetUint16(0x38C1 + 2), GetUint16(0x38C1));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38C1(SegmentedAddress value) {
                SetUint16(0x38C1 + 2, value.GetSegment());
                SetUint16(0x38C1, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38C5/0x22D75.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38C5() {
                return new SegmentedAddress(GetUint16(0x38C5 + 2), GetUint16(0x38C5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38C5(SegmentedAddress value) {
                SetUint16(0x38C5 + 2, value.GetSegment());
                SetUint16(0x38C5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38C9/0x22D79.
            // Was accessed via the following registers: DS, SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38C9() {
                return new SegmentedAddress(GetUint16(0x38C9 + 2), GetUint16(0x38C9));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38C9(SegmentedAddress value) {
                SetUint16(0x38C9 + 2, value.GetSegment());
                SetUint16(0x38C9, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38D1/0x22D81.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38D1() {
                return new SegmentedAddress(GetUint16(0x38D1 + 2), GetUint16(0x38D1));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38D1(SegmentedAddress value) {
                SetUint16(0x38D1 + 2, value.GetSegment());
                SetUint16(0x38D1, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38D5/0x22D85.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38D5() {
                return new SegmentedAddress(GetUint16(0x38D5 + 2), GetUint16(0x38D5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38D5(SegmentedAddress value) {
                SetUint16(0x38D5 + 2, value.GetSegment());
                SetUint16(0x38D5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38D9/0x22D89.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38D9() {
                return new SegmentedAddress(GetUint16(0x38D9 + 2), GetUint16(0x38D9));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38D9(SegmentedAddress value) {
                SetUint16(0x38D9 + 2, value.GetSegment());
                SetUint16(0x38D9, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38DD/0x22D8D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38DD() {
                return new SegmentedAddress(GetUint16(0x38DD + 2), GetUint16(0x38DD));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38DD(SegmentedAddress value) {
                SetUint16(0x38DD + 2, value.GetSegment());
                SetUint16(0x38DD, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38FB/0x22DAB.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_38FB() {
                return GetUint16(0x38FB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_38FB(int value) {
                SetUint16(0x38FB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x38FD/0x22DAD.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38FD() {
                return new SegmentedAddress(GetUint16(0x38FD + 2), GetUint16(0x38FD));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38FD(SegmentedAddress value) {
                SetUint16(0x38FD + 2, value.GetSegment());
                SetUint16(0x38FD, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3901/0x22DB1.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3901() {
                return new SegmentedAddress(GetUint16(0x3901 + 2), GetUint16(0x3901));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3901(SegmentedAddress value) {
                SetUint16(0x3901 + 2, value.GetSegment());
                SetUint16(0x3901, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3905/0x22DB5.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3905() {
                return new SegmentedAddress(GetUint16(0x3905 + 2), GetUint16(0x3905));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3905(SegmentedAddress value) {
                SetUint16(0x3905 + 2, value.GetSegment());
                SetUint16(0x3905, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x390D/0x22DBD.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_390D() {
                return new SegmentedAddress(GetUint16(0x390D + 2), GetUint16(0x390D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_390D(SegmentedAddress value) {
                SetUint16(0x390D + 2, value.GetSegment());
                SetUint16(0x390D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3915/0x22DC5.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3915() {
                return new SegmentedAddress(GetUint16(0x3915 + 2), GetUint16(0x3915));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3915(SegmentedAddress value) {
                SetUint16(0x3915 + 2, value.GetSegment());
                SetUint16(0x3915, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3919/0x22DC9.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3919() {
                return new SegmentedAddress(GetUint16(0x3919 + 2), GetUint16(0x3919));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3919(SegmentedAddress value) {
                SetUint16(0x3919 + 2, value.GetSegment());
                SetUint16(0x3919, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x391D/0x22DCD.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_391D() {
                return new SegmentedAddress(GetUint16(0x391D + 2), GetUint16(0x391D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_391D(SegmentedAddress value) {
                SetUint16(0x391D + 2, value.GetSegment());
                SetUint16(0x391D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3925/0x22DD5.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3925() {
                return new SegmentedAddress(GetUint16(0x3925 + 2), GetUint16(0x3925));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3925(SegmentedAddress value) {
                SetUint16(0x3925 + 2, value.GetSegment());
                SetUint16(0x3925, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3929/0x22DD9.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3929() {
                return new SegmentedAddress(GetUint16(0x3929 + 2), GetUint16(0x3929));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3929(SegmentedAddress value) {
                SetUint16(0x3929 + 2, value.GetSegment());
                SetUint16(0x3929, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3935/0x22DE5.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3935() {
                return new SegmentedAddress(GetUint16(0x3935 + 2), GetUint16(0x3935));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3935(SegmentedAddress value) {
                SetUint16(0x3935 + 2, value.GetSegment());
                SetUint16(0x3935, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3939/0x22DE9.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3939() {
                return new SegmentedAddress(GetUint16(0x3939 + 2), GetUint16(0x3939));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3939(SegmentedAddress value) {
                SetUint16(0x3939 + 2, value.GetSegment());
                SetUint16(0x3939, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3945/0x22DF5.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3945() {
                return new SegmentedAddress(GetUint16(0x3945 + 2), GetUint16(0x3945));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3945(SegmentedAddress value) {
                SetUint16(0x3945 + 2, value.GetSegment());
                SetUint16(0x3945, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x394D/0x22DFD.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_394D() {
                return new SegmentedAddress(GetUint16(0x394D + 2), GetUint16(0x394D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_394D(SegmentedAddress value) {
                SetUint16(0x394D + 2, value.GetSegment());
                SetUint16(0x394D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3951/0x22E01.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3951() {
                return new SegmentedAddress(GetUint16(0x3951 + 2), GetUint16(0x3951));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3951(SegmentedAddress value) {
                SetUint16(0x3951 + 2, value.GetSegment());
                SetUint16(0x3951, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3959/0x22E09.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3959() {
                return new SegmentedAddress(GetUint16(0x3959 + 2), GetUint16(0x3959));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3959(SegmentedAddress value) {
                SetUint16(0x3959 + 2, value.GetSegment());
                SetUint16(0x3959, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x396D/0x22E1D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_396D() {
                return new SegmentedAddress(GetUint16(0x396D + 2), GetUint16(0x396D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_396D(SegmentedAddress value) {
                SetUint16(0x396D + 2, value.GetSegment());
                SetUint16(0x396D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3971/0x22E21.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3971() {
                return new SegmentedAddress(GetUint16(0x3971 + 2), GetUint16(0x3971));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3971(SegmentedAddress value) {
                SetUint16(0x3971 + 2, value.GetSegment());
                SetUint16(0x3971, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3975/0x22E25.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3975() {
                return new SegmentedAddress(GetUint16(0x3975 + 2), GetUint16(0x3975));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3975(SegmentedAddress value) {
                SetUint16(0x3975 + 2, value.GetSegment());
                SetUint16(0x3975, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3977/0x22E27.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_3977() {
                return GetUint16(0x3977);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3977(int value) {
                SetUint16(0x3977, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3979/0x22E29.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3979() {
                return new SegmentedAddress(GetUint16(0x3979 + 2), GetUint16(0x3979));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3979(SegmentedAddress value) {
                SetUint16(0x3979 + 2, value.GetSegment());
                SetUint16(0x3979, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x397D/0x22E2D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_397D() {
                return new SegmentedAddress(GetUint16(0x397D + 2), GetUint16(0x397D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_397D(SegmentedAddress value) {
                SetUint16(0x397D + 2, value.GetSegment());
                SetUint16(0x397D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3981/0x22E31.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3981() {
                return new SegmentedAddress(GetUint16(0x3981 + 2), GetUint16(0x3981));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3981(SegmentedAddress value) {
                SetUint16(0x3981 + 2, value.GetSegment());
                SetUint16(0x3981, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3985/0x22E35.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3985() {
                return new SegmentedAddress(GetUint16(0x3985 + 2), GetUint16(0x3985));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3985(SegmentedAddress value) {
                SetUint16(0x3985 + 2, value.GetSegment());
                SetUint16(0x3985, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3989/0x22E39.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3989() {
                return new SegmentedAddress(GetUint16(0x3989 + 2), GetUint16(0x3989));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3989(SegmentedAddress value) {
                SetUint16(0x3989 + 2, value.GetSegment());
                SetUint16(0x3989, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x398D/0x22E3D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_398D() {
                return new SegmentedAddress(GetUint16(0x398D + 2), GetUint16(0x398D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_398D(SegmentedAddress value) {
                SetUint16(0x398D + 2, value.GetSegment());
                SetUint16(0x398D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3995/0x22E45.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3995() {
                return new SegmentedAddress(GetUint16(0x3995 + 2), GetUint16(0x3995));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3995(SegmentedAddress value) {
                SetUint16(0x3995 + 2, value.GetSegment());
                SetUint16(0x3995, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x39A5/0x22E55.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_39A5() {
                return new SegmentedAddress(GetUint16(0x39A5 + 2), GetUint16(0x39A5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_39A5(SegmentedAddress value) {
                SetUint16(0x39A5 + 2, value.GetSegment());
                SetUint16(0x39A5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x39A9/0x22E59.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_39A9() {
                return GetUint16(0x39A9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_39A9(int value) {
                SetUint16(0x39A9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x39B3/0x22E63.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_39B3() {
                return GetUint16(0x39B3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_39B3(int value) {
                SetUint16(0x39B3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x39B5/0x22E65.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_39B5() {
                return GetUint16(0x39B5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_39B5(int value) {
                SetUint16(0x39B5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x39B7/0x22E67.
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_39B7() {
                return GetUint32(0x39B7);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_39B7(int value) {
                SetUint32(0x39B7, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_39B7() {
                return new SegmentedAddress(GetUint16(0x39B7 + 2), GetUint16(0x39B7));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_39B7(SegmentedAddress value) {
                SetUint16(0x39B7 + 2, value.GetSegment());
                SetUint16(0x39B7, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x39B9/0x22E69.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_39B9() {
                return GetUint16(0x39B9);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_39B9(int value) {
                SetUint16(0x39B9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CBC/0x2316C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_3CBC() {
                return GetUint16(0x3CBC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3CBC(int value) {
                SetUint16(0x3CBC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CBE/0x2316E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_3CBE() {
                return GetUint16(0x3CBE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_3CBE(int value) {
                SetUint16(0x3CBE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4540/0x239F0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4540() {
                return GetUint16(0x4540);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4540(int value) {
                SetUint16(0x4540, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46D6/0x23B86.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46D6() {
                return GetUint8(0x46D6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46D6(int value) {
                SetUint8(0x46D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46D7/0x23B87.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46D7() {
                return GetUint8(0x46D7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46D7(int value) {
                SetUint8(0x46D7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46D8/0x23B88.
            // Operation not registered by running code
            public int GetByte8_1F4B_46D8() {
                return GetUint8(0x46D8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46D8(int value) {
                SetUint8(0x46D8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46D9/0x23B89.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46D9() {
                return GetUint8(0x46D9);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_46D9(int value) {
                SetUint8(0x46D9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46DA/0x23B8A.
            // Operation not registered by running code
            public int GetByte8_1F4B_46DA() {
                return GetUint8(0x46DA);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46DA(int value) {
                SetUint8(0x46DA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46DB/0x23B8B.
            // Operation not registered by running code
            public int GetWord16_1F4B_46DB() {
                return GetUint16(0x46DB);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_46DB(int value) {
                SetUint16(0x46DB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46DD/0x23B8D.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46DD() {
                return GetUint8(0x46DD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46DD(int value) {
                SetUint8(0x46DD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46DE/0x23B8E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46DE() {
                return GetUint8(0x46DE);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46DE(int value) {
                SetUint8(0x46DE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46DF/0x23B8F.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46DF() {
                return GetUint8(0x46DF);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46DF(int value) {
                SetUint8(0x46DF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46E0/0x23B90.
            // Operation not registered by running code
            public int GetByte8_1F4B_46E0() {
                return GetUint8(0x46E0);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46E0(int value) {
                SetUint8(0x46E0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46E3/0x23B93.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_46E3() {
                return GetUint16(0x46E3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_46E3(int value) {
                SetUint16(0x46E3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46E5/0x23B95.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_46E5() {
                return GetUint16(0x46E5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_46E5(int value) {
                SetUint16(0x46E5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46E7/0x23B97.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_46E7() {
                return GetUint16(0x46E7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_46E7(int value) {
                SetUint16(0x46E7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46E9/0x23B99.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_46E9() {
                return GetUint16(0x46E9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_46E9(int value) {
                SetUint16(0x46E9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46EB/0x23B9B.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46EB() {
                return GetUint8(0x46EB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46EB(int value) {
                SetUint8(0x46EB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46EC/0x23B9C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46EC() {
                return GetUint8(0x46EC);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_46EC(int value) {
                SetUint8(0x46EC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46ED/0x23B9D.
            // Operation not registered by running code
            public int GetWord16_1F4B_46ED() {
                return GetUint16(0x46ED);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_46ED(int value) {
                SetUint16(0x46ED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46F3/0x23BA3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46F3() {
                return GetUint8(0x46F3);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46F3(int value) {
                SetUint8(0x46F3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46F4/0x23BA4.
            // Operation not registered by running code
            public int GetByte8_1F4B_46F4() {
                return GetUint8(0x46F4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46F4(int value) {
                SetUint8(0x46F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46F6/0x23BA6.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46F6() {
                return GetUint8(0x46F6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_46F6(int value) {
                SetUint8(0x46F6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46F8/0x23BA8.
            // Operation not registered by running code
            public int GetWord16_1F4B_46F8() {
                return GetUint16(0x46F8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_46F8(int value) {
                SetUint16(0x46F8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46FA/0x23BAA.
            // Operation not registered by running code
            public int GetWord16_1F4B_46FA() {
                return GetUint16(0x46FA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_46FA(int value) {
                SetUint16(0x46FA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46FC/0x23BAC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_46FC() {
                return GetUint16(0x46FC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_46FC(int value) {
                SetUint16(0x46FC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x46FF/0x23BAF.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_46FF() {
                return GetUint8(0x46FF);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_46FF(int value) {
                SetUint8(0x46FF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4723/0x23BD3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4723() {
                return GetUint8(0x4723);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4723(int value) {
                SetUint8(0x4723, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4726/0x23BD6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4726() {
                return GetUint8(0x4726);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4726(int value) {
                SetUint8(0x4726, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4727/0x23BD7.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4727() {
                return GetUint8(0x4727);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4727(int value) {
                SetUint8(0x4727, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4728/0x23BD8.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4728() {
                return GetUint8(0x4728);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4728(int value) {
                SetUint8(0x4728, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4729/0x23BD9.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4729() {
                return GetUint16(0x4729);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4729(int value) {
                SetUint16(0x4729, value);
            }
            
// Getters and Setters for address 0x1F4B:0x472B/0x23BDB.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_472B() {
                return GetUint16(0x472B);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_472B(int value) {
                SetUint16(0x472B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x472D/0x23BDD.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_472D() {
                return GetUint16(0x472D);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_472D(int value) {
                SetUint16(0x472D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x472F/0x23BDF.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_472F() {
                return GetUint16(0x472F);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_472F(int value) {
                SetUint16(0x472F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4731/0x23BE1.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4731() {
                return GetUint8(0x4731);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4731(int value) {
                SetUint8(0x4731, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4732/0x23BE2.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4732() {
                return GetUint8(0x4732);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4732(int value) {
                SetUint8(0x4732, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4733/0x23BE3.
            // Operation not registered by running code
            public int GetWord16_1F4B_4733() {
                return GetUint16(0x4733);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4733(int value) {
                SetUint16(0x4733, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4735/0x23BE5.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4735() {
                return GetUint8(0x4735);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4735(int value) {
                SetUint8(0x4735, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4737/0x23BE7.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4737() {
                return GetUint8(0x4737);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4737(int value) {
                SetUint8(0x4737, value);
            }
            
// Getters and Setters for address 0x1F4B:0x473B/0x23BEB.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_473B() {
                return GetUint8(0x473B);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_473B(int value) {
                SetUint8(0x473B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x473C/0x23BEC.
            // Operation not registered by running code
            public int GetWord16_1F4B_473C() {
                return GetUint16(0x473C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_473C(int value) {
                SetUint16(0x473C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x473E/0x23BEE.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_473E() {
                return GetUint8(0x473E);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_473E(int value) {
                SetUint8(0x473E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x473F/0x23BEF.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_473F() {
                return GetUint16(0x473F);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_473F(int value) {
                SetUint16(0x473F, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_473F() {
                return GetUint32(0x473F);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_473F(int value) {
                SetUint32(0x473F, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_473F() {
                return new SegmentedAddress(GetUint16(0x473F + 2), GetUint16(0x473F));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_473F(SegmentedAddress value) {
                SetUint16(0x473F + 2, value.GetSegment());
                SetUint16(0x473F, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x4741/0x23BF1.
            // Operation not registered by running code
            public int GetWord16_1F4B_4741() {
                return GetUint16(0x4741);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4741(int value) {
                SetUint16(0x4741, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4743/0x23BF3.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4743() {
                return GetUint16(0x4743);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4743(int value) {
                SetUint16(0x4743, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4745/0x23BF5.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4745() {
                return GetUint16(0x4745);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4745(int value) {
                SetUint16(0x4745, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4747/0x23BF7.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4747() {
                return GetUint16(0x4747);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4747(int value) {
                SetUint16(0x4747, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4749/0x23BF9.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4749() {
                return GetUint16(0x4749);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4749(int value) {
                SetUint16(0x4749, value);
            }
            
// Getters and Setters for address 0x1F4B:0x474B/0x23BFB.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_474B() {
                return GetUint16(0x474B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_474B(int value) {
                SetUint16(0x474B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x474F/0x23BFF.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_474F() {
                return GetUint16(0x474F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_474F(int value) {
                SetUint16(0x474F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4751/0x23C01.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4751() {
                return GetUint8(0x4751);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4751(int value) {
                SetUint8(0x4751, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4752/0x23C02.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4752() {
                return GetUint16(0x4752);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4752(int value) {
                SetUint16(0x4752, value);
            }
            
// Getters and Setters for address 0x1F4B:0x476A/0x23C1A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_476A() {
                return GetUint8(0x476A);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_476A(int value) {
                SetUint8(0x476A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x476B/0x23C1B.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_476B() {
                return GetUint8(0x476B);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_476B(int value) {
                SetUint8(0x476B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x476E/0x23C1E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_476E() {
                return GetUint16(0x476E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_476E(int value) {
                SetUint16(0x476E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4770/0x23C20.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4770() {
                return GetUint16(0x4770);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4770(int value) {
                SetUint16(0x4770, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4772/0x23C22.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4772() {
                return GetUint16(0x4772);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4772(int value) {
                SetUint16(0x4772, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4774/0x23C24.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4774() {
                return GetUint8(0x4774);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_4774(int value) {
                SetUint8(0x4774, value);
            }
            
// Getters and Setters for address 0x1F4B:0x477C/0x23C2C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_477C() {
                return GetUint16(0x477C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_477C(int value) {
                SetUint16(0x477C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x477E/0x23C2E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_477E() {
                return GetUint8(0x477E);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_477E(int value) {
                SetUint8(0x477E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x477F/0x23C2F.
            // Operation not registered by running code
            public int GetByte8_1F4B_477F() {
                return GetUint8(0x477F);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_477F(int value) {
                SetUint8(0x477F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4780/0x23C30.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4780() {
                return GetUint16(0x4780);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4780(int value) {
                SetUint16(0x4780, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4782/0x23C32.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4782() {
                return GetUint16(0x4782);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4782(int value) {
                SetUint16(0x4782, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4784/0x23C34.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4784() {
                return GetUint16(0x4784);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4784(int value) {
                SetUint16(0x4784, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4786/0x23C36.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4786() {
                return GetUint16(0x4786);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4786(int value) {
                SetUint16(0x4786, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4788/0x23C38.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4788() {
                return GetUint16(0x4788);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4788(int value) {
                SetUint16(0x4788, value);
            }
            
// Getters and Setters for address 0x1F4B:0x478A/0x23C3A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_478A() {
                return GetUint16(0x478A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_478A(int value) {
                SetUint16(0x478A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x478C/0x23C3C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_478C() {
                return GetUint8(0x478C);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_478C(int value) {
                SetUint8(0x478C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x478D/0x23C3D.
            // Operation not registered by running code
            public int GetWord16_1F4B_478D() {
                return GetUint16(0x478D);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_478D(int value) {
                SetUint16(0x478D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x478F/0x23C3F.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_478F() {
                return GetUint16(0x478F);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_478F(int value) {
                SetUint16(0x478F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4791/0x23C41.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4791() {
                return GetUint16(0x4791);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4791(int value) {
                SetUint16(0x4791, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4793/0x23C43.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_4793() {
                return GetUint16(0x4793);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4793(int value) {
                SetUint16(0x4793, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4795/0x23C45.
            // Operation not registered by running code
            public int GetWord16_1F4B_4795() {
                return GetUint16(0x4795);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4795(int value) {
                SetUint16(0x4795, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4797/0x23C47.
            // Operation not registered by running code
            public int GetWord16_1F4B_4797() {
                return GetUint16(0x4797);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_4797(int value) {
                SetUint16(0x4797, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4799/0x23C49.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_4799() {
                return GetUint8(0x4799);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_4799(int value) {
                SetUint8(0x4799, value);
            }
            
// Getters and Setters for address 0x1F4B:0x479A/0x23C4A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_479A() {
                return GetUint16(0x479A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_479A(int value) {
                SetUint16(0x479A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x479C/0x23C4C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_479C() {
                return GetUint16(0x479C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_479C(int value) {
                SetUint16(0x479C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x479E/0x23C4E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_479E() {
                return GetUint16(0x479E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_479E(int value) {
                SetUint16(0x479E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A0/0x23C50.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47A0() {
                return GetUint16(0x47A0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47A0(int value) {
                SetUint16(0x47A0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A2/0x23C52.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47A2() {
                return GetUint16(0x47A2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47A2(int value) {
                SetUint16(0x47A2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A4/0x23C54.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47A4() {
                return GetUint8(0x47A4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A4(int value) {
                SetUint8(0x47A4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A5/0x23C55.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47A5() {
                return GetUint8(0x47A5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A5(int value) {
                SetUint8(0x47A5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A6/0x23C56.
            // Operation not registered by running code
            public int GetByte8_1F4B_47A6() {
                return GetUint8(0x47A6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A6(int value) {
                SetUint8(0x47A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A7/0x23C57.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47A7() {
                return GetUint8(0x47A7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A7(int value) {
                SetUint8(0x47A7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A8/0x23C58.
            // Operation not registered by running code
            public int GetByte8_1F4B_47A8() {
                return GetUint8(0x47A8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A8(int value) {
                SetUint8(0x47A8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47A9/0x23C59.
            // Operation not registered by running code
            public int GetByte8_1F4B_47A9() {
                return GetUint8(0x47A9);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47A9(int value) {
                SetUint8(0x47A9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47AA/0x23C5A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47AA() {
                return GetUint16(0x47AA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47AA(int value) {
                SetUint16(0x47AA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47AC/0x23C5C.
            // Operation not registered by running code
            public int GetWord16_1F4B_47AC() {
                return GetUint16(0x47AC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47AC(int value) {
                SetUint16(0x47AC, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_47AC() {
                return GetUint32(0x47AC);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_47AC(int value) {
                SetUint32(0x47AC, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_47AC() {
                return new SegmentedAddress(GetUint16(0x47AC + 2), GetUint16(0x47AC));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_47AC(SegmentedAddress value) {
                SetUint16(0x47AC + 2, value.GetSegment());
                SetUint16(0x47AC, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x47AE/0x23C5E.
            // Operation not registered by running code
            public int GetWord16_1F4B_47AE() {
                return GetUint16(0x47AE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47AE(int value) {
                SetUint16(0x47AE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47B0/0x23C60.
            // Operation not registered by running code
            public int GetWord16_1F4B_47B0() {
                return GetUint16(0x47B0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47B0(int value) {
                SetUint16(0x47B0, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_47B0() {
                return GetUint32(0x47B0);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_47B0(int value) {
                SetUint32(0x47B0, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_47B0() {
                return new SegmentedAddress(GetUint16(0x47B0 + 2), GetUint16(0x47B0));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_47B0(SegmentedAddress value) {
                SetUint16(0x47B0 + 2, value.GetSegment());
                SetUint16(0x47B0, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x47B2/0x23C62.
            // Operation not registered by running code
            public int GetWord16_1F4B_47B2() {
                return GetUint16(0x47B2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47B2(int value) {
                SetUint16(0x47B2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47B4/0x23C64.
            // Operation not registered by running code
            public int GetWord16_1F4B_47B4() {
                return GetUint16(0x47B4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47B4(int value) {
                SetUint16(0x47B4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47B6/0x23C66.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47B6() {
                return GetUint16(0x47B6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47B6(int value) {
                SetUint16(0x47B6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47B8/0x23C68.
            // Operation not registered by running code
            public int GetWord16_1F4B_47B8() {
                return GetUint16(0x47B8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47B8(int value) {
                SetUint16(0x47B8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47BA/0x23C6A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47BA() {
                return GetUint16(0x47BA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47BA(int value) {
                SetUint16(0x47BA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47BC/0x23C6C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47BC() {
                return GetUint16(0x47BC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47BC(int value) {
                SetUint16(0x47BC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47BE/0x23C6E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47BE() {
                return GetUint16(0x47BE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47BE(int value) {
                SetUint16(0x47BE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47C2/0x23C72.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47C2() {
                return GetUint8(0x47C2);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47C2(int value) {
                SetUint8(0x47C2, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47C2() {
                return GetUint16(0x47C2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47C2(int value) {
                SetUint16(0x47C2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47C3/0x23C73.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47C3() {
                return GetUint8(0x47C3);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47C3(int value) {
                SetUint8(0x47C3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47C4/0x23C74.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47C4() {
                return GetUint8(0x47C4);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_47C4(int value) {
                SetUint8(0x47C4, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47C4() {
                return GetUint16(0x47C4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47C4(int value) {
                SetUint16(0x47C4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47C6/0x23C76.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47C6() {
                return GetUint16(0x47C6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47C6(int value) {
                SetUint16(0x47C6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47C8/0x23C78.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47C8() {
                return GetUint16(0x47C8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47C8(int value) {
                SetUint16(0x47C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47CA/0x23C7A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47CA() {
                return GetUint16(0x47CA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47CA(int value) {
                SetUint16(0x47CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47CE/0x23C7E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47CE() {
                return GetUint16(0x47CE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47CE(int value) {
                SetUint16(0x47CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47D0/0x23C80.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47D0() {
                return GetUint8(0x47D0);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47D0(int value) {
                SetUint8(0x47D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47D1/0x23C81.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47D1() {
                return GetUint8(0x47D1);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47D1(int value) {
                SetUint8(0x47D1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47D2/0x23C82.
            // Operation not registered by running code
            public int GetWord16_1F4B_47D2() {
                return GetUint16(0x47D2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47D2(int value) {
                SetUint16(0x47D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47DC/0x23C8C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47DC() {
                return GetUint8(0x47DC);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_47DC(int value) {
                SetUint8(0x47DC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47DD/0x23C8D.
            // Operation not registered by running code
            public int GetByte8_1F4B_47DD() {
                return GetUint8(0x47DD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47DD(int value) {
                SetUint8(0x47DD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47DE/0x23C8E.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47DE() {
                return GetUint8(0x47DE);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_47DE(int value) {
                SetUint8(0x47DE, value);
            }
            
            // Operation not registered by running code
            public int GetWord16_1F4B_47DE() {
                return GetUint16(0x47DE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47DE(int value) {
                SetUint16(0x47DE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47E0/0x23C90.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47E0() {
                return GetUint8(0x47E0);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47E0(int value) {
                SetUint8(0x47E0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47E1/0x23C91.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47E1() {
                return GetUint8(0x47E1);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_47E1(int value) {
                SetUint8(0x47E1, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47E1() {
                return GetUint16(0x47E1);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47E1(int value) {
                SetUint16(0x47E1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47E6/0x23C96.
            // Operation not registered by running code
            public int GetWord16_1F4B_47E6() {
                return GetUint16(0x47E6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47E6(int value) {
                SetUint16(0x47E6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47E8/0x23C98.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47E8() {
                return GetUint16(0x47E8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47E8(int value) {
                SetUint16(0x47E8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47EA/0x23C9A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47EA() {
                return GetUint16(0x47EA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47EA(int value) {
                SetUint16(0x47EA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47EC/0x23C9C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47EC() {
                return GetUint8(0x47EC);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47EC(int value) {
                SetUint8(0x47EC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47ED/0x23C9D.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_47ED() {
                return GetUint8(0x47ED);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_47ED(int value) {
                SetUint8(0x47ED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47EE/0x23C9E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47EE() {
                return GetUint16(0x47EE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47EE(int value) {
                SetUint16(0x47EE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47F0/0x23CA0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47F0() {
                return GetUint16(0x47F0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47F0(int value) {
                SetUint16(0x47F0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47F2/0x23CA2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47F2() {
                return GetUint16(0x47F2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47F2(int value) {
                SetUint16(0x47F2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47F4/0x23CA4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47F4() {
                return GetUint16(0x47F4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47F4(int value) {
                SetUint16(0x47F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47F6/0x23CA6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_47F6() {
                return GetUint16(0x47F6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_47F6(int value) {
                SetUint16(0x47F6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x487E/0x23D2E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_487E() {
                return GetUint16(0x487E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_487E(int value) {
                SetUint16(0x487E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x494A/0x23DFA.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_494A() {
                return GetUint16(0x494A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_494A(int value) {
                SetUint16(0x494A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x494C/0x23DFC.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_494C() {
                return GetUint16(0x494C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_494C(int value) {
                SetUint16(0x494C, value);
            }
            
// Getters and Setters for address 0x2411:0x38ED/0x279FD.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_2411_38ED() {
                return new SegmentedAddress(GetUint16(0x38ED + 2), GetUint16(0x38ED));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_2411_38ED(SegmentedAddress value) {
                SetUint16(0x38ED + 2, value.GetSegment());
                SetUint16(0x38ED, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xA5C0/0x29A70.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5C0() {
                return GetUint16(0xA5C0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_A5C0(int value) {
                SetUint16(0xA5C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA9D0/0x29E80.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A9D0() {
                return GetUint16(0xA9D0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_A9D0(int value) {
                SetUint16(0xA9D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAA72/0x29F22.
            // Operation not registered by running code
            public int GetWord16_1F4B_AA72() {
                return GetUint16(0xAA72);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_AA72(int value) {
                SetUint16(0xAA72, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_AA72() {
                return GetUint32(0xAA72);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_AA72(int value) {
                SetUint32(0xAA72, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_AA72() {
                return new SegmentedAddress(GetUint16(0xAA72 + 2), GetUint16(0xAA72));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_AA72(SegmentedAddress value) {
                SetUint16(0xAA72 + 2, value.GetSegment());
                SetUint16(0xAA72, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xAA74/0x29F24.
            // Operation not registered by running code
            public int GetWord16_1F4B_AA74() {
                return GetUint16(0xAA74);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_AA74(int value) {
                SetUint16(0xAA74, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAAD6/0x29F86.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_AAD6() {
                return GetUint16(0xAAD6);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_AAD6(int value) {
                SetUint16(0xAAD6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xAB84/0x2A034.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_AB84() {
                return GetUint16(0xAB84);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_AB84(int value) {
                SetUint16(0xAB84, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE66/0x2C316.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE66() {
                return GetUint8(0xCE66);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE66(int value) {
                SetUint8(0xCE66, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE68/0x2C318.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_CE68() {
                return GetUint16(0xCE68);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE68(int value) {
                SetUint16(0xCE68, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE70/0x2C320.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE70() {
                return GetUint8(0xCE70);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_CE70(int value) {
                SetUint8(0xCE70, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE71/0x2C321.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE71() {
                return GetUint8(0xCE71);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE71(int value) {
                SetUint8(0xCE71, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE72/0x2C322.
            // Operation not registered by running code
            public int GetByte8_1F4B_CE72() {
                return GetUint8(0xCE72);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE72(int value) {
                SetUint8(0xCE72, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE73/0x2C323.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE73() {
                return GetUint8(0xCE73);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE73(int value) {
                SetUint8(0xCE73, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE74/0x2C324.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_CE74() {
                return GetUint16(0xCE74);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE74(int value) {
                SetUint16(0xCE74, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE76/0x2C326.
            // Operation not registered by running code
            public int GetByte8_1F4B_CE76() {
                return GetUint8(0xCE76);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE76(int value) {
                SetUint8(0xCE76, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE77/0x2C327.
            // Operation not registered by running code
            public int GetByte8_1F4B_CE77() {
                return GetUint8(0xCE77);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE77(int value) {
                SetUint8(0xCE77, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE78/0x2C328.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_CE78() {
                return GetUint16(0xCE78);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE78(int value) {
                SetUint16(0xCE78, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE7A/0x2C32A.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_CE7A() {
                return GetUint16(0xCE7A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE7A(int value) {
                SetUint16(0xCE7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE7B/0x2C32B.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_CE7B() {
                return GetUint16(0xCE7B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_CE7B(int value) {
                SetUint16(0xCE7B, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE7C/0x2C32C.
            // Operation not registered by running code
            public int GetWord16_1F4B_CE7C() {
                return GetUint16(0xCE7C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE7C(int value) {
                SetUint16(0xCE7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE80/0x2C330.
            // Operation not registered by running code
            public int GetByte8_1F4B_CE80() {
                return GetUint8(0xCE80);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE80(int value) {
                SetUint8(0xCE80, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE9A/0x2C34A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE9A() {
                return GetUint8(0xCE9A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_CE9A(int value) {
                SetUint8(0xCE9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE9D/0x2C34D.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CE9D() {
                return GetUint8(0xCE9D);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CE9D(int value) {
                SetUint8(0xCE9D, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEBA/0x2C36A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CEBA() {
                return GetUint8(0xCEBA);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CEBA(int value) {
                SetUint8(0xCEBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEE6/0x2C396.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CEE6() {
                return GetUint8(0xCEE6);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_CEE6(int value) {
                SetUint8(0xCEE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEE8/0x2C398.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CEE8() {
                return GetUint8(0xCEE8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CEE8(int value) {
                SetUint8(0xCEE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEE9/0x2C399.
            // Operation not registered by running code
            public int GetByte8_1F4B_CEE9() {
                return GetUint8(0xCEE9);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CEE9(int value) {
                SetUint8(0xCEE9, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEEA/0x2C39A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CEEA() {
                return GetUint8(0xCEEA);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_CEEA(int value) {
                SetUint8(0xCEEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCEEB/0x2C39B.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_CEEB() {
                return GetUint8(0xCEEB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_CEEB(int value) {
                SetUint8(0xCEEB, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD816/0x2CCC6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D816() {
                return GetUint16(0xD816);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_D816(int value) {
                SetUint16(0xD816, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD820/0x2CCD0.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D820() {
                return GetUint16(0xD820);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D820(int value) {
                SetUint16(0xD820, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD824/0x2CCD4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D824() {
                return GetUint16(0xD824);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D824(int value) {
                SetUint16(0xD824, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD826/0x2CCD6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D826() {
                return GetUint16(0xD826);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D826(int value) {
                SetUint16(0xD826, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD828/0x2CCD8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D828() {
                return GetUint16(0xD828);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D828(int value) {
                SetUint16(0xD828, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD82C/0x2CCDC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D82C() {
                return GetUint16(0xD82C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D82C(int value) {
                SetUint16(0xD82C, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD82E/0x2CCDE.
            // Operation not registered by running code
            public int GetWord16_1F4B_D82E() {
                return GetUint16(0xD82E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D82E(int value) {
                SetUint16(0xD82E, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD830/0x2CCE0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D830() {
                return GetUint16(0xD830);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D830(int value) {
                SetUint16(0xD830, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD832/0x2CCE2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_D832() {
                return GetUint16(0xD832);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_D832(int value) {
                SetUint16(0xD832, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD834/0x2CCE4.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D834() {
                return GetUint16(0xD834);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D834(int value) {
                SetUint16(0xD834, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD836/0x2CCE6.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_D836() {
                return GetUint16(0xD836);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D836(int value) {
                SetUint16(0xD836, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD838/0x2CCE8.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D838() {
                return GetUint16(0xD838);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D838(int value) {
                SetUint16(0xD838, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD83A/0x2CCEA.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D83A() {
                return GetUint16(0xD83A);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D83A(int value) {
                SetUint16(0xD83A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBB2/0x2D062.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DBB2() {
                return GetUint16(0xDBB2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBB2(int value) {
                SetUint16(0xDBB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBB4/0x2D064.
            // Operation not registered by running code
            public int GetByte8_1F4B_DBB4() {
                return GetUint8(0xDBB4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBB4(int value) {
                SetUint8(0xDBB4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBB5/0x2D065.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBB5() {
                return GetUint8(0xDBB5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBB5(int value) {
                SetUint8(0xDBB5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBB6/0x2D066.
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_DBB6() {
                return GetUint32(0xDBB6);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DBB6(int value) {
                SetUint32(0xDBB6, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DBB6() {
                return new SegmentedAddress(GetUint16(0xDBB6 + 2), GetUint16(0xDBB6));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DBB6(SegmentedAddress value) {
                SetUint16(0xDBB6 + 2, value.GetSegment());
                SetUint16(0xDBB6, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDBBA/0x2D06A.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DBBA() {
                return GetUint16(0xDBBA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBBA(int value) {
                SetUint16(0xDBBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBBC/0x2D06C.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBBC() {
                return GetUint16(0xDBBC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBBC(int value) {
                SetUint16(0xDBBC, value);
            }
            
            // Was accessed via the following registers: SS
            public int GetDword32_1F4B_DBBC() {
                return GetUint32(0xDBBC);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DBBC(int value) {
                SetUint32(0xDBBC, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DBBC() {
                return new SegmentedAddress(GetUint16(0xDBBC + 2), GetUint16(0xDBBC));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DBBC(SegmentedAddress value) {
                SetUint16(0xDBBC + 2, value.GetSegment());
                SetUint16(0xDBBC, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDBBE/0x2D06E.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBBE() {
                return GetUint16(0xDBBE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBBE(int value) {
                SetUint16(0xDBBE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBC8/0x2D078.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBC8() {
                return GetUint16(0xDBC8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBC8(int value) {
                SetUint16(0xDBC8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBCA/0x2D07A.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBCA() {
                return GetUint8(0xDBCA);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBCA(int value) {
                SetUint8(0xDBCA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBCB/0x2D07B.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBCB() {
                return GetUint8(0xDBCB);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBCB(int value) {
                SetUint8(0xDBCB, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBCC/0x2D07C.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBCC() {
                return GetUint8(0xDBCC);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBCC(int value) {
                SetUint8(0xDBCC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBCD/0x2D07D.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBCD() {
                return GetUint8(0xDBCD);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBCD(int value) {
                SetUint8(0xDBCD, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBCE/0x2D07E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBCE() {
                return GetUint16(0xDBCE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBCE(int value) {
                SetUint16(0xDBCE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBD0/0x2D080.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBD0() {
                return GetUint16(0xDBD0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBD0(int value) {
                SetUint16(0xDBD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBD2/0x2D082.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBD2() {
                return GetUint16(0xDBD2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBD2(int value) {
                SetUint16(0xDBD2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBD6/0x2D086.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBD6() {
                return GetUint16(0xDBD6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBD6(int value) {
                SetUint16(0xDBD6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBD8/0x2D088.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBD8() {
                return GetUint16(0xDBD8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBD8(int value) {
                SetUint16(0xDBD8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBDA/0x2D08A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBDA() {
                return GetUint16(0xDBDA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBDA(int value) {
                SetUint16(0xDBDA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBDE/0x2D08E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBDE() {
                return GetUint16(0xDBDE);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_DBDE(int value) {
                SetUint16(0xDBDE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE0/0x2D090.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBE0() {
                return GetUint16(0xDBE0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBE0(int value) {
                SetUint16(0xDBE0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE2/0x2D092.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBE2() {
                return GetUint16(0xDBE2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBE2(int value) {
                SetUint16(0xDBE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE4/0x2D094.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBE4() {
                return GetUint8(0xDBE4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBE4(int value) {
                SetUint8(0xDBE4, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBE4() {
                return GetUint16(0xDBE4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBE4(int value) {
                SetUint16(0xDBE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE5/0x2D095.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBE5() {
                return GetUint8(0xDBE5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBE5(int value) {
                SetUint8(0xDBE5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE6/0x2D096.
            // Operation not registered by running code
            public int GetByte8_1F4B_DBE6() {
                return GetUint8(0xDBE6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBE6(int value) {
                SetUint8(0xDBE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE7/0x2D097.
            // Operation not registered by running code
            public int GetByte8_1F4B_DBE7() {
                return GetUint8(0xDBE7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DBE7(int value) {
                SetUint8(0xDBE7, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBE8/0x2D098.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBE8() {
                return GetUint16(0xDBE8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBE8(int value) {
                SetUint16(0xDBE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBEA/0x2D09A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBEA() {
                return GetUint16(0xDBEA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBEA(int value) {
                SetUint16(0xDBEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBEC/0x2D09C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBEC() {
                return GetUint16(0xDBEC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBEC(int value) {
                SetUint16(0xDBEC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBEE/0x2D09E.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DBEE() {
                return GetUint16(0xDBEE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBEE(int value) {
                SetUint16(0xDBEE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBF6/0x2D0A6.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBF6() {
                return GetUint16(0xDBF6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBF6(int value) {
                SetUint16(0xDBF6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBF8/0x2D0A8.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBF8() {
                return GetUint16(0xDBF8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBF8(int value) {
                SetUint16(0xDBF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBFA/0x2D0AA.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBFA() {
                return GetUint16(0xDBFA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBFA(int value) {
                SetUint16(0xDBFA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBFC/0x2D0AC.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBFC() {
                return GetUint16(0xDBFC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBFC(int value) {
                SetUint16(0xDBFC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBFE/0x2D0AE.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBFE() {
                return GetUint8(0xDBFE);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_DBFE(int value) {
                SetUint8(0xDBFE, value);
            }
            
            // Operation not registered by running code
            public int GetWord16_1F4B_DBFE() {
                return GetUint16(0xDBFE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBFE(int value) {
                SetUint16(0xDBFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBFF/0x2D0AF.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DBFF() {
                return GetUint8(0xDBFF);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_DBFF(int value) {
                SetUint8(0xDBFF, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC00/0x2D0B0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC00() {
                return GetUint16(0xDC00);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC00(int value) {
                SetUint16(0xDC00, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC02/0x2D0B2.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC02() {
                return GetUint16(0xDC02);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC02(int value) {
                SetUint16(0xDC02, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC04/0x2D0B4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC04() {
                return GetUint16(0xDC04);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC04(int value) {
                SetUint16(0xDC04, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC06/0x2D0B6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC06() {
                return GetUint16(0xDC06);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC06(int value) {
                SetUint16(0xDC06, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC08/0x2D0B8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC08() {
                return GetUint16(0xDC08);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC08(int value) {
                SetUint16(0xDC08, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC0A/0x2D0BA.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC0A() {
                return GetUint16(0xDC0A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC0A(int value) {
                SetUint16(0xDC0A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC0C/0x2D0BC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC0C() {
                return GetUint16(0xDC0C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC0C(int value) {
                SetUint16(0xDC0C, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_DC0C() {
                return GetUint32(0xDC0C);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DC0C(int value) {
                SetUint32(0xDC0C, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DC0C() {
                return new SegmentedAddress(GetUint16(0xDC0C + 2), GetUint16(0xDC0C));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DC0C(SegmentedAddress value) {
                SetUint16(0xDC0C + 2, value.GetSegment());
                SetUint16(0xDC0C, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDC0E/0x2D0BE.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC0E() {
                return GetUint16(0xDC0E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC0E(int value) {
                SetUint16(0xDC0E, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC10/0x2D0C0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC10() {
                return GetUint16(0xDC10);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC10(int value) {
                SetUint16(0xDC10, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_DC10() {
                return GetUint32(0xDC10);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DC10(int value) {
                SetUint32(0xDC10, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DC10() {
                return new SegmentedAddress(GetUint16(0xDC10 + 2), GetUint16(0xDC10));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DC10(SegmentedAddress value) {
                SetUint16(0xDC10 + 2, value.GetSegment());
                SetUint16(0xDC10, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDC12/0x2D0C2.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC12() {
                return GetUint16(0xDC12);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC12(int value) {
                SetUint16(0xDC12, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC14/0x2D0C4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC14() {
                return GetUint16(0xDC14);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC14(int value) {
                SetUint16(0xDC14, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC16/0x2D0C6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC16() {
                return GetUint16(0xDC16);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC16(int value) {
                SetUint16(0xDC16, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC18/0x2D0C8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC18() {
                return GetUint16(0xDC18);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC18(int value) {
                SetUint16(0xDC18, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC1A/0x2D0CA.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC1A() {
                return GetUint16(0xDC1A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC1A(int value) {
                SetUint16(0xDC1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC1C/0x2D0CC.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC1C() {
                return GetUint16(0xDC1C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC1C(int value) {
                SetUint16(0xDC1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC1E/0x2D0CE.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC1E() {
                return GetUint16(0xDC1E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC1E(int value) {
                SetUint16(0xDC1E, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC20/0x2D0D0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC20() {
                return GetUint16(0xDC20);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC20(int value) {
                SetUint16(0xDC20, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC22/0x2D0D2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC22() {
                return GetUint16(0xDC22);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC22(int value) {
                SetUint16(0xDC22, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC24/0x2D0D4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC24() {
                return GetUint16(0xDC24);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC24(int value) {
                SetUint16(0xDC24, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC26/0x2D0D6.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC26() {
                return GetUint16(0xDC26);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC26(int value) {
                SetUint16(0xDC26, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC28/0x2D0D8.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC28() {
                return GetUint16(0xDC28);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC28(int value) {
                SetUint16(0xDC28, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC2A/0x2D0DA.
            // Operation not registered by running code
            public int GetByte8_1F4B_DC2A() {
                return GetUint8(0xDC2A);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC2A(int value) {
                SetUint8(0xDC2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC32/0x2D0E2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC32() {
                return GetUint16(0xDC32);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC32(int value) {
                SetUint16(0xDC32, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC34/0x2D0E4.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DC34() {
                return GetUint8(0xDC34);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC34(int value) {
                SetUint8(0xDC34, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC34() {
                return GetUint16(0xDC34);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_DC34(int value) {
                SetUint16(0xDC34, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC35/0x2D0E5.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DC35() {
                return GetUint8(0xDC35);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC35(int value) {
                SetUint8(0xDC35, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC36/0x2D0E6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC36() {
                return GetUint16(0xDC36);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC36(int value) {
                SetUint16(0xDC36, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC38/0x2D0E8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC38() {
                return GetUint16(0xDC38);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC38(int value) {
                SetUint16(0xDC38, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC42/0x2D0F2.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC42() {
                return GetUint16(0xDC42);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC42(int value) {
                SetUint16(0xDC42, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC44/0x2D0F4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC44() {
                return GetUint16(0xDC44);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC44(int value) {
                SetUint16(0xDC44, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC46/0x2D0F6.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DC46() {
                return GetUint8(0xDC46);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC46(int value) {
                SetUint8(0xDC46, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC47/0x2D0F7.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DC47() {
                return GetUint8(0xDC47);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC47(int value) {
                SetUint8(0xDC47, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC48/0x2D0F8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC48() {
                return GetUint16(0xDC48);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC48(int value) {
                SetUint16(0xDC48, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC4B/0x2D0FB.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DC4B() {
                return GetUint8(0xDC4B);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC4B(int value) {
                SetUint8(0xDC4B, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC51/0x2D101.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC51() {
                return GetUint16(0xDC51);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC51(int value) {
                SetUint16(0xDC51, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC53/0x2D103.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC53() {
                return GetUint16(0xDC53);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC53(int value) {
                SetUint16(0xDC53, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC55/0x2D105.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC55() {
                return GetUint16(0xDC55);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC55(int value) {
                SetUint16(0xDC55, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC57/0x2D107.
            // Operation not registered by running code
            public int GetByte8_1F4B_DC57() {
                return GetUint8(0xDC57);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DC57(int value) {
                SetUint8(0xDC57, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC58/0x2D108.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC58() {
                return GetUint16(0xDC58);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC58(int value) {
                SetUint16(0xDC58, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC5A/0x2D10A.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC5A() {
                return GetUint16(0xDC5A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC5A(int value) {
                SetUint16(0xDC5A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC5C/0x2D10C.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC5C() {
                return GetUint16(0xDC5C);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC5C(int value) {
                SetUint16(0xDC5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC5E/0x2D10E.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC5E() {
                return GetUint16(0xDC5E);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC5E(int value) {
                SetUint16(0xDC5E, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC60/0x2D110.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC60() {
                return GetUint16(0xDC60);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC60(int value) {
                SetUint16(0xDC60, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC62/0x2D112.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC62() {
                return GetUint16(0xDC62);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC62(int value) {
                SetUint16(0xDC62, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC64/0x2D114.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC64() {
                return GetUint16(0xDC64);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC64(int value) {
                SetUint16(0xDC64, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC66/0x2D116.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DC66() {
                return GetUint16(0xDC66);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC66(int value) {
                SetUint16(0xDC66, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC68/0x2D118.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC68() {
                return GetUint16(0xDC68);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC68(int value) {
                SetUint16(0xDC68, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC6A/0x2D11A.
            // Operation not registered by running code
            public int GetWord16_1F4B_DC6A() {
                return GetUint16(0xDC6A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DC6A(int value) {
                SetUint16(0xDC6A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCE4/0x2D194.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DCE4() {
                return GetUint8(0xDCE4);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCE4(int value) {
                SetUint8(0xDCE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCE5/0x2D195.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DCE5() {
                return GetUint8(0xDCE5);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCE5(int value) {
                SetUint8(0xDCE5, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCE6/0x2D196.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DCE6() {
                return GetUint8(0xDCE6);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCE6(int value) {
                SetUint8(0xDCE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCE7/0x2D197.
            // Operation not registered by running code
            public int GetByte8_1F4B_DCE7() {
                return GetUint8(0xDCE7);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCE7(int value) {
                SetUint8(0xDCE7, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCE8/0x2D198.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DCE8() {
                return GetUint8(0xDCE8);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCE8(int value) {
                SetUint8(0xDCE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCF1/0x2D1A1.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DCF1() {
                return GetUint8(0xDCF1);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DCF1(int value) {
                SetUint8(0xDCF1, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCF2/0x2D1A2.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DCF2() {
                return GetUint16(0xDCF2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCF2(int value) {
                SetUint16(0xDCF2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCF4/0x2D1A4.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DCF4() {
                return GetUint16(0xDCF4);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCF4(int value) {
                SetUint16(0xDCF4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCF6/0x2D1A6.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DCF6() {
                return GetUint16(0xDCF6);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCF6(int value) {
                SetUint16(0xDCF6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCF8/0x2D1A8.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DCF8() {
                return GetUint16(0xDCF8);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCF8(int value) {
                SetUint16(0xDCF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDCFE/0x2D1AE.
            // Operation not registered by running code
            public int GetWord16_1F4B_DCFE() {
                return GetUint16(0xDCFE);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCFE(int value) {
                SetUint16(0xDCFE, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_1F4B_DCFE() {
                return GetUint32(0xDCFE);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DCFE(int value) {
                SetUint32(0xDCFE, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DCFE() {
                return new SegmentedAddress(GetUint16(0xDCFE + 2), GetUint16(0xDCFE));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DCFE(SegmentedAddress value) {
                SetUint16(0xDCFE + 2, value.GetSegment());
                SetUint16(0xDCFE, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDD00/0x2D1B0.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DD00() {
                return GetUint16(0xDD00);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DD00(int value) {
                SetUint16(0xDD00, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDD02/0x2D1B2.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DD02() {
                return GetUint8(0xDD02);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DD02(int value) {
                SetUint8(0xDD02, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDD03/0x2D1B3.
            // Was accessed via the following registers: DS
            public int GetByte8_1F4B_DD03() {
                return GetUint8(0xDD03);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_1F4B_DD03(int value) {
                SetUint8(0xDD03, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDD0F/0x2D1BF.
            // Was accessed via the following registers: DS
            public int GetWord16_1F4B_DD0F() {
                return GetUint16(0xDD0F);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DD0F(int value) {
                SetUint16(0xDD0F, value);
            }
            
// Getters and Setters for address 0x3705:0x38ED/0x3A93D.
            // Was accessed via the following registers: DS
            public SegmentedAddress GetPtrDword32Ptr_3705_38ED() {
                return new SegmentedAddress(GetUint16(0x38ED + 2), GetUint16(0x38ED));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_3705_38ED(SegmentedAddress value) {
                SetUint16(0x38ED + 2, value.GetSegment());
                SetUint16(0x38ED, value.GetOffset());
            }
            
// Getters and Setters for address 0x351D:0xCE78/0x42048.
            // Was accessed via the following registers: DS
            public int GetWord16_351D_CE78() {
                return GetUint16(0xCE78);
            }
            
            // Operation not registered by running code
            public void SetWord16_351D_CE78(int value) {
                SetUint16(0xCE78, value);
            }
            
// Getters and Setters for address 0x3705:0xDC0C/0x44C5C.
            // Was accessed via the following registers: DS
            public int GetDword32_3705_DC0C() {
                return GetUint32(0xDC0C);
            }
            
            // Operation not registered by running code
            public void SetDword32_3705_DC0C(int value) {
                SetUint32(0xDC0C, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_3705_DC0C() {
                return new SegmentedAddress(GetUint16(0xDC0C + 2), GetUint16(0xDC0C));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_3705_DC0C(SegmentedAddress value) {
                SetUint16(0xDC0C + 2, value.GetSegment());
                SetUint16(0xDC0C, value.GetOffset());
            }
            
// Getters and Setters for address 0x46A5:0xDBD6/0x54626.
            // Was accessed via the following registers: DS
            public int GetWord16_46A5_DBD6() {
                return GetUint16(0xDBD6);
            }
            
            // Operation not registered by running code
            public void SetWord16_46A5_DBD6(int value) {
                SetUint16(0xDBD6, value);
            }
            
// Getters and Setters for address 0x46A5:0xDBDA/0x5462A.
            // Was accessed via the following registers: DS
            public int GetWord16_46A5_DBDA() {
                return GetUint16(0xDBDA);
            }
            
            // Operation not registered by running code
            public void SetWord16_46A5_DBDA(int value) {
                SetUint16(0xDBDA, value);
            }
            
// Getters and Setters for address 0x563E:0x115/0x564F5.
            // Operation not registered by running code
            public int GetWord16_563E_0115() {
                return GetUint16(0x115);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_0115(int value) {
                SetUint16(0x115, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetDword32_563E_0115() {
                return GetUint32(0x115);
            }
            
            // Operation not registered by running code
            public void SetDword32_563E_0115(int value) {
                SetUint32(0x115, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_563E_0115() {
                return new SegmentedAddress(GetUint16(0x115 + 2), GetUint16(0x115));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_563E_0115(SegmentedAddress value) {
                SetUint16(0x115 + 2, value.GetSegment());
                SetUint16(0x115, value.GetOffset());
            }
            
// Getters and Setters for address 0x563E:0x117/0x564F7.
            // Operation not registered by running code
            public int GetWord16_563E_0117() {
                return GetUint16(0x117);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_0117(int value) {
                SetUint16(0x117, value);
            }
            
// Getters and Setters for address 0x563E:0x119/0x564F9.
            // Operation not registered by running code
            public int GetWord16_563E_0119() {
                return GetUint16(0x119);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_0119(int value) {
                SetUint16(0x119, value);
            }
            
// Getters and Setters for address 0x563E:0x11B/0x564FB.
            // Operation not registered by running code
            public int GetWord16_563E_011B() {
                return GetUint16(0x11B);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_011B(int value) {
                SetUint16(0x11B, value);
            }
            
// Getters and Setters for address 0x563E:0x11D/0x564FD.
            // Operation not registered by running code
            public int GetWord16_563E_011D() {
                return GetUint16(0x11D);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_011D(int value) {
                SetUint16(0x11D, value);
            }
            
// Getters and Setters for address 0x563E:0x11E/0x564FE.
            // Operation not registered by running code
            public int GetByte8_563E_011E() {
                return GetUint8(0x11E);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_563E_011E(int value) {
                SetUint8(0x11E, value);
            }
            
// Getters and Setters for address 0x563E:0x11F/0x564FF.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_011F() {
                return GetUint16(0x11F);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_011F(int value) {
                SetUint16(0x11F, value);
            }
            
// Getters and Setters for address 0x563E:0x121/0x56501.
            // Operation not registered by running code
            public int GetByte8_563E_0121() {
                return GetUint8(0x121);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_563E_0121(int value) {
                SetUint8(0x121, value);
            }
            
            // Was accessed via the following registers: DS
            public int GetWord16_563E_0121() {
                return GetUint16(0x121);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_0121(int value) {
                SetUint16(0x121, value);
            }
            
// Getters and Setters for address 0x563E:0x123/0x56503.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_0123() {
                return GetUint16(0x123);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_563E_0123(int value) {
                SetUint16(0x123, value);
            }
            
// Getters and Setters for address 0x563E:0x139/0x56519.
            // Was accessed via the following registers: CS, DS
            public int GetByte8_563E_0139() {
                return GetUint8(0x139);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_0139(int value) {
                SetUint8(0x139, value);
            }
            
// Getters and Setters for address 0x563E:0x13A/0x5651A.
            // Operation not registered by running code
            public int GetByte8_563E_013A() {
                return GetUint8(0x13A);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_013A(int value) {
                SetUint8(0x13A, value);
            }
            
// Getters and Setters for address 0x563E:0x13B/0x5651B.
            // Operation not registered by running code
            public int GetWord16_563E_013B() {
                return GetUint16(0x13B);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetWord16_563E_013B(int value) {
                SetUint16(0x13B, value);
            }
            
// Getters and Setters for address 0x563E:0x13D/0x5651D.
            // Was accessed via the following registers: DS
            public int GetByte8_563E_013D() {
                return GetUint8(0x13D);
            }
            
            // Was accessed via the following registers: DS
            public void SetByte8_563E_013D(int value) {
                SetUint8(0x13D, value);
            }
            
// Getters and Setters for address 0x563E:0x13E/0x5651E.
            // Was accessed via the following registers: DS
            public int GetByte8_563E_013E() {
                return GetUint8(0x13E);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_013E(int value) {
                SetUint8(0x13E, value);
            }
            
// Getters and Setters for address 0x563E:0x13F/0x5651F.
            // Was accessed via the following registers: DS
            public int GetByte8_563E_013F() {
                return GetUint8(0x13F);
            }
            
            // Operation not registered by running code
            public void SetByte8_563E_013F(int value) {
                SetUint8(0x13F, value);
            }
            
// Getters and Setters for address 0x563E:0x140/0x56520.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_0140() {
                return GetUint16(0x140);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetWord16_563E_0140(int value) {
                SetUint16(0x140, value);
            }
            
// Getters and Setters for address 0x563E:0x246/0x56626.
            // Was accessed via the following registers: DS
            public int GetDword32_563E_0246() {
                return GetUint32(0x246);
            }
            
            // Operation not registered by running code
            public void SetDword32_563E_0246(int value) {
                SetUint32(0x246, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_563E_0246() {
                return new SegmentedAddress(GetUint16(0x246 + 2), GetUint16(0x246));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_563E_0246(SegmentedAddress value) {
                SetUint16(0x246 + 2, value.GetSegment());
                SetUint16(0x246, value.GetOffset());
            }
            
// Getters and Setters for address 0x563E:0x24A/0x5662A.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_024A() {
                return GetUint16(0x24A);
            }
            
            // Operation not registered by running code
            public void SetWord16_563E_024A(int value) {
                SetUint16(0x24A, value);
            }
            
// Getters and Setters for address 0x563E:0x24C/0x5662C.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_024C() {
                return GetUint16(0x24C);
            }
            
            // Operation not registered by running code
            public void SetWord16_563E_024C(int value) {
                SetUint16(0x24C, value);
            }
            
// Getters and Setters for address 0x563E:0x24E/0x5662E.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_024E() {
                return GetUint16(0x24E);
            }
            
            // Operation not registered by running code
            public void SetWord16_563E_024E(int value) {
                SetUint16(0x24E, value);
            }
            
// Getters and Setters for address 0x569C:0x115/0x56AD5.
            // Was accessed via the following registers: DS
            public int GetDword32_569C_0115() {
                return GetUint32(0x115);
            }
            
            // Operation not registered by running code
            public void SetDword32_569C_0115(int value) {
                SetUint32(0x115, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_569C_0115() {
                return new SegmentedAddress(GetUint16(0x115 + 2), GetUint16(0x115));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_569C_0115(SegmentedAddress value) {
                SetUint16(0x115 + 2, value.GetSegment());
                SetUint16(0x115, value.GetOffset());
            }
            
// Getters and Setters for address 0x6060:0xDCFE/0x6E2FE.
            // Was accessed via the following registers: DS
            public int GetDword32_6060_DCFE() {
                return GetUint32(0xDCFE);
            }
            
            // Operation not registered by running code
            public void SetDword32_6060_DCFE(int value) {
                SetUint32(0xDCFE, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_6060_DCFE() {
                return new SegmentedAddress(GetUint16(0xDCFE + 2), GetUint16(0xDCFE));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_6060_DCFE(SegmentedAddress value) {
                SetUint16(0xDCFE + 2, value.GetSegment());
                SetUint16(0xDCFE, value.GetOffset());
            }
            
// Getters and Setters for address 0x6060:0xDD00/0x6E300.
            // Was accessed via the following registers: DS
            public int GetWord16_6060_DD00() {
                return GetUint16(0xDD00);
            }
            
            // Operation not registered by running code
            public void SetWord16_6060_DD00(int value) {
                SetUint16(0xDD00, value);
            }
            
// Getters and Setters for address 0x6860:0xCE78/0x75478.
            // Was accessed via the following registers: DS
            public int GetWord16_6860_CE78() {
                return GetUint16(0xCE78);
            }
            
            // Operation not registered by running code
            public void SetWord16_6860_CE78(int value) {
                SetUint16(0xCE78, value);
            }
            
// Getters and Setters for address 0xA000:0xDBD8/0xADBD8.
            // Was accessed via the following registers: DS
            public int GetWord16_A000_DBD8() {
                return GetUint16(0xDBD8);
            }
            
            // Operation not registered by running code
            public void SetWord16_A000_DBD8(int value) {
                SetUint16(0xDBD8, value);
            }
            

;
                }
            
            // Accessors for values accessed via register SS
            public class GlobalsOnSS : MemoryBasedDataStructureWithSSBaseAddress {
                public GlobalsOnSS(Machine machine) {
                    base(machine);
                }

                // Getters and Setters for address 0x1F4B:0xCC/0x1F57C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00CC() {
                return GetUint16(0xCC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_00CC(int value) {
                SetUint16(0xCC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE/0x1F57E.
            // Operation not registered by running code
            public int GetByte8_1F4B_00CE() {
                return GetUint8(0xCE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_00CE(int value) {
                SetUint8(0xCE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD0/0x1F580.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00D0() {
                return GetUint16(0xD0);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00D0(int value) {
                SetUint16(0xD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD2/0x1F582.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00D2() {
                return GetUint16(0xD2);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_00D2(int value) {
                SetUint16(0xD2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD4/0x1F584.
            // Operation not registered by running code
            public int GetByte8_1F4B_00D4() {
                return GetUint8(0xD4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_00D4(int value) {
                SetUint8(0xD4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD8/0x1F588.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00D8() {
                return GetUint16(0xD8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_00D8(int value) {
                SetUint16(0xD8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDA/0x1F58A.
            // Operation not registered by running code
            public int GetByte8_1F4B_00DA() {
                return GetUint8(0xDA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_00DA(int value) {
                SetUint8(0xDA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDC/0x1F58C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00DC() {
                return GetUint16(0xDC);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00DC(int value) {
                SetUint16(0xDC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDE/0x1F58E.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00DE() {
                return GetUint16(0xDE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_00DE(int value) {
                SetUint16(0xDE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE0/0x1F590.
            // Operation not registered by running code
            public int GetByte8_1F4B_00E0() {
                return GetUint8(0xE0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_00E0(int value) {
                SetUint8(0xE0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE2/0x1F592.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00E2() {
                return GetUint16(0xE2);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_00E2(int value) {
                SetUint16(0xE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE4/0x1F594.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_00E4() {
                return GetUint16(0xE4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_00E4(int value) {
                SetUint16(0xE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xE6/0x1F596.
            // Operation not registered by running code
            public int GetByte8_1F4B_00E6() {
                return GetUint8(0xE6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_00E6(int value) {
                SetUint8(0xE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x23E/0x1F6EE.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_023E() {
                return GetUint8(0x23E);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_023E(int value) {
                SetUint8(0x23E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x25A/0x1F70A.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_025A() {
                return GetUint8(0x25A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_025A(int value) {
                SetUint8(0x25A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x276/0x1F726.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_0276() {
                return GetUint8(0x276);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_0276(int value) {
                SetUint8(0x276, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116A/0x2061A.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116A() {
                return GetUint8(0x116A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116A(int value) {
                SetUint8(0x116A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116B/0x2061B.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116B() {
                return GetUint8(0x116B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116B(int value) {
                SetUint8(0x116B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116C/0x2061C.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116C() {
                return GetUint8(0x116C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116C(int value) {
                SetUint8(0x116C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116D/0x2061D.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116D() {
                return GetUint8(0x116D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116D(int value) {
                SetUint8(0x116D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116E/0x2061E.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116E() {
                return GetUint8(0x116E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116E(int value) {
                SetUint8(0x116E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x116F/0x2061F.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_116F() {
                return GetUint8(0x116F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_116F(int value) {
                SetUint8(0x116F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1E76/0x21326.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1E76() {
                return GetUint16(0x1E76);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1E76(int value) {
                SetUint16(0x1E76, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1E78/0x21328.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1E78() {
                return GetUint16(0x1E78);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1E78(int value) {
                SetUint16(0x1E78, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1E7A/0x2132A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1E7A() {
                return GetUint16(0x1E7A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1E7A(int value) {
                SetUint16(0x1E7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1E7C/0x2132C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1E7C() {
                return GetUint16(0x1E7C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1E7C(int value) {
                SetUint16(0x1E7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1EFE/0x213AE.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1EFE() {
                return GetUint16(0x1EFE);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1EFE(int value) {
                SetUint16(0x1EFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F00/0x213B0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F00() {
                return GetUint16(0x1F00);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F00(int value) {
                SetUint16(0x1F00, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F02/0x213B2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F02() {
                return GetUint16(0x1F02);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F02(int value) {
                SetUint16(0x1F02, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F04/0x213B4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F04() {
                return GetUint16(0x1F04);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F04(int value) {
                SetUint16(0x1F04, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F0E/0x213BE.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_1F0E() {
                return GetUint8(0x1F0E);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1F0E(int value) {
                SetUint8(0x1F0E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F10/0x213C0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F10() {
                return GetUint16(0x1F10);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F10(int value) {
                SetUint16(0x1F10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F14/0x213C4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F14() {
                return GetUint16(0x1F14);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F14(int value) {
                SetUint16(0x1F14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F18/0x213C8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F18() {
                return GetUint16(0x1F18);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F18(int value) {
                SetUint16(0x1F18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F1C/0x213CC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F1C() {
                return GetUint16(0x1F1C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F1C(int value) {
                SetUint16(0x1F1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F7E/0x2142E.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_1F7E() {
                return GetUint8(0x1F7E);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_1F7E(int value) {
                SetUint8(0x1F7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F80/0x21430.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F80() {
                return GetUint16(0x1F80);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F80(int value) {
                SetUint16(0x1F80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F84/0x21434.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F84() {
                return GetUint16(0x1F84);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F84(int value) {
                SetUint16(0x1F84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F86/0x21436.
            // Operation not registered by running code
            public int GetWord16_1F4B_1F86() {
                return GetUint16(0x1F86);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F86(int value) {
                SetUint16(0x1F86, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F88/0x21438.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F88() {
                return GetUint16(0x1F88);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F88(int value) {
                SetUint16(0x1F88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F8C/0x2143C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F8C() {
                return GetUint16(0x1F8C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_1F8C(int value) {
                SetUint16(0x1F8C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x1F90/0x21440.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_1F90() {
                return GetUint16(0x1F90);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_1F90(int value) {
                SetUint16(0x1F90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x201A/0x214CA.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_201A() {
                return GetUint8(0x201A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_201A(int value) {
                SetUint8(0x201A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x201C/0x214CC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_201C() {
                return GetUint16(0x201C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_201C(int value) {
                SetUint16(0x201C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x201D/0x214CD.
            // Operation not registered by running code
            public int GetByte8_1F4B_201D() {
                return GetUint8(0x201D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_201D(int value) {
                SetUint8(0x201D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2020/0x214D0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2020() {
                return GetUint16(0x2020);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2020(int value) {
                SetUint16(0x2020, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2021/0x214D1.
            // Operation not registered by running code
            public int GetByte8_1F4B_2021() {
                return GetUint8(0x2021);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_2021(int value) {
                SetUint8(0x2021, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2024/0x214D4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2024() {
                return GetUint16(0x2024);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2024(int value) {
                SetUint16(0x2024, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2025/0x214D5.
            // Operation not registered by running code
            public int GetByte8_1F4B_2025() {
                return GetUint8(0x2025);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_2025(int value) {
                SetUint8(0x2025, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2028/0x214D8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2028() {
                return GetUint16(0x2028);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2028(int value) {
                SetUint16(0x2028, value);
            }
            
// Getters and Setters for address 0x1F4B:0x202C/0x214DC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_202C() {
                return GetUint16(0x202C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_202C(int value) {
                SetUint16(0x202C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2030/0x214E0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2030() {
                return GetUint16(0x2030);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2030(int value) {
                SetUint16(0x2030, value);
            }
            
// Getters and Setters for address 0x1F4B:0x204A/0x214FA.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_204A() {
                return GetUint8(0x204A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_204A(int value) {
                SetUint8(0x204A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x204C/0x214FC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_204C() {
                return GetUint16(0x204C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_204C(int value) {
                SetUint16(0x204C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2050/0x21500.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2050() {
                return GetUint16(0x2050);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2050(int value) {
                SetUint16(0x2050, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2052/0x21502.
            // Operation not registered by running code
            public int GetWord16_1F4B_2052() {
                return GetUint16(0x2052);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2052(int value) {
                SetUint16(0x2052, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2054/0x21504.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2054() {
                return GetUint16(0x2054);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2054(int value) {
                SetUint16(0x2054, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2058/0x21508.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2058() {
                return GetUint16(0x2058);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2058(int value) {
                SetUint16(0x2058, value);
            }
            
// Getters and Setters for address 0x1F4B:0x205C/0x2150C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_205C() {
                return GetUint16(0x205C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_205C(int value) {
                SetUint16(0x205C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2060/0x21510.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2060() {
                return GetUint16(0x2060);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2060(int value) {
                SetUint16(0x2060, value);
            }
            
// Getters and Setters for address 0x1F4B:0x208A/0x2153A.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_208A() {
                return GetUint8(0x208A);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_208A(int value) {
                SetUint8(0x208A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x208C/0x2153C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_208C() {
                return GetUint16(0x208C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_208C(int value) {
                SetUint16(0x208C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2090/0x21540.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2090() {
                return GetUint16(0x2090);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2090(int value) {
                SetUint16(0x2090, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2094/0x21544.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2094() {
                return GetUint16(0x2094);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2094(int value) {
                SetUint16(0x2094, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2098/0x21548.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2098() {
                return GetUint16(0x2098);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2098(int value) {
                SetUint16(0x2098, value);
            }
            
// Getters and Setters for address 0x1F4B:0x209C/0x2154C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_209C() {
                return GetUint16(0x209C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_209C(int value) {
                SetUint16(0x209C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20A0/0x21550.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20A0() {
                return GetUint16(0x20A0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_20A0(int value) {
                SetUint16(0x20A0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20B6/0x21566.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_20B6() {
                return GetUint8(0x20B6);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_20B6(int value) {
                SetUint8(0x20B6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20B8/0x21568.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20B8() {
                return GetUint16(0x20B8);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_20B8(int value) {
                SetUint16(0x20B8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20BC/0x2156C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20BC() {
                return GetUint16(0x20BC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_20BC(int value) {
                SetUint16(0x20BC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20C0/0x21570.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20C0() {
                return GetUint16(0x20C0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_20C0(int value) {
                SetUint16(0x20C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20F2/0x215A2.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_20F2() {
                return GetUint8(0x20F2);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_20F2(int value) {
                SetUint8(0x20F2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20F4/0x215A4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20F4() {
                return GetUint16(0x20F4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_20F4(int value) {
                SetUint16(0x20F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20F8/0x215A8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20F8() {
                return GetUint16(0x20F8);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_20F8(int value) {
                SetUint16(0x20F8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20FC/0x215AC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_20FC() {
                return GetUint16(0x20FC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_20FC(int value) {
                SetUint16(0x20FC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x20FD/0x215AD.
            // Operation not registered by running code
            public int GetByte8_1F4B_20FD() {
                return GetUint8(0x20FD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_20FD(int value) {
                SetUint8(0x20FD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2100/0x215B0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2100() {
                return GetUint16(0x2100);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2100(int value) {
                SetUint16(0x2100, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2104/0x215B4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2104() {
                return GetUint16(0x2104);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2104(int value) {
                SetUint16(0x2104, value);
            }
            
// Getters and Setters for address 0x1F4B:0x212E/0x215DE.
            // Was accessed via the following registers: SS
            public int GetByte8_1F4B_212E() {
                return GetUint8(0x212E);
            }
            
            // Operation not registered by running code
            public void SetByte8_1F4B_212E(int value) {
                SetUint8(0x212E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2130/0x215E0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2130() {
                return GetUint16(0x2130);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_2130(int value) {
                SetUint16(0x2130, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2134/0x215E4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2134() {
                return GetUint16(0x2134);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2134(int value) {
                SetUint16(0x2134, value);
            }
            
// Getters and Setters for address 0x1F4B:0x223C/0x216EC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_223C() {
                return GetUint16(0x223C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_223C(int value) {
                SetUint16(0x223C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x223E/0x216EE.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_223E() {
                return GetUint16(0x223E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_223E(int value) {
                SetUint16(0x223E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2240/0x216F0.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_2240() {
                return GetUint16(0x2240);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2240(int value) {
                SetUint16(0x2240, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2242/0x216F2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2242() {
                return GetUint16(0x2242);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2242(int value) {
                SetUint16(0x2242, value);
            }
            
// Getters and Setters for address 0x1F4B:0x2776/0x21C26.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_2776() {
                return GetUint16(0x2776);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_2776(int value) {
                SetUint16(0x2776, value);
            }
            
// Getters and Setters for address 0x1F4B:0x277E/0x21C2E.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_277E() {
                return GetUint16(0x277E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_277E(int value) {
                SetUint16(0x277E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x38C9/0x22D79.
            // Was accessed via the following registers: DS, SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38C9() {
                return new SegmentedAddress(GetUint16(0x38C9 + 2), GetUint16(0x38C9));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38C9(SegmentedAddress value) {
                SetUint16(0x38C9 + 2, value.GetSegment());
                SetUint16(0x38C9, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38CD/0x22D7D.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38CD() {
                return new SegmentedAddress(GetUint16(0x38CD + 2), GetUint16(0x38CD));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38CD(SegmentedAddress value) {
                SetUint16(0x38CD + 2, value.GetSegment());
                SetUint16(0x38CD, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38E1/0x22D91.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38E1() {
                return new SegmentedAddress(GetUint16(0x38E1 + 2), GetUint16(0x38E1));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38E1(SegmentedAddress value) {
                SetUint16(0x38E1 + 2, value.GetSegment());
                SetUint16(0x38E1, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38E5/0x22D95.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38E5() {
                return new SegmentedAddress(GetUint16(0x38E5 + 2), GetUint16(0x38E5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38E5(SegmentedAddress value) {
                SetUint16(0x38E5 + 2, value.GetSegment());
                SetUint16(0x38E5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38F1/0x22DA1.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38F1() {
                return new SegmentedAddress(GetUint16(0x38F1 + 2), GetUint16(0x38F1));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38F1(SegmentedAddress value) {
                SetUint16(0x38F1 + 2, value.GetSegment());
                SetUint16(0x38F1, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x38F5/0x22DA5.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_38F5() {
                return new SegmentedAddress(GetUint16(0x38F5 + 2), GetUint16(0x38F5));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_38F5(SegmentedAddress value) {
                SetUint16(0x38F5 + 2, value.GetSegment());
                SetUint16(0x38F5, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3911/0x22DC1.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3911() {
                return new SegmentedAddress(GetUint16(0x3911 + 2), GetUint16(0x3911));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3911(SegmentedAddress value) {
                SetUint16(0x3911 + 2, value.GetSegment());
                SetUint16(0x3911, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3921/0x22DD1.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3921() {
                return new SegmentedAddress(GetUint16(0x3921 + 2), GetUint16(0x3921));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3921(SegmentedAddress value) {
                SetUint16(0x3921 + 2, value.GetSegment());
                SetUint16(0x3921, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x392D/0x22DDD.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_392D() {
                return new SegmentedAddress(GetUint16(0x392D + 2), GetUint16(0x392D));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_392D(SegmentedAddress value) {
                SetUint16(0x392D + 2, value.GetSegment());
                SetUint16(0x392D, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3941/0x22DF1.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3941() {
                return new SegmentedAddress(GetUint16(0x3941 + 2), GetUint16(0x3941));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3941(SegmentedAddress value) {
                SetUint16(0x3941 + 2, value.GetSegment());
                SetUint16(0x3941, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x3949/0x22DF9.
            // Was accessed via the following registers: SS
            public SegmentedAddress GetPtrDword32Ptr_1F4B_3949() {
                return new SegmentedAddress(GetUint16(0x3949 + 2), GetUint16(0x3949));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_3949(SegmentedAddress value) {
                SetUint16(0x3949 + 2, value.GetSegment());
                SetUint16(0x3949, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0x39B9/0x22E69.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_39B9() {
                return GetUint16(0x39B9);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_39B9(int value) {
                SetUint16(0x39B9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C66/0x23116.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C66() {
                return GetUint16(0x3C66);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C66(int value) {
                SetUint16(0x3C66, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C68/0x23118.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C68() {
                return GetUint16(0x3C68);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C68(int value) {
                SetUint16(0x3C68, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C6A/0x2311A.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C6A() {
                return GetUint16(0x3C6A);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C6A(int value) {
                SetUint16(0x3C6A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C6C/0x2311C.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C6C() {
                return GetUint16(0x3C6C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C6C(int value) {
                SetUint16(0x3C6C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C6E/0x2311E.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C6E() {
                return GetUint16(0x3C6E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C6E(int value) {
                SetUint16(0x3C6E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C70/0x23120.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C70() {
                return GetUint16(0x3C70);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C70(int value) {
                SetUint16(0x3C70, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C72/0x23122.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C72() {
                return GetUint16(0x3C72);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C72(int value) {
                SetUint16(0x3C72, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C74/0x23124.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C74() {
                return GetUint16(0x3C74);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C74(int value) {
                SetUint16(0x3C74, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C76/0x23126.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C76() {
                return GetUint16(0x3C76);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C76(int value) {
                SetUint16(0x3C76, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C78/0x23128.
            // Operation not registered by running code
            public int GetWord16_1F4B_3C78() {
                return GetUint16(0x3C78);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C78(int value) {
                SetUint16(0x3C78, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C7E/0x2312E.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C7E() {
                return GetUint16(0x3C7E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3C7E(int value) {
                SetUint16(0x3C7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C80/0x23130.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C80() {
                return GetUint16(0x3C80);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C80(int value) {
                SetUint16(0x3C80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C82/0x23132.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C82() {
                return GetUint16(0x3C82);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C82(int value) {
                SetUint16(0x3C82, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C84/0x23134.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C84() {
                return GetUint16(0x3C84);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3C84(int value) {
                SetUint16(0x3C84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C86/0x23136.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C86() {
                return GetUint16(0x3C86);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3C86(int value) {
                SetUint16(0x3C86, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3C88/0x23138.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3C88() {
                return GetUint16(0x3C88);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3C88(int value) {
                SetUint16(0x3C88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA0/0x23150.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CA0() {
                return GetUint16(0x3CA0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3CA0(int value) {
                SetUint16(0x3CA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA2/0x23152.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CA2() {
                return GetUint16(0x3CA2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_3CA2(int value) {
                SetUint16(0x3CA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA4/0x23154.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CA4() {
                return GetUint16(0x3CA4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CA4(int value) {
                SetUint16(0x3CA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA5/0x23155.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CA5() {
                return GetUint8(0x3CA5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CA5(int value) {
                SetUint8(0x3CA5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA6/0x23156.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CA6() {
                return GetUint16(0x3CA6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CA6(int value) {
                SetUint16(0x3CA6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA7/0x23157.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CA7() {
                return GetUint8(0x3CA7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CA7(int value) {
                SetUint8(0x3CA7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA8/0x23158.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CA8() {
                return GetUint8(0x3CA8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CA8(int value) {
                SetUint8(0x3CA8, value);
            }
            
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CA8() {
                return GetUint16(0x3CA8);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CA8(int value) {
                SetUint16(0x3CA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CA9/0x23159.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CA9() {
                return GetUint8(0x3CA9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CA9(int value) {
                SetUint8(0x3CA9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CAA/0x2315A.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CAA() {
                return GetUint8(0x3CAA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CAA(int value) {
                SetUint8(0x3CAA, value);
            }
            
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CAA() {
                return GetUint16(0x3CAA);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CAA(int value) {
                SetUint16(0x3CAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CAB/0x2315B.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CAB() {
                return GetUint8(0x3CAB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CAB(int value) {
                SetUint8(0x3CAB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CAC/0x2315C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CAC() {
                return GetUint16(0x3CAC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CAC(int value) {
                SetUint16(0x3CAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CAE/0x2315E.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CAE() {
                return GetUint8(0x3CAE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CAE(int value) {
                SetUint8(0x3CAE, value);
            }
            
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CAE() {
                return GetUint16(0x3CAE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CAE(int value) {
                SetUint16(0x3CAE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CAF/0x2315F.
            // Operation not registered by running code
            public int GetByte8_1F4B_3CAF() {
                return GetUint8(0x3CAF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_3CAF(int value) {
                SetUint8(0x3CAF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CB0/0x23160.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CB0() {
                return GetUint16(0x3CB0);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CB0(int value) {
                SetUint16(0x3CB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x3CB2/0x23162.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_3CB2() {
                return GetUint16(0x3CB2);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_3CB2(int value) {
                SetUint16(0x3CB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4608/0x23AB8.
            // Operation not registered by running code
            public int GetWord16_1F4B_4608() {
                return GetUint16(0x4608);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4608(int value) {
                SetUint16(0x4608, value);
            }
            
// Getters and Setters for address 0x1F4B:0x47CC/0x23C7C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_47CC() {
                return GetUint16(0x47CC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_47CC(int value) {
                SetUint16(0x47CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4886/0x23D36.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4886() {
                return GetUint16(0x4886);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4886(int value) {
                SetUint16(0x4886, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4888/0x23D38.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4888() {
                return GetUint16(0x4888);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4888(int value) {
                SetUint16(0x4888, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4894/0x23D44.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4894() {
                return GetUint16(0x4894);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4894(int value) {
                SetUint16(0x4894, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4948/0x23DF8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4948() {
                return GetUint16(0x4948);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4948(int value) {
                SetUint16(0x4948, value);
            }
            
// Getters and Setters for address 0x1F4B:0x494A/0x23DFA.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_494A() {
                return GetUint16(0x494A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_494A(int value) {
                SetUint16(0x494A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x494C/0x23DFC.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_494C() {
                return GetUint16(0x494C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_494C(int value) {
                SetUint16(0x494C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x494E/0x23DFE.
            // Operation not registered by running code
            public int GetWord16_1F4B_494E() {
                return GetUint16(0x494E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_494E(int value) {
                SetUint16(0x494E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4950/0x23E00.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4950() {
                return GetUint16(0x4950);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4950(int value) {
                SetUint16(0x4950, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4952/0x23E02.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4952() {
                return GetUint16(0x4952);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4952(int value) {
                SetUint16(0x4952, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4954/0x23E04.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4954() {
                return GetUint16(0x4954);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4954(int value) {
                SetUint16(0x4954, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4956/0x23E06.
            // Operation not registered by running code
            public int GetWord16_1F4B_4956() {
                return GetUint16(0x4956);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4956(int value) {
                SetUint16(0x4956, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4958/0x23E08.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4958() {
                return GetUint16(0x4958);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4958(int value) {
                SetUint16(0x4958, value);
            }
            
// Getters and Setters for address 0x1F4B:0x495A/0x23E0A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_495A() {
                return GetUint16(0x495A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_495A(int value) {
                SetUint16(0x495A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x495C/0x23E0C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_495C() {
                return GetUint16(0x495C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_495C(int value) {
                SetUint16(0x495C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x495E/0x23E0E.
            // Operation not registered by running code
            public int GetWord16_1F4B_495E() {
                return GetUint16(0x495E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_495E(int value) {
                SetUint16(0x495E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4960/0x23E10.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4960() {
                return GetUint16(0x4960);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4960(int value) {
                SetUint16(0x4960, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4962/0x23E12.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4962() {
                return GetUint16(0x4962);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4962(int value) {
                SetUint16(0x4962, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4964/0x23E14.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4964() {
                return GetUint16(0x4964);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4964(int value) {
                SetUint16(0x4964, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4966/0x23E16.
            // Operation not registered by running code
            public int GetWord16_1F4B_4966() {
                return GetUint16(0x4966);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4966(int value) {
                SetUint16(0x4966, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4968/0x23E18.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4968() {
                return GetUint16(0x4968);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4968(int value) {
                SetUint16(0x4968, value);
            }
            
// Getters and Setters for address 0x1F4B:0x496A/0x23E1A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_496A() {
                return GetUint16(0x496A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_496A(int value) {
                SetUint16(0x496A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x496C/0x23E1C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_496C() {
                return GetUint16(0x496C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_496C(int value) {
                SetUint16(0x496C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x496E/0x23E1E.
            // Operation not registered by running code
            public int GetWord16_1F4B_496E() {
                return GetUint16(0x496E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_496E(int value) {
                SetUint16(0x496E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4970/0x23E20.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4970() {
                return GetUint16(0x4970);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4970(int value) {
                SetUint16(0x4970, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4972/0x23E22.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4972() {
                return GetUint16(0x4972);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4972(int value) {
                SetUint16(0x4972, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4974/0x23E24.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4974() {
                return GetUint16(0x4974);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4974(int value) {
                SetUint16(0x4974, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4976/0x23E26.
            // Operation not registered by running code
            public int GetWord16_1F4B_4976() {
                return GetUint16(0x4976);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4976(int value) {
                SetUint16(0x4976, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4978/0x23E28.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4978() {
                return GetUint16(0x4978);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4978(int value) {
                SetUint16(0x4978, value);
            }
            
// Getters and Setters for address 0x1F4B:0x497A/0x23E2A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_497A() {
                return GetUint16(0x497A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_497A(int value) {
                SetUint16(0x497A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x497C/0x23E2C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_497C() {
                return GetUint16(0x497C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_497C(int value) {
                SetUint16(0x497C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x497E/0x23E2E.
            // Operation not registered by running code
            public int GetWord16_1F4B_497E() {
                return GetUint16(0x497E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_497E(int value) {
                SetUint16(0x497E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4980/0x23E30.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4980() {
                return GetUint16(0x4980);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4980(int value) {
                SetUint16(0x4980, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4982/0x23E32.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4982() {
                return GetUint16(0x4982);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4982(int value) {
                SetUint16(0x4982, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4984/0x23E34.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4984() {
                return GetUint16(0x4984);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4984(int value) {
                SetUint16(0x4984, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4986/0x23E36.
            // Operation not registered by running code
            public int GetWord16_1F4B_4986() {
                return GetUint16(0x4986);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4986(int value) {
                SetUint16(0x4986, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4988/0x23E38.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4988() {
                return GetUint16(0x4988);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4988(int value) {
                SetUint16(0x4988, value);
            }
            
// Getters and Setters for address 0x1F4B:0x498A/0x23E3A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_498A() {
                return GetUint16(0x498A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_498A(int value) {
                SetUint16(0x498A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x498C/0x23E3C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_498C() {
                return GetUint16(0x498C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_498C(int value) {
                SetUint16(0x498C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x498E/0x23E3E.
            // Operation not registered by running code
            public int GetWord16_1F4B_498E() {
                return GetUint16(0x498E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_498E(int value) {
                SetUint16(0x498E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4990/0x23E40.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4990() {
                return GetUint16(0x4990);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4990(int value) {
                SetUint16(0x4990, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4992/0x23E42.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4992() {
                return GetUint16(0x4992);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4992(int value) {
                SetUint16(0x4992, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4994/0x23E44.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4994() {
                return GetUint16(0x4994);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4994(int value) {
                SetUint16(0x4994, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4996/0x23E46.
            // Operation not registered by running code
            public int GetWord16_1F4B_4996() {
                return GetUint16(0x4996);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4996(int value) {
                SetUint16(0x4996, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4998/0x23E48.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4998() {
                return GetUint16(0x4998);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4998(int value) {
                SetUint16(0x4998, value);
            }
            
// Getters and Setters for address 0x1F4B:0x499A/0x23E4A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_499A() {
                return GetUint16(0x499A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_499A(int value) {
                SetUint16(0x499A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x499C/0x23E4C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_499C() {
                return GetUint16(0x499C);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_499C(int value) {
                SetUint16(0x499C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x499E/0x23E4E.
            // Operation not registered by running code
            public int GetWord16_1F4B_499E() {
                return GetUint16(0x499E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_499E(int value) {
                SetUint16(0x499E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49A0/0x23E50.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49A0() {
                return GetUint16(0x49A0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49A0(int value) {
                SetUint16(0x49A0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49A2/0x23E52.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49A2() {
                return GetUint16(0x49A2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49A2(int value) {
                SetUint16(0x49A2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49A4/0x23E54.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49A4() {
                return GetUint16(0x49A4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49A4(int value) {
                SetUint16(0x49A4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49A6/0x23E56.
            // Operation not registered by running code
            public int GetWord16_1F4B_49A6() {
                return GetUint16(0x49A6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49A6(int value) {
                SetUint16(0x49A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49A8/0x23E58.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49A8() {
                return GetUint16(0x49A8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49A8(int value) {
                SetUint16(0x49A8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49AA/0x23E5A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49AA() {
                return GetUint16(0x49AA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49AA(int value) {
                SetUint16(0x49AA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49AC/0x23E5C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49AC() {
                return GetUint16(0x49AC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49AC(int value) {
                SetUint16(0x49AC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49AE/0x23E5E.
            // Operation not registered by running code
            public int GetWord16_1F4B_49AE() {
                return GetUint16(0x49AE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49AE(int value) {
                SetUint16(0x49AE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49B0/0x23E60.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49B0() {
                return GetUint16(0x49B0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49B0(int value) {
                SetUint16(0x49B0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49B2/0x23E62.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49B2() {
                return GetUint16(0x49B2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49B2(int value) {
                SetUint16(0x49B2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49B4/0x23E64.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49B4() {
                return GetUint16(0x49B4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49B4(int value) {
                SetUint16(0x49B4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49B6/0x23E66.
            // Operation not registered by running code
            public int GetWord16_1F4B_49B6() {
                return GetUint16(0x49B6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49B6(int value) {
                SetUint16(0x49B6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49B8/0x23E68.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49B8() {
                return GetUint16(0x49B8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49B8(int value) {
                SetUint16(0x49B8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49BA/0x23E6A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49BA() {
                return GetUint16(0x49BA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49BA(int value) {
                SetUint16(0x49BA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49BC/0x23E6C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49BC() {
                return GetUint16(0x49BC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49BC(int value) {
                SetUint16(0x49BC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49BE/0x23E6E.
            // Operation not registered by running code
            public int GetWord16_1F4B_49BE() {
                return GetUint16(0x49BE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49BE(int value) {
                SetUint16(0x49BE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49C0/0x23E70.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49C0() {
                return GetUint16(0x49C0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49C0(int value) {
                SetUint16(0x49C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49C2/0x23E72.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49C2() {
                return GetUint16(0x49C2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49C2(int value) {
                SetUint16(0x49C2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49C4/0x23E74.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49C4() {
                return GetUint16(0x49C4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49C4(int value) {
                SetUint16(0x49C4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49C6/0x23E76.
            // Operation not registered by running code
            public int GetWord16_1F4B_49C6() {
                return GetUint16(0x49C6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49C6(int value) {
                SetUint16(0x49C6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49C8/0x23E78.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49C8() {
                return GetUint16(0x49C8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49C8(int value) {
                SetUint16(0x49C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49CA/0x23E7A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49CA() {
                return GetUint16(0x49CA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49CA(int value) {
                SetUint16(0x49CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49CC/0x23E7C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49CC() {
                return GetUint16(0x49CC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49CC(int value) {
                SetUint16(0x49CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49CE/0x23E7E.
            // Operation not registered by running code
            public int GetWord16_1F4B_49CE() {
                return GetUint16(0x49CE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49CE(int value) {
                SetUint16(0x49CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49D0/0x23E80.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49D0() {
                return GetUint16(0x49D0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49D0(int value) {
                SetUint16(0x49D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49D2/0x23E82.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49D2() {
                return GetUint16(0x49D2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49D2(int value) {
                SetUint16(0x49D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49D4/0x23E84.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49D4() {
                return GetUint16(0x49D4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49D4(int value) {
                SetUint16(0x49D4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49D6/0x23E86.
            // Operation not registered by running code
            public int GetWord16_1F4B_49D6() {
                return GetUint16(0x49D6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49D6(int value) {
                SetUint16(0x49D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49D8/0x23E88.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49D8() {
                return GetUint16(0x49D8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49D8(int value) {
                SetUint16(0x49D8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49DA/0x23E8A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49DA() {
                return GetUint16(0x49DA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49DA(int value) {
                SetUint16(0x49DA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49DC/0x23E8C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49DC() {
                return GetUint16(0x49DC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49DC(int value) {
                SetUint16(0x49DC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49DE/0x23E8E.
            // Operation not registered by running code
            public int GetWord16_1F4B_49DE() {
                return GetUint16(0x49DE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49DE(int value) {
                SetUint16(0x49DE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49E0/0x23E90.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49E0() {
                return GetUint16(0x49E0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49E0(int value) {
                SetUint16(0x49E0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49E2/0x23E92.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49E2() {
                return GetUint16(0x49E2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49E2(int value) {
                SetUint16(0x49E2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49E4/0x23E94.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49E4() {
                return GetUint16(0x49E4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49E4(int value) {
                SetUint16(0x49E4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49E6/0x23E96.
            // Operation not registered by running code
            public int GetWord16_1F4B_49E6() {
                return GetUint16(0x49E6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49E6(int value) {
                SetUint16(0x49E6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49E8/0x23E98.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49E8() {
                return GetUint16(0x49E8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49E8(int value) {
                SetUint16(0x49E8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49EA/0x23E9A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49EA() {
                return GetUint16(0x49EA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49EA(int value) {
                SetUint16(0x49EA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49EC/0x23E9C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49EC() {
                return GetUint16(0x49EC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49EC(int value) {
                SetUint16(0x49EC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49EE/0x23E9E.
            // Operation not registered by running code
            public int GetWord16_1F4B_49EE() {
                return GetUint16(0x49EE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49EE(int value) {
                SetUint16(0x49EE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49F0/0x23EA0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49F0() {
                return GetUint16(0x49F0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49F0(int value) {
                SetUint16(0x49F0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49F2/0x23EA2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49F2() {
                return GetUint16(0x49F2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49F2(int value) {
                SetUint16(0x49F2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49F4/0x23EA4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49F4() {
                return GetUint16(0x49F4);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49F4(int value) {
                SetUint16(0x49F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49F6/0x23EA6.
            // Operation not registered by running code
            public int GetWord16_1F4B_49F6() {
                return GetUint16(0x49F6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49F6(int value) {
                SetUint16(0x49F6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49F8/0x23EA8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49F8() {
                return GetUint16(0x49F8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49F8(int value) {
                SetUint16(0x49F8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49FA/0x23EAA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49FA() {
                return GetUint16(0x49FA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_49FA(int value) {
                SetUint16(0x49FA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49FC/0x23EAC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_49FC() {
                return GetUint16(0x49FC);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49FC(int value) {
                SetUint16(0x49FC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x49FE/0x23EAE.
            // Operation not registered by running code
            public int GetWord16_1F4B_49FE() {
                return GetUint16(0x49FE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_49FE(int value) {
                SetUint16(0x49FE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A00/0x23EB0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A00() {
                return GetUint16(0x4A00);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A00(int value) {
                SetUint16(0x4A00, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A02/0x23EB2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A02() {
                return GetUint16(0x4A02);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A02(int value) {
                SetUint16(0x4A02, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A04/0x23EB4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A04() {
                return GetUint16(0x4A04);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A04(int value) {
                SetUint16(0x4A04, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A06/0x23EB6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A06() {
                return GetUint16(0x4A06);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A06(int value) {
                SetUint16(0x4A06, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A08/0x23EB8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A08() {
                return GetUint16(0x4A08);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A08(int value) {
                SetUint16(0x4A08, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A0A/0x23EBA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A0A() {
                return GetUint16(0x4A0A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A0A(int value) {
                SetUint16(0x4A0A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A0C/0x23EBC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A0C() {
                return GetUint16(0x4A0C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A0C(int value) {
                SetUint16(0x4A0C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A0E/0x23EBE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A0E() {
                return GetUint16(0x4A0E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A0E(int value) {
                SetUint16(0x4A0E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A10/0x23EC0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A10() {
                return GetUint16(0x4A10);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A10(int value) {
                SetUint16(0x4A10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A12/0x23EC2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A12() {
                return GetUint16(0x4A12);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A12(int value) {
                SetUint16(0x4A12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A14/0x23EC4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A14() {
                return GetUint16(0x4A14);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A14(int value) {
                SetUint16(0x4A14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A16/0x23EC6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A16() {
                return GetUint16(0x4A16);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A16(int value) {
                SetUint16(0x4A16, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A18/0x23EC8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A18() {
                return GetUint16(0x4A18);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A18(int value) {
                SetUint16(0x4A18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A1A/0x23ECA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A1A() {
                return GetUint16(0x4A1A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A1A(int value) {
                SetUint16(0x4A1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A1C/0x23ECC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A1C() {
                return GetUint16(0x4A1C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A1C(int value) {
                SetUint16(0x4A1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A1E/0x23ECE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A1E() {
                return GetUint16(0x4A1E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A1E(int value) {
                SetUint16(0x4A1E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A20/0x23ED0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A20() {
                return GetUint16(0x4A20);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A20(int value) {
                SetUint16(0x4A20, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A22/0x23ED2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A22() {
                return GetUint16(0x4A22);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A22(int value) {
                SetUint16(0x4A22, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A24/0x23ED4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A24() {
                return GetUint16(0x4A24);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A24(int value) {
                SetUint16(0x4A24, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A26/0x23ED6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A26() {
                return GetUint16(0x4A26);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A26(int value) {
                SetUint16(0x4A26, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A28/0x23ED8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A28() {
                return GetUint16(0x4A28);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A28(int value) {
                SetUint16(0x4A28, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A2A/0x23EDA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A2A() {
                return GetUint16(0x4A2A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A2A(int value) {
                SetUint16(0x4A2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A2C/0x23EDC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A2C() {
                return GetUint16(0x4A2C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A2C(int value) {
                SetUint16(0x4A2C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A2E/0x23EDE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A2E() {
                return GetUint16(0x4A2E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A2E(int value) {
                SetUint16(0x4A2E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A30/0x23EE0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A30() {
                return GetUint16(0x4A30);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A30(int value) {
                SetUint16(0x4A30, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A32/0x23EE2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A32() {
                return GetUint16(0x4A32);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A32(int value) {
                SetUint16(0x4A32, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A34/0x23EE4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A34() {
                return GetUint16(0x4A34);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A34(int value) {
                SetUint16(0x4A34, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A36/0x23EE6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A36() {
                return GetUint16(0x4A36);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A36(int value) {
                SetUint16(0x4A36, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A38/0x23EE8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A38() {
                return GetUint16(0x4A38);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A38(int value) {
                SetUint16(0x4A38, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A3A/0x23EEA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A3A() {
                return GetUint16(0x4A3A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A3A(int value) {
                SetUint16(0x4A3A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A3C/0x23EEC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A3C() {
                return GetUint16(0x4A3C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A3C(int value) {
                SetUint16(0x4A3C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A3E/0x23EEE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A3E() {
                return GetUint16(0x4A3E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A3E(int value) {
                SetUint16(0x4A3E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A40/0x23EF0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A40() {
                return GetUint16(0x4A40);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A40(int value) {
                SetUint16(0x4A40, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A42/0x23EF2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A42() {
                return GetUint16(0x4A42);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A42(int value) {
                SetUint16(0x4A42, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A44/0x23EF4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A44() {
                return GetUint16(0x4A44);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A44(int value) {
                SetUint16(0x4A44, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A46/0x23EF6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A46() {
                return GetUint16(0x4A46);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A46(int value) {
                SetUint16(0x4A46, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A48/0x23EF8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A48() {
                return GetUint16(0x4A48);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A48(int value) {
                SetUint16(0x4A48, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A4A/0x23EFA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A4A() {
                return GetUint16(0x4A4A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A4A(int value) {
                SetUint16(0x4A4A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A4C/0x23EFC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A4C() {
                return GetUint16(0x4A4C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A4C(int value) {
                SetUint16(0x4A4C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A4E/0x23EFE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A4E() {
                return GetUint16(0x4A4E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A4E(int value) {
                SetUint16(0x4A4E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A50/0x23F00.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A50() {
                return GetUint16(0x4A50);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A50(int value) {
                SetUint16(0x4A50, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A52/0x23F02.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A52() {
                return GetUint16(0x4A52);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A52(int value) {
                SetUint16(0x4A52, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A54/0x23F04.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A54() {
                return GetUint16(0x4A54);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A54(int value) {
                SetUint16(0x4A54, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A56/0x23F06.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A56() {
                return GetUint16(0x4A56);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A56(int value) {
                SetUint16(0x4A56, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A58/0x23F08.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A58() {
                return GetUint16(0x4A58);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A58(int value) {
                SetUint16(0x4A58, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A5A/0x23F0A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A5A() {
                return GetUint16(0x4A5A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A5A(int value) {
                SetUint16(0x4A5A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A5C/0x23F0C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A5C() {
                return GetUint16(0x4A5C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A5C(int value) {
                SetUint16(0x4A5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A5E/0x23F0E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A5E() {
                return GetUint16(0x4A5E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A5E(int value) {
                SetUint16(0x4A5E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A60/0x23F10.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A60() {
                return GetUint16(0x4A60);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A60(int value) {
                SetUint16(0x4A60, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A62/0x23F12.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A62() {
                return GetUint16(0x4A62);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A62(int value) {
                SetUint16(0x4A62, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A64/0x23F14.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A64() {
                return GetUint16(0x4A64);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A64(int value) {
                SetUint16(0x4A64, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A66/0x23F16.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A66() {
                return GetUint16(0x4A66);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A66(int value) {
                SetUint16(0x4A66, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A68/0x23F18.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A68() {
                return GetUint16(0x4A68);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A68(int value) {
                SetUint16(0x4A68, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A6A/0x23F1A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A6A() {
                return GetUint16(0x4A6A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A6A(int value) {
                SetUint16(0x4A6A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A6C/0x23F1C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A6C() {
                return GetUint16(0x4A6C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A6C(int value) {
                SetUint16(0x4A6C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A6E/0x23F1E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A6E() {
                return GetUint16(0x4A6E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A6E(int value) {
                SetUint16(0x4A6E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A70/0x23F20.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A70() {
                return GetUint16(0x4A70);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A70(int value) {
                SetUint16(0x4A70, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A72/0x23F22.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A72() {
                return GetUint16(0x4A72);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A72(int value) {
                SetUint16(0x4A72, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A74/0x23F24.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A74() {
                return GetUint16(0x4A74);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A74(int value) {
                SetUint16(0x4A74, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A76/0x23F26.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A76() {
                return GetUint16(0x4A76);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A76(int value) {
                SetUint16(0x4A76, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A78/0x23F28.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A78() {
                return GetUint16(0x4A78);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A78(int value) {
                SetUint16(0x4A78, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A7A/0x23F2A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A7A() {
                return GetUint16(0x4A7A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A7A(int value) {
                SetUint16(0x4A7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A7C/0x23F2C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A7C() {
                return GetUint16(0x4A7C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A7C(int value) {
                SetUint16(0x4A7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A7E/0x23F2E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A7E() {
                return GetUint16(0x4A7E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A7E(int value) {
                SetUint16(0x4A7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A80/0x23F30.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A80() {
                return GetUint16(0x4A80);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A80(int value) {
                SetUint16(0x4A80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A82/0x23F32.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A82() {
                return GetUint16(0x4A82);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A82(int value) {
                SetUint16(0x4A82, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A84/0x23F34.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A84() {
                return GetUint16(0x4A84);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A84(int value) {
                SetUint16(0x4A84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A86/0x23F36.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A86() {
                return GetUint16(0x4A86);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A86(int value) {
                SetUint16(0x4A86, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A88/0x23F38.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A88() {
                return GetUint16(0x4A88);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A88(int value) {
                SetUint16(0x4A88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A8A/0x23F3A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A8A() {
                return GetUint16(0x4A8A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A8A(int value) {
                SetUint16(0x4A8A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A8C/0x23F3C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A8C() {
                return GetUint16(0x4A8C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A8C(int value) {
                SetUint16(0x4A8C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A8E/0x23F3E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A8E() {
                return GetUint16(0x4A8E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A8E(int value) {
                SetUint16(0x4A8E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A90/0x23F40.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A90() {
                return GetUint16(0x4A90);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A90(int value) {
                SetUint16(0x4A90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A92/0x23F42.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A92() {
                return GetUint16(0x4A92);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A92(int value) {
                SetUint16(0x4A92, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A94/0x23F44.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A94() {
                return GetUint16(0x4A94);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A94(int value) {
                SetUint16(0x4A94, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A96/0x23F46.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A96() {
                return GetUint16(0x4A96);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A96(int value) {
                SetUint16(0x4A96, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A98/0x23F48.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A98() {
                return GetUint16(0x4A98);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A98(int value) {
                SetUint16(0x4A98, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A9A/0x23F4A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A9A() {
                return GetUint16(0x4A9A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A9A(int value) {
                SetUint16(0x4A9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A9C/0x23F4C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4A9C() {
                return GetUint16(0x4A9C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4A9C(int value) {
                SetUint16(0x4A9C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4A9E/0x23F4E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4A9E() {
                return GetUint16(0x4A9E);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4A9E(int value) {
                SetUint16(0x4A9E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AA0/0x23F50.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AA0() {
                return GetUint16(0x4AA0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AA0(int value) {
                SetUint16(0x4AA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AA2/0x23F52.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AA2() {
                return GetUint16(0x4AA2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AA2(int value) {
                SetUint16(0x4AA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AA4/0x23F54.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AA4() {
                return GetUint16(0x4AA4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AA4(int value) {
                SetUint16(0x4AA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AA6/0x23F56.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AA6() {
                return GetUint16(0x4AA6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AA6(int value) {
                SetUint16(0x4AA6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AA8/0x23F58.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AA8() {
                return GetUint16(0x4AA8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AA8(int value) {
                SetUint16(0x4AA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AAA/0x23F5A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AAA() {
                return GetUint16(0x4AAA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AAA(int value) {
                SetUint16(0x4AAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AAC/0x23F5C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AAC() {
                return GetUint16(0x4AAC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AAC(int value) {
                SetUint16(0x4AAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AAE/0x23F5E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AAE() {
                return GetUint16(0x4AAE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AAE(int value) {
                SetUint16(0x4AAE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AB0/0x23F60.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AB0() {
                return GetUint16(0x4AB0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AB0(int value) {
                SetUint16(0x4AB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AB2/0x23F62.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AB2() {
                return GetUint16(0x4AB2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AB2(int value) {
                SetUint16(0x4AB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AB4/0x23F64.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AB4() {
                return GetUint16(0x4AB4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AB4(int value) {
                SetUint16(0x4AB4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AB6/0x23F66.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AB6() {
                return GetUint16(0x4AB6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AB6(int value) {
                SetUint16(0x4AB6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AB8/0x23F68.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AB8() {
                return GetUint16(0x4AB8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AB8(int value) {
                SetUint16(0x4AB8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ABA/0x23F6A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ABA() {
                return GetUint16(0x4ABA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ABA(int value) {
                SetUint16(0x4ABA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ABC/0x23F6C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ABC() {
                return GetUint16(0x4ABC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ABC(int value) {
                SetUint16(0x4ABC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ABE/0x23F6E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4ABE() {
                return GetUint16(0x4ABE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4ABE(int value) {
                SetUint16(0x4ABE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AC0/0x23F70.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AC0() {
                return GetUint16(0x4AC0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AC0(int value) {
                SetUint16(0x4AC0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AC2/0x23F72.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AC2() {
                return GetUint16(0x4AC2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AC2(int value) {
                SetUint16(0x4AC2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AC4/0x23F74.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AC4() {
                return GetUint16(0x4AC4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AC4(int value) {
                SetUint16(0x4AC4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AC6/0x23F76.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AC6() {
                return GetUint16(0x4AC6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AC6(int value) {
                SetUint16(0x4AC6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AC8/0x23F78.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AC8() {
                return GetUint16(0x4AC8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AC8(int value) {
                SetUint16(0x4AC8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ACA/0x23F7A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ACA() {
                return GetUint16(0x4ACA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ACA(int value) {
                SetUint16(0x4ACA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ACC/0x23F7C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ACC() {
                return GetUint16(0x4ACC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ACC(int value) {
                SetUint16(0x4ACC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ACE/0x23F7E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4ACE() {
                return GetUint16(0x4ACE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4ACE(int value) {
                SetUint16(0x4ACE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AD0/0x23F80.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AD0() {
                return GetUint16(0x4AD0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AD0(int value) {
                SetUint16(0x4AD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AD2/0x23F82.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AD2() {
                return GetUint16(0x4AD2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AD2(int value) {
                SetUint16(0x4AD2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AD4/0x23F84.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AD4() {
                return GetUint16(0x4AD4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AD4(int value) {
                SetUint16(0x4AD4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AD6/0x23F86.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AD6() {
                return GetUint16(0x4AD6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AD6(int value) {
                SetUint16(0x4AD6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AD8/0x23F88.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AD8() {
                return GetUint16(0x4AD8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AD8(int value) {
                SetUint16(0x4AD8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ADA/0x23F8A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ADA() {
                return GetUint16(0x4ADA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ADA(int value) {
                SetUint16(0x4ADA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ADC/0x23F8C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4ADC() {
                return GetUint16(0x4ADC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4ADC(int value) {
                SetUint16(0x4ADC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ADE/0x23F8E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4ADE() {
                return GetUint16(0x4ADE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4ADE(int value) {
                SetUint16(0x4ADE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AE0/0x23F90.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AE0() {
                return GetUint16(0x4AE0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AE0(int value) {
                SetUint16(0x4AE0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AE2/0x23F92.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AE2() {
                return GetUint16(0x4AE2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AE2(int value) {
                SetUint16(0x4AE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AE4/0x23F94.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AE4() {
                return GetUint16(0x4AE4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AE4(int value) {
                SetUint16(0x4AE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AE6/0x23F96.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AE6() {
                return GetUint16(0x4AE6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AE6(int value) {
                SetUint16(0x4AE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AE8/0x23F98.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AE8() {
                return GetUint16(0x4AE8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AE8(int value) {
                SetUint16(0x4AE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AEA/0x23F9A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AEA() {
                return GetUint16(0x4AEA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AEA(int value) {
                SetUint16(0x4AEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AEC/0x23F9C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AEC() {
                return GetUint16(0x4AEC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AEC(int value) {
                SetUint16(0x4AEC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AEE/0x23F9E.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AEE() {
                return GetUint16(0x4AEE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AEE(int value) {
                SetUint16(0x4AEE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AF0/0x23FA0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AF0() {
                return GetUint16(0x4AF0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AF0(int value) {
                SetUint16(0x4AF0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AF2/0x23FA2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AF2() {
                return GetUint16(0x4AF2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AF2(int value) {
                SetUint16(0x4AF2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AF4/0x23FA4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AF4() {
                return GetUint16(0x4AF4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AF4(int value) {
                SetUint16(0x4AF4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AF6/0x23FA6.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AF6() {
                return GetUint16(0x4AF6);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AF6(int value) {
                SetUint16(0x4AF6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AF8/0x23FA8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AF8() {
                return GetUint16(0x4AF8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AF8(int value) {
                SetUint16(0x4AF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AFA/0x23FAA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AFA() {
                return GetUint16(0x4AFA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AFA(int value) {
                SetUint16(0x4AFA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AFC/0x23FAC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4AFC() {
                return GetUint16(0x4AFC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4AFC(int value) {
                SetUint16(0x4AFC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4AFE/0x23FAE.
            // Operation not registered by running code
            public int GetWord16_1F4B_4AFE() {
                return GetUint16(0x4AFE);
            }
            
            // Was accessed via the following registers: SS
            public void SetWord16_1F4B_4AFE(int value) {
                SetUint16(0x4AFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B00/0x23FB0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B00() {
                return GetUint16(0x4B00);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B00(int value) {
                SetUint16(0x4B00, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B02/0x23FB2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B02() {
                return GetUint16(0x4B02);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B02(int value) {
                SetUint16(0x4B02, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B04/0x23FB4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B04() {
                return GetUint16(0x4B04);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B04(int value) {
                SetUint16(0x4B04, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B08/0x23FB8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B08() {
                return GetUint16(0x4B08);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B08(int value) {
                SetUint16(0x4B08, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B0A/0x23FBA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B0A() {
                return GetUint16(0x4B0A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B0A(int value) {
                SetUint16(0x4B0A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B0C/0x23FBC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B0C() {
                return GetUint16(0x4B0C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B0C(int value) {
                SetUint16(0x4B0C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B10/0x23FC0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B10() {
                return GetUint16(0x4B10);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B10(int value) {
                SetUint16(0x4B10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B12/0x23FC2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B12() {
                return GetUint16(0x4B12);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B12(int value) {
                SetUint16(0x4B12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B14/0x23FC4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B14() {
                return GetUint16(0x4B14);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B14(int value) {
                SetUint16(0x4B14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B18/0x23FC8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B18() {
                return GetUint16(0x4B18);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B18(int value) {
                SetUint16(0x4B18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B1A/0x23FCA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B1A() {
                return GetUint16(0x4B1A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B1A(int value) {
                SetUint16(0x4B1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B1C/0x23FCC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B1C() {
                return GetUint16(0x4B1C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B1C(int value) {
                SetUint16(0x4B1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B20/0x23FD0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B20() {
                return GetUint16(0x4B20);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B20(int value) {
                SetUint16(0x4B20, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B22/0x23FD2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B22() {
                return GetUint16(0x4B22);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B22(int value) {
                SetUint16(0x4B22, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B24/0x23FD4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B24() {
                return GetUint16(0x4B24);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B24(int value) {
                SetUint16(0x4B24, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B28/0x23FD8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B28() {
                return GetUint16(0x4B28);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B28(int value) {
                SetUint16(0x4B28, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B2A/0x23FDA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B2A() {
                return GetUint16(0x4B2A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B2A(int value) {
                SetUint16(0x4B2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B2C/0x23FDC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B2C() {
                return GetUint16(0x4B2C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B2C(int value) {
                SetUint16(0x4B2C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B30/0x23FE0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B30() {
                return GetUint16(0x4B30);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B30(int value) {
                SetUint16(0x4B30, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B32/0x23FE2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B32() {
                return GetUint16(0x4B32);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B32(int value) {
                SetUint16(0x4B32, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B34/0x23FE4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B34() {
                return GetUint16(0x4B34);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B34(int value) {
                SetUint16(0x4B34, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B38/0x23FE8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B38() {
                return GetUint16(0x4B38);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B38(int value) {
                SetUint16(0x4B38, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B3A/0x23FEA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B3A() {
                return GetUint16(0x4B3A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B3A(int value) {
                SetUint16(0x4B3A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B3C/0x23FEC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B3C() {
                return GetUint16(0x4B3C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B3C(int value) {
                SetUint16(0x4B3C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B40/0x23FF0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B40() {
                return GetUint16(0x4B40);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B40(int value) {
                SetUint16(0x4B40, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B42/0x23FF2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B42() {
                return GetUint16(0x4B42);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B42(int value) {
                SetUint16(0x4B42, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B44/0x23FF4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B44() {
                return GetUint16(0x4B44);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B44(int value) {
                SetUint16(0x4B44, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B48/0x23FF8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B48() {
                return GetUint16(0x4B48);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B48(int value) {
                SetUint16(0x4B48, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B4A/0x23FFA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B4A() {
                return GetUint16(0x4B4A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B4A(int value) {
                SetUint16(0x4B4A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B4C/0x23FFC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B4C() {
                return GetUint16(0x4B4C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B4C(int value) {
                SetUint16(0x4B4C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B50/0x24000.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B50() {
                return GetUint16(0x4B50);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B50(int value) {
                SetUint16(0x4B50, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B52/0x24002.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B52() {
                return GetUint16(0x4B52);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B52(int value) {
                SetUint16(0x4B52, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B54/0x24004.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B54() {
                return GetUint16(0x4B54);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B54(int value) {
                SetUint16(0x4B54, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B58/0x24008.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B58() {
                return GetUint16(0x4B58);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B58(int value) {
                SetUint16(0x4B58, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B5A/0x2400A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B5A() {
                return GetUint16(0x4B5A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B5A(int value) {
                SetUint16(0x4B5A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B5C/0x2400C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B5C() {
                return GetUint16(0x4B5C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B5C(int value) {
                SetUint16(0x4B5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B60/0x24010.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B60() {
                return GetUint16(0x4B60);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B60(int value) {
                SetUint16(0x4B60, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B62/0x24012.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B62() {
                return GetUint16(0x4B62);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B62(int value) {
                SetUint16(0x4B62, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B64/0x24014.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B64() {
                return GetUint16(0x4B64);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B64(int value) {
                SetUint16(0x4B64, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B68/0x24018.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B68() {
                return GetUint16(0x4B68);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B68(int value) {
                SetUint16(0x4B68, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B6A/0x2401A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B6A() {
                return GetUint16(0x4B6A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B6A(int value) {
                SetUint16(0x4B6A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B6C/0x2401C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B6C() {
                return GetUint16(0x4B6C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B6C(int value) {
                SetUint16(0x4B6C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B70/0x24020.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B70() {
                return GetUint16(0x4B70);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B70(int value) {
                SetUint16(0x4B70, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B72/0x24022.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B72() {
                return GetUint16(0x4B72);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B72(int value) {
                SetUint16(0x4B72, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B74/0x24024.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B74() {
                return GetUint16(0x4B74);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B74(int value) {
                SetUint16(0x4B74, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B78/0x24028.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B78() {
                return GetUint16(0x4B78);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B78(int value) {
                SetUint16(0x4B78, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B7A/0x2402A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B7A() {
                return GetUint16(0x4B7A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B7A(int value) {
                SetUint16(0x4B7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B7C/0x2402C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B7C() {
                return GetUint16(0x4B7C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B7C(int value) {
                SetUint16(0x4B7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B80/0x24030.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B80() {
                return GetUint16(0x4B80);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B80(int value) {
                SetUint16(0x4B80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B82/0x24032.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B82() {
                return GetUint16(0x4B82);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B82(int value) {
                SetUint16(0x4B82, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B84/0x24034.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B84() {
                return GetUint16(0x4B84);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B84(int value) {
                SetUint16(0x4B84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B88/0x24038.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B88() {
                return GetUint16(0x4B88);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B88(int value) {
                SetUint16(0x4B88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B8A/0x2403A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B8A() {
                return GetUint16(0x4B8A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B8A(int value) {
                SetUint16(0x4B8A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B8C/0x2403C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B8C() {
                return GetUint16(0x4B8C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B8C(int value) {
                SetUint16(0x4B8C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B90/0x24040.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B90() {
                return GetUint16(0x4B90);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B90(int value) {
                SetUint16(0x4B90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B92/0x24042.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B92() {
                return GetUint16(0x4B92);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B92(int value) {
                SetUint16(0x4B92, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B94/0x24044.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B94() {
                return GetUint16(0x4B94);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B94(int value) {
                SetUint16(0x4B94, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B98/0x24048.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B98() {
                return GetUint16(0x4B98);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B98(int value) {
                SetUint16(0x4B98, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B9A/0x2404A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B9A() {
                return GetUint16(0x4B9A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B9A(int value) {
                SetUint16(0x4B9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4B9C/0x2404C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4B9C() {
                return GetUint16(0x4B9C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4B9C(int value) {
                SetUint16(0x4B9C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BA0/0x24050.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BA0() {
                return GetUint16(0x4BA0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BA0(int value) {
                SetUint16(0x4BA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BA2/0x24052.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BA2() {
                return GetUint16(0x4BA2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BA2(int value) {
                SetUint16(0x4BA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BA4/0x24054.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BA4() {
                return GetUint16(0x4BA4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BA4(int value) {
                SetUint16(0x4BA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BA8/0x24058.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BA8() {
                return GetUint16(0x4BA8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BA8(int value) {
                SetUint16(0x4BA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BAA/0x2405A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BAA() {
                return GetUint16(0x4BAA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BAA(int value) {
                SetUint16(0x4BAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BAC/0x2405C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BAC() {
                return GetUint16(0x4BAC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BAC(int value) {
                SetUint16(0x4BAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BB0/0x24060.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BB0() {
                return GetUint16(0x4BB0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BB0(int value) {
                SetUint16(0x4BB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BB2/0x24062.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BB2() {
                return GetUint16(0x4BB2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BB2(int value) {
                SetUint16(0x4BB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BB4/0x24064.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BB4() {
                return GetUint16(0x4BB4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BB4(int value) {
                SetUint16(0x4BB4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BB8/0x24068.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BB8() {
                return GetUint16(0x4BB8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BB8(int value) {
                SetUint16(0x4BB8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BBA/0x2406A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BBA() {
                return GetUint16(0x4BBA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BBA(int value) {
                SetUint16(0x4BBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BBC/0x2406C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BBC() {
                return GetUint16(0x4BBC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BBC(int value) {
                SetUint16(0x4BBC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BC0/0x24070.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BC0() {
                return GetUint16(0x4BC0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BC0(int value) {
                SetUint16(0x4BC0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BC2/0x24072.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BC2() {
                return GetUint16(0x4BC2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BC2(int value) {
                SetUint16(0x4BC2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BC4/0x24074.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BC4() {
                return GetUint16(0x4BC4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BC4(int value) {
                SetUint16(0x4BC4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BC8/0x24078.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BC8() {
                return GetUint16(0x4BC8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BC8(int value) {
                SetUint16(0x4BC8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BCA/0x2407A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BCA() {
                return GetUint16(0x4BCA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BCA(int value) {
                SetUint16(0x4BCA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BCC/0x2407C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BCC() {
                return GetUint16(0x4BCC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BCC(int value) {
                SetUint16(0x4BCC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BD0/0x24080.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BD0() {
                return GetUint16(0x4BD0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BD0(int value) {
                SetUint16(0x4BD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BD2/0x24082.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BD2() {
                return GetUint16(0x4BD2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BD2(int value) {
                SetUint16(0x4BD2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BD4/0x24084.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BD4() {
                return GetUint16(0x4BD4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BD4(int value) {
                SetUint16(0x4BD4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BD8/0x24088.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BD8() {
                return GetUint16(0x4BD8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BD8(int value) {
                SetUint16(0x4BD8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BDA/0x2408A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BDA() {
                return GetUint16(0x4BDA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BDA(int value) {
                SetUint16(0x4BDA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BDC/0x2408C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BDC() {
                return GetUint16(0x4BDC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BDC(int value) {
                SetUint16(0x4BDC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BE0/0x24090.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BE0() {
                return GetUint16(0x4BE0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BE0(int value) {
                SetUint16(0x4BE0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BE2/0x24092.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BE2() {
                return GetUint16(0x4BE2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BE2(int value) {
                SetUint16(0x4BE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BE4/0x24094.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BE4() {
                return GetUint16(0x4BE4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BE4(int value) {
                SetUint16(0x4BE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BE8/0x24098.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BE8() {
                return GetUint16(0x4BE8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BE8(int value) {
                SetUint16(0x4BE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BEA/0x2409A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BEA() {
                return GetUint16(0x4BEA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BEA(int value) {
                SetUint16(0x4BEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BEC/0x2409C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BEC() {
                return GetUint16(0x4BEC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BEC(int value) {
                SetUint16(0x4BEC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BF0/0x240A0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BF0() {
                return GetUint16(0x4BF0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BF0(int value) {
                SetUint16(0x4BF0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BF2/0x240A2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BF2() {
                return GetUint16(0x4BF2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BF2(int value) {
                SetUint16(0x4BF2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BF4/0x240A4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BF4() {
                return GetUint16(0x4BF4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BF4(int value) {
                SetUint16(0x4BF4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BF8/0x240A8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BF8() {
                return GetUint16(0x4BF8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BF8(int value) {
                SetUint16(0x4BF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BFA/0x240AA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BFA() {
                return GetUint16(0x4BFA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BFA(int value) {
                SetUint16(0x4BFA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4BFC/0x240AC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4BFC() {
                return GetUint16(0x4BFC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4BFC(int value) {
                SetUint16(0x4BFC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C00/0x240B0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C00() {
                return GetUint16(0x4C00);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C00(int value) {
                SetUint16(0x4C00, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C02/0x240B2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C02() {
                return GetUint16(0x4C02);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C02(int value) {
                SetUint16(0x4C02, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C04/0x240B4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C04() {
                return GetUint16(0x4C04);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C04(int value) {
                SetUint16(0x4C04, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C08/0x240B8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C08() {
                return GetUint16(0x4C08);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C08(int value) {
                SetUint16(0x4C08, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C0A/0x240BA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C0A() {
                return GetUint16(0x4C0A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C0A(int value) {
                SetUint16(0x4C0A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C0C/0x240BC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C0C() {
                return GetUint16(0x4C0C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C0C(int value) {
                SetUint16(0x4C0C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C10/0x240C0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C10() {
                return GetUint16(0x4C10);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C10(int value) {
                SetUint16(0x4C10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C12/0x240C2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C12() {
                return GetUint16(0x4C12);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C12(int value) {
                SetUint16(0x4C12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C14/0x240C4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C14() {
                return GetUint16(0x4C14);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C14(int value) {
                SetUint16(0x4C14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C18/0x240C8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C18() {
                return GetUint16(0x4C18);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C18(int value) {
                SetUint16(0x4C18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C1A/0x240CA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C1A() {
                return GetUint16(0x4C1A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C1A(int value) {
                SetUint16(0x4C1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C1C/0x240CC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C1C() {
                return GetUint16(0x4C1C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C1C(int value) {
                SetUint16(0x4C1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C20/0x240D0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C20() {
                return GetUint16(0x4C20);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C20(int value) {
                SetUint16(0x4C20, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C22/0x240D2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C22() {
                return GetUint16(0x4C22);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C22(int value) {
                SetUint16(0x4C22, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C24/0x240D4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C24() {
                return GetUint16(0x4C24);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C24(int value) {
                SetUint16(0x4C24, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C28/0x240D8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C28() {
                return GetUint16(0x4C28);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C28(int value) {
                SetUint16(0x4C28, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C2A/0x240DA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C2A() {
                return GetUint16(0x4C2A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C2A(int value) {
                SetUint16(0x4C2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C2C/0x240DC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C2C() {
                return GetUint16(0x4C2C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C2C(int value) {
                SetUint16(0x4C2C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C30/0x240E0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C30() {
                return GetUint16(0x4C30);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C30(int value) {
                SetUint16(0x4C30, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C32/0x240E2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C32() {
                return GetUint16(0x4C32);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C32(int value) {
                SetUint16(0x4C32, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C34/0x240E4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C34() {
                return GetUint16(0x4C34);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C34(int value) {
                SetUint16(0x4C34, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C38/0x240E8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C38() {
                return GetUint16(0x4C38);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C38(int value) {
                SetUint16(0x4C38, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C3A/0x240EA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C3A() {
                return GetUint16(0x4C3A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C3A(int value) {
                SetUint16(0x4C3A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C3C/0x240EC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C3C() {
                return GetUint16(0x4C3C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C3C(int value) {
                SetUint16(0x4C3C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C40/0x240F0.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C40() {
                return GetUint16(0x4C40);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C40(int value) {
                SetUint16(0x4C40, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C42/0x240F2.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C42() {
                return GetUint16(0x4C42);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C42(int value) {
                SetUint16(0x4C42, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C44/0x240F4.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C44() {
                return GetUint16(0x4C44);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C44(int value) {
                SetUint16(0x4C44, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C48/0x240F8.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C48() {
                return GetUint16(0x4C48);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C48(int value) {
                SetUint16(0x4C48, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C4A/0x240FA.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C4A() {
                return GetUint16(0x4C4A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C4A(int value) {
                SetUint16(0x4C4A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C4C/0x240FC.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C4C() {
                return GetUint16(0x4C4C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C4C(int value) {
                SetUint16(0x4C4C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C50/0x24100.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C50() {
                return GetUint16(0x4C50);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C50(int value) {
                SetUint16(0x4C50, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C52/0x24102.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C52() {
                return GetUint16(0x4C52);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C52(int value) {
                SetUint16(0x4C52, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C54/0x24104.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C54() {
                return GetUint16(0x4C54);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C54(int value) {
                SetUint16(0x4C54, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C58/0x24108.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C58() {
                return GetUint16(0x4C58);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C58(int value) {
                SetUint16(0x4C58, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C5A/0x2410A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C5A() {
                return GetUint16(0x4C5A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C5A(int value) {
                SetUint16(0x4C5A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4C5C/0x2410C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_4C5C() {
                return GetUint16(0x4C5C);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_4C5C(int value) {
                SetUint16(0x4C5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E7C/0x2432C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E7C() {
                return GetUint8(0x4E7C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E7C(int value) {
                SetUint8(0x4E7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E7D/0x2432D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E7D() {
                return GetUint8(0x4E7D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E7D(int value) {
                SetUint8(0x4E7D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E7E/0x2432E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E7E() {
                return GetUint8(0x4E7E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E7E(int value) {
                SetUint8(0x4E7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E7F/0x2432F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E7F() {
                return GetUint8(0x4E7F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E7F(int value) {
                SetUint8(0x4E7F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E80/0x24330.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E80() {
                return GetUint8(0x4E80);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E80(int value) {
                SetUint8(0x4E80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E81/0x24331.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E81() {
                return GetUint8(0x4E81);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E81(int value) {
                SetUint8(0x4E81, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E82/0x24332.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E82() {
                return GetUint8(0x4E82);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E82(int value) {
                SetUint8(0x4E82, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E83/0x24333.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E83() {
                return GetUint8(0x4E83);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E83(int value) {
                SetUint8(0x4E83, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E84/0x24334.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E84() {
                return GetUint8(0x4E84);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E84(int value) {
                SetUint8(0x4E84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E85/0x24335.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E85() {
                return GetUint8(0x4E85);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E85(int value) {
                SetUint8(0x4E85, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E86/0x24336.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E86() {
                return GetUint8(0x4E86);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E86(int value) {
                SetUint8(0x4E86, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E87/0x24337.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E87() {
                return GetUint8(0x4E87);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E87(int value) {
                SetUint8(0x4E87, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E88/0x24338.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E88() {
                return GetUint8(0x4E88);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E88(int value) {
                SetUint8(0x4E88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E89/0x24339.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E89() {
                return GetUint8(0x4E89);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E89(int value) {
                SetUint8(0x4E89, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8A/0x2433A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8A() {
                return GetUint8(0x4E8A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8A(int value) {
                SetUint8(0x4E8A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8B/0x2433B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8B() {
                return GetUint8(0x4E8B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8B(int value) {
                SetUint8(0x4E8B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8C/0x2433C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8C() {
                return GetUint8(0x4E8C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8C(int value) {
                SetUint8(0x4E8C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8D/0x2433D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8D() {
                return GetUint8(0x4E8D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8D(int value) {
                SetUint8(0x4E8D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8E/0x2433E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8E() {
                return GetUint8(0x4E8E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8E(int value) {
                SetUint8(0x4E8E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E8F/0x2433F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E8F() {
                return GetUint8(0x4E8F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E8F(int value) {
                SetUint8(0x4E8F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E90/0x24340.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E90() {
                return GetUint8(0x4E90);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E90(int value) {
                SetUint8(0x4E90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E91/0x24341.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E91() {
                return GetUint8(0x4E91);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E91(int value) {
                SetUint8(0x4E91, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E92/0x24342.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E92() {
                return GetUint8(0x4E92);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E92(int value) {
                SetUint8(0x4E92, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E93/0x24343.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E93() {
                return GetUint8(0x4E93);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E93(int value) {
                SetUint8(0x4E93, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E94/0x24344.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E94() {
                return GetUint8(0x4E94);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E94(int value) {
                SetUint8(0x4E94, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E95/0x24345.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E95() {
                return GetUint8(0x4E95);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E95(int value) {
                SetUint8(0x4E95, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E96/0x24346.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E96() {
                return GetUint8(0x4E96);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E96(int value) {
                SetUint8(0x4E96, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E97/0x24347.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E97() {
                return GetUint8(0x4E97);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E97(int value) {
                SetUint8(0x4E97, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E98/0x24348.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E98() {
                return GetUint8(0x4E98);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E98(int value) {
                SetUint8(0x4E98, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E99/0x24349.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E99() {
                return GetUint8(0x4E99);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E99(int value) {
                SetUint8(0x4E99, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9A/0x2434A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9A() {
                return GetUint8(0x4E9A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9A(int value) {
                SetUint8(0x4E9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9B/0x2434B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9B() {
                return GetUint8(0x4E9B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9B(int value) {
                SetUint8(0x4E9B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9C/0x2434C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9C() {
                return GetUint8(0x4E9C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9C(int value) {
                SetUint8(0x4E9C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9D/0x2434D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9D() {
                return GetUint8(0x4E9D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9D(int value) {
                SetUint8(0x4E9D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9E/0x2434E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9E() {
                return GetUint8(0x4E9E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9E(int value) {
                SetUint8(0x4E9E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4E9F/0x2434F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4E9F() {
                return GetUint8(0x4E9F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4E9F(int value) {
                SetUint8(0x4E9F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA0/0x24350.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA0() {
                return GetUint8(0x4EA0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA0(int value) {
                SetUint8(0x4EA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA1/0x24351.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA1() {
                return GetUint8(0x4EA1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA1(int value) {
                SetUint8(0x4EA1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA2/0x24352.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA2() {
                return GetUint8(0x4EA2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA2(int value) {
                SetUint8(0x4EA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA3/0x24353.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA3() {
                return GetUint8(0x4EA3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA3(int value) {
                SetUint8(0x4EA3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA4/0x24354.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA4() {
                return GetUint8(0x4EA4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA4(int value) {
                SetUint8(0x4EA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA5/0x24355.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA5() {
                return GetUint8(0x4EA5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA5(int value) {
                SetUint8(0x4EA5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA6/0x24356.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA6() {
                return GetUint8(0x4EA6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA6(int value) {
                SetUint8(0x4EA6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA7/0x24357.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA7() {
                return GetUint8(0x4EA7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA7(int value) {
                SetUint8(0x4EA7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA8/0x24358.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA8() {
                return GetUint8(0x4EA8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA8(int value) {
                SetUint8(0x4EA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EA9/0x24359.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EA9() {
                return GetUint8(0x4EA9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EA9(int value) {
                SetUint8(0x4EA9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAA/0x2435A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAA() {
                return GetUint8(0x4EAA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAA(int value) {
                SetUint8(0x4EAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAB/0x2435B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAB() {
                return GetUint8(0x4EAB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAB(int value) {
                SetUint8(0x4EAB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAC/0x2435C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAC() {
                return GetUint8(0x4EAC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAC(int value) {
                SetUint8(0x4EAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAD/0x2435D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAD() {
                return GetUint8(0x4EAD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAD(int value) {
                SetUint8(0x4EAD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAE/0x2435E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAE() {
                return GetUint8(0x4EAE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAE(int value) {
                SetUint8(0x4EAE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EAF/0x2435F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EAF() {
                return GetUint8(0x4EAF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EAF(int value) {
                SetUint8(0x4EAF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB0/0x24360.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB0() {
                return GetUint8(0x4EB0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB0(int value) {
                SetUint8(0x4EB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB1/0x24361.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB1() {
                return GetUint8(0x4EB1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB1(int value) {
                SetUint8(0x4EB1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB2/0x24362.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB2() {
                return GetUint8(0x4EB2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB2(int value) {
                SetUint8(0x4EB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB3/0x24363.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB3() {
                return GetUint8(0x4EB3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB3(int value) {
                SetUint8(0x4EB3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB4/0x24364.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB4() {
                return GetUint8(0x4EB4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB4(int value) {
                SetUint8(0x4EB4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB5/0x24365.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB5() {
                return GetUint8(0x4EB5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB5(int value) {
                SetUint8(0x4EB5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB6/0x24366.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB6() {
                return GetUint8(0x4EB6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB6(int value) {
                SetUint8(0x4EB6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB7/0x24367.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB7() {
                return GetUint8(0x4EB7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB7(int value) {
                SetUint8(0x4EB7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB8/0x24368.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB8() {
                return GetUint8(0x4EB8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB8(int value) {
                SetUint8(0x4EB8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EB9/0x24369.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EB9() {
                return GetUint8(0x4EB9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EB9(int value) {
                SetUint8(0x4EB9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBA/0x2436A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBA() {
                return GetUint8(0x4EBA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBA(int value) {
                SetUint8(0x4EBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBB/0x2436B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBB() {
                return GetUint8(0x4EBB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBB(int value) {
                SetUint8(0x4EBB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBC/0x2436C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBC() {
                return GetUint8(0x4EBC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBC(int value) {
                SetUint8(0x4EBC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBD/0x2436D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBD() {
                return GetUint8(0x4EBD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBD(int value) {
                SetUint8(0x4EBD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBE/0x2436E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBE() {
                return GetUint8(0x4EBE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBE(int value) {
                SetUint8(0x4EBE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EBF/0x2436F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EBF() {
                return GetUint8(0x4EBF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EBF(int value) {
                SetUint8(0x4EBF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC0/0x24370.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC0() {
                return GetUint8(0x4EC0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC0(int value) {
                SetUint8(0x4EC0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC1/0x24371.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC1() {
                return GetUint8(0x4EC1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC1(int value) {
                SetUint8(0x4EC1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC2/0x24372.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC2() {
                return GetUint8(0x4EC2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC2(int value) {
                SetUint8(0x4EC2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC3/0x24373.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC3() {
                return GetUint8(0x4EC3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC3(int value) {
                SetUint8(0x4EC3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC4/0x24374.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC4() {
                return GetUint8(0x4EC4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC4(int value) {
                SetUint8(0x4EC4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC5/0x24375.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC5() {
                return GetUint8(0x4EC5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC5(int value) {
                SetUint8(0x4EC5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC6/0x24376.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC6() {
                return GetUint8(0x4EC6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC6(int value) {
                SetUint8(0x4EC6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC7/0x24377.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC7() {
                return GetUint8(0x4EC7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC7(int value) {
                SetUint8(0x4EC7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC8/0x24378.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC8() {
                return GetUint8(0x4EC8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC8(int value) {
                SetUint8(0x4EC8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EC9/0x24379.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EC9() {
                return GetUint8(0x4EC9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EC9(int value) {
                SetUint8(0x4EC9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECA/0x2437A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECA() {
                return GetUint8(0x4ECA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECA(int value) {
                SetUint8(0x4ECA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECB/0x2437B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECB() {
                return GetUint8(0x4ECB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECB(int value) {
                SetUint8(0x4ECB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECC/0x2437C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECC() {
                return GetUint8(0x4ECC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECC(int value) {
                SetUint8(0x4ECC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECD/0x2437D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECD() {
                return GetUint8(0x4ECD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECD(int value) {
                SetUint8(0x4ECD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECE/0x2437E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECE() {
                return GetUint8(0x4ECE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECE(int value) {
                SetUint8(0x4ECE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ECF/0x2437F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ECF() {
                return GetUint8(0x4ECF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ECF(int value) {
                SetUint8(0x4ECF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED0/0x24380.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED0() {
                return GetUint8(0x4ED0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED0(int value) {
                SetUint8(0x4ED0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED1/0x24381.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED1() {
                return GetUint8(0x4ED1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED1(int value) {
                SetUint8(0x4ED1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED2/0x24382.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED2() {
                return GetUint8(0x4ED2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED2(int value) {
                SetUint8(0x4ED2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED3/0x24383.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED3() {
                return GetUint8(0x4ED3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED3(int value) {
                SetUint8(0x4ED3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED4/0x24384.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED4() {
                return GetUint8(0x4ED4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED4(int value) {
                SetUint8(0x4ED4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED5/0x24385.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED5() {
                return GetUint8(0x4ED5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED5(int value) {
                SetUint8(0x4ED5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED6/0x24386.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED6() {
                return GetUint8(0x4ED6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED6(int value) {
                SetUint8(0x4ED6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED7/0x24387.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED7() {
                return GetUint8(0x4ED7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED7(int value) {
                SetUint8(0x4ED7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED8/0x24388.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED8() {
                return GetUint8(0x4ED8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED8(int value) {
                SetUint8(0x4ED8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4ED9/0x24389.
            // Operation not registered by running code
            public int GetByte8_1F4B_4ED9() {
                return GetUint8(0x4ED9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4ED9(int value) {
                SetUint8(0x4ED9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDA/0x2438A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDA() {
                return GetUint8(0x4EDA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDA(int value) {
                SetUint8(0x4EDA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDB/0x2438B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDB() {
                return GetUint8(0x4EDB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDB(int value) {
                SetUint8(0x4EDB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDC/0x2438C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDC() {
                return GetUint8(0x4EDC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDC(int value) {
                SetUint8(0x4EDC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDD/0x2438D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDD() {
                return GetUint8(0x4EDD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDD(int value) {
                SetUint8(0x4EDD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDE/0x2438E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDE() {
                return GetUint8(0x4EDE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDE(int value) {
                SetUint8(0x4EDE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EDF/0x2438F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EDF() {
                return GetUint8(0x4EDF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EDF(int value) {
                SetUint8(0x4EDF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE0/0x24390.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE0() {
                return GetUint8(0x4EE0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE0(int value) {
                SetUint8(0x4EE0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE1/0x24391.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE1() {
                return GetUint8(0x4EE1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE1(int value) {
                SetUint8(0x4EE1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE2/0x24392.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE2() {
                return GetUint8(0x4EE2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE2(int value) {
                SetUint8(0x4EE2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE3/0x24393.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE3() {
                return GetUint8(0x4EE3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE3(int value) {
                SetUint8(0x4EE3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE4/0x24394.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE4() {
                return GetUint8(0x4EE4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE4(int value) {
                SetUint8(0x4EE4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE5/0x24395.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE5() {
                return GetUint8(0x4EE5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE5(int value) {
                SetUint8(0x4EE5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE6/0x24396.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE6() {
                return GetUint8(0x4EE6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE6(int value) {
                SetUint8(0x4EE6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE7/0x24397.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE7() {
                return GetUint8(0x4EE7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE7(int value) {
                SetUint8(0x4EE7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE8/0x24398.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE8() {
                return GetUint8(0x4EE8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE8(int value) {
                SetUint8(0x4EE8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EE9/0x24399.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EE9() {
                return GetUint8(0x4EE9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EE9(int value) {
                SetUint8(0x4EE9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EEA/0x2439A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EEA() {
                return GetUint8(0x4EEA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EEA(int value) {
                SetUint8(0x4EEA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EEB/0x2439B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EEB() {
                return GetUint8(0x4EEB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EEB(int value) {
                SetUint8(0x4EEB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EEC/0x2439C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EEC() {
                return GetUint8(0x4EEC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EEC(int value) {
                SetUint8(0x4EEC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EED/0x2439D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EED() {
                return GetUint8(0x4EED);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EED(int value) {
                SetUint8(0x4EED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EEE/0x2439E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EEE() {
                return GetUint8(0x4EEE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EEE(int value) {
                SetUint8(0x4EEE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EEF/0x2439F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EEF() {
                return GetUint8(0x4EEF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EEF(int value) {
                SetUint8(0x4EEF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF0/0x243A0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF0() {
                return GetUint8(0x4EF0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF0(int value) {
                SetUint8(0x4EF0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF1/0x243A1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF1() {
                return GetUint8(0x4EF1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF1(int value) {
                SetUint8(0x4EF1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF2/0x243A2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF2() {
                return GetUint8(0x4EF2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF2(int value) {
                SetUint8(0x4EF2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF3/0x243A3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF3() {
                return GetUint8(0x4EF3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF3(int value) {
                SetUint8(0x4EF3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF4/0x243A4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF4() {
                return GetUint8(0x4EF4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF4(int value) {
                SetUint8(0x4EF4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF5/0x243A5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF5() {
                return GetUint8(0x4EF5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF5(int value) {
                SetUint8(0x4EF5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF6/0x243A6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF6() {
                return GetUint8(0x4EF6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF6(int value) {
                SetUint8(0x4EF6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF7/0x243A7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF7() {
                return GetUint8(0x4EF7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF7(int value) {
                SetUint8(0x4EF7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF8/0x243A8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF8() {
                return GetUint8(0x4EF8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF8(int value) {
                SetUint8(0x4EF8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EF9/0x243A9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EF9() {
                return GetUint8(0x4EF9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EF9(int value) {
                SetUint8(0x4EF9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFA/0x243AA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFA() {
                return GetUint8(0x4EFA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFA(int value) {
                SetUint8(0x4EFA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFB/0x243AB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFB() {
                return GetUint8(0x4EFB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFB(int value) {
                SetUint8(0x4EFB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFC/0x243AC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFC() {
                return GetUint8(0x4EFC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFC(int value) {
                SetUint8(0x4EFC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFD/0x243AD.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFD() {
                return GetUint8(0x4EFD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFD(int value) {
                SetUint8(0x4EFD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFE/0x243AE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFE() {
                return GetUint8(0x4EFE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFE(int value) {
                SetUint8(0x4EFE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4EFF/0x243AF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4EFF() {
                return GetUint8(0x4EFF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4EFF(int value) {
                SetUint8(0x4EFF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F00/0x243B0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F00() {
                return GetUint8(0x4F00);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F00(int value) {
                SetUint8(0x4F00, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F01/0x243B1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F01() {
                return GetUint8(0x4F01);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F01(int value) {
                SetUint8(0x4F01, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F02/0x243B2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F02() {
                return GetUint8(0x4F02);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F02(int value) {
                SetUint8(0x4F02, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F03/0x243B3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F03() {
                return GetUint8(0x4F03);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F03(int value) {
                SetUint8(0x4F03, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F04/0x243B4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F04() {
                return GetUint8(0x4F04);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F04(int value) {
                SetUint8(0x4F04, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F05/0x243B5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F05() {
                return GetUint8(0x4F05);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F05(int value) {
                SetUint8(0x4F05, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F06/0x243B6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F06() {
                return GetUint8(0x4F06);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F06(int value) {
                SetUint8(0x4F06, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F07/0x243B7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F07() {
                return GetUint8(0x4F07);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F07(int value) {
                SetUint8(0x4F07, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F08/0x243B8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F08() {
                return GetUint8(0x4F08);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F08(int value) {
                SetUint8(0x4F08, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F09/0x243B9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F09() {
                return GetUint8(0x4F09);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F09(int value) {
                SetUint8(0x4F09, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0A/0x243BA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0A() {
                return GetUint8(0x4F0A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0A(int value) {
                SetUint8(0x4F0A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0B/0x243BB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0B() {
                return GetUint8(0x4F0B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0B(int value) {
                SetUint8(0x4F0B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0C/0x243BC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0C() {
                return GetUint8(0x4F0C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0C(int value) {
                SetUint8(0x4F0C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0D/0x243BD.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0D() {
                return GetUint8(0x4F0D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0D(int value) {
                SetUint8(0x4F0D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0E/0x243BE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0E() {
                return GetUint8(0x4F0E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0E(int value) {
                SetUint8(0x4F0E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F0F/0x243BF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F0F() {
                return GetUint8(0x4F0F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F0F(int value) {
                SetUint8(0x4F0F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F10/0x243C0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F10() {
                return GetUint8(0x4F10);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F10(int value) {
                SetUint8(0x4F10, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F11/0x243C1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F11() {
                return GetUint8(0x4F11);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F11(int value) {
                SetUint8(0x4F11, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F12/0x243C2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F12() {
                return GetUint8(0x4F12);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F12(int value) {
                SetUint8(0x4F12, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F13/0x243C3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F13() {
                return GetUint8(0x4F13);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F13(int value) {
                SetUint8(0x4F13, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F14/0x243C4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F14() {
                return GetUint8(0x4F14);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F14(int value) {
                SetUint8(0x4F14, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F15/0x243C5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F15() {
                return GetUint8(0x4F15);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F15(int value) {
                SetUint8(0x4F15, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F16/0x243C6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F16() {
                return GetUint8(0x4F16);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F16(int value) {
                SetUint8(0x4F16, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F17/0x243C7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F17() {
                return GetUint8(0x4F17);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F17(int value) {
                SetUint8(0x4F17, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F18/0x243C8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F18() {
                return GetUint8(0x4F18);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F18(int value) {
                SetUint8(0x4F18, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F19/0x243C9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F19() {
                return GetUint8(0x4F19);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F19(int value) {
                SetUint8(0x4F19, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1A/0x243CA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1A() {
                return GetUint8(0x4F1A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1A(int value) {
                SetUint8(0x4F1A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1B/0x243CB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1B() {
                return GetUint8(0x4F1B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1B(int value) {
                SetUint8(0x4F1B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1C/0x243CC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1C() {
                return GetUint8(0x4F1C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1C(int value) {
                SetUint8(0x4F1C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1D/0x243CD.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1D() {
                return GetUint8(0x4F1D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1D(int value) {
                SetUint8(0x4F1D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1E/0x243CE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1E() {
                return GetUint8(0x4F1E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1E(int value) {
                SetUint8(0x4F1E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F1F/0x243CF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F1F() {
                return GetUint8(0x4F1F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F1F(int value) {
                SetUint8(0x4F1F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F20/0x243D0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F20() {
                return GetUint8(0x4F20);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F20(int value) {
                SetUint8(0x4F20, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F21/0x243D1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F21() {
                return GetUint8(0x4F21);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F21(int value) {
                SetUint8(0x4F21, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F22/0x243D2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F22() {
                return GetUint8(0x4F22);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F22(int value) {
                SetUint8(0x4F22, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F23/0x243D3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F23() {
                return GetUint8(0x4F23);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F23(int value) {
                SetUint8(0x4F23, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F24/0x243D4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F24() {
                return GetUint8(0x4F24);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F24(int value) {
                SetUint8(0x4F24, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F25/0x243D5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F25() {
                return GetUint8(0x4F25);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F25(int value) {
                SetUint8(0x4F25, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F26/0x243D6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F26() {
                return GetUint8(0x4F26);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F26(int value) {
                SetUint8(0x4F26, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F27/0x243D7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F27() {
                return GetUint8(0x4F27);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F27(int value) {
                SetUint8(0x4F27, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F28/0x243D8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F28() {
                return GetUint8(0x4F28);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F28(int value) {
                SetUint8(0x4F28, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F29/0x243D9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F29() {
                return GetUint8(0x4F29);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F29(int value) {
                SetUint8(0x4F29, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2A/0x243DA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2A() {
                return GetUint8(0x4F2A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2A(int value) {
                SetUint8(0x4F2A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2B/0x243DB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2B() {
                return GetUint8(0x4F2B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2B(int value) {
                SetUint8(0x4F2B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2C/0x243DC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2C() {
                return GetUint8(0x4F2C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2C(int value) {
                SetUint8(0x4F2C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2D/0x243DD.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2D() {
                return GetUint8(0x4F2D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2D(int value) {
                SetUint8(0x4F2D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2E/0x243DE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2E() {
                return GetUint8(0x4F2E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2E(int value) {
                SetUint8(0x4F2E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F2F/0x243DF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F2F() {
                return GetUint8(0x4F2F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F2F(int value) {
                SetUint8(0x4F2F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F30/0x243E0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F30() {
                return GetUint8(0x4F30);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F30(int value) {
                SetUint8(0x4F30, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F31/0x243E1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F31() {
                return GetUint8(0x4F31);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F31(int value) {
                SetUint8(0x4F31, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F32/0x243E2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F32() {
                return GetUint8(0x4F32);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F32(int value) {
                SetUint8(0x4F32, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F33/0x243E3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F33() {
                return GetUint8(0x4F33);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F33(int value) {
                SetUint8(0x4F33, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F34/0x243E4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F34() {
                return GetUint8(0x4F34);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F34(int value) {
                SetUint8(0x4F34, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F35/0x243E5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F35() {
                return GetUint8(0x4F35);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F35(int value) {
                SetUint8(0x4F35, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F36/0x243E6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F36() {
                return GetUint8(0x4F36);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F36(int value) {
                SetUint8(0x4F36, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F37/0x243E7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F37() {
                return GetUint8(0x4F37);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F37(int value) {
                SetUint8(0x4F37, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F38/0x243E8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F38() {
                return GetUint8(0x4F38);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F38(int value) {
                SetUint8(0x4F38, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F39/0x243E9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F39() {
                return GetUint8(0x4F39);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F39(int value) {
                SetUint8(0x4F39, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3A/0x243EA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3A() {
                return GetUint8(0x4F3A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3A(int value) {
                SetUint8(0x4F3A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3B/0x243EB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3B() {
                return GetUint8(0x4F3B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3B(int value) {
                SetUint8(0x4F3B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3C/0x243EC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3C() {
                return GetUint8(0x4F3C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3C(int value) {
                SetUint8(0x4F3C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3D/0x243ED.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3D() {
                return GetUint8(0x4F3D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3D(int value) {
                SetUint8(0x4F3D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3E/0x243EE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3E() {
                return GetUint8(0x4F3E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3E(int value) {
                SetUint8(0x4F3E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F3F/0x243EF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F3F() {
                return GetUint8(0x4F3F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F3F(int value) {
                SetUint8(0x4F3F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F40/0x243F0.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F40() {
                return GetUint8(0x4F40);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F40(int value) {
                SetUint8(0x4F40, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F41/0x243F1.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F41() {
                return GetUint8(0x4F41);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F41(int value) {
                SetUint8(0x4F41, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F42/0x243F2.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F42() {
                return GetUint8(0x4F42);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F42(int value) {
                SetUint8(0x4F42, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F43/0x243F3.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F43() {
                return GetUint8(0x4F43);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F43(int value) {
                SetUint8(0x4F43, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F44/0x243F4.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F44() {
                return GetUint8(0x4F44);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F44(int value) {
                SetUint8(0x4F44, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F45/0x243F5.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F45() {
                return GetUint8(0x4F45);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F45(int value) {
                SetUint8(0x4F45, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F46/0x243F6.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F46() {
                return GetUint8(0x4F46);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F46(int value) {
                SetUint8(0x4F46, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F47/0x243F7.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F47() {
                return GetUint8(0x4F47);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F47(int value) {
                SetUint8(0x4F47, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F48/0x243F8.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F48() {
                return GetUint8(0x4F48);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F48(int value) {
                SetUint8(0x4F48, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F49/0x243F9.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F49() {
                return GetUint8(0x4F49);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F49(int value) {
                SetUint8(0x4F49, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4A/0x243FA.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4A() {
                return GetUint8(0x4F4A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4A(int value) {
                SetUint8(0x4F4A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4B/0x243FB.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4B() {
                return GetUint8(0x4F4B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4B(int value) {
                SetUint8(0x4F4B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4C/0x243FC.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4C() {
                return GetUint8(0x4F4C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4C(int value) {
                SetUint8(0x4F4C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4D/0x243FD.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4D() {
                return GetUint8(0x4F4D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4D(int value) {
                SetUint8(0x4F4D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4E/0x243FE.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4E() {
                return GetUint8(0x4F4E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4E(int value) {
                SetUint8(0x4F4E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F4F/0x243FF.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F4F() {
                return GetUint8(0x4F4F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F4F(int value) {
                SetUint8(0x4F4F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F50/0x24400.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F50() {
                return GetUint8(0x4F50);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F50(int value) {
                SetUint8(0x4F50, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F51/0x24401.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F51() {
                return GetUint8(0x4F51);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F51(int value) {
                SetUint8(0x4F51, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F52/0x24402.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F52() {
                return GetUint8(0x4F52);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F52(int value) {
                SetUint8(0x4F52, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F53/0x24403.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F53() {
                return GetUint8(0x4F53);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F53(int value) {
                SetUint8(0x4F53, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F54/0x24404.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F54() {
                return GetUint8(0x4F54);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F54(int value) {
                SetUint8(0x4F54, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F55/0x24405.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F55() {
                return GetUint8(0x4F55);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F55(int value) {
                SetUint8(0x4F55, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F56/0x24406.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F56() {
                return GetUint8(0x4F56);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F56(int value) {
                SetUint8(0x4F56, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F57/0x24407.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F57() {
                return GetUint8(0x4F57);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F57(int value) {
                SetUint8(0x4F57, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F58/0x24408.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F58() {
                return GetUint8(0x4F58);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F58(int value) {
                SetUint8(0x4F58, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F59/0x24409.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F59() {
                return GetUint8(0x4F59);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F59(int value) {
                SetUint8(0x4F59, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5A/0x2440A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5A() {
                return GetUint8(0x4F5A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5A(int value) {
                SetUint8(0x4F5A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5B/0x2440B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5B() {
                return GetUint8(0x4F5B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5B(int value) {
                SetUint8(0x4F5B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5C/0x2440C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5C() {
                return GetUint8(0x4F5C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5C(int value) {
                SetUint8(0x4F5C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5D/0x2440D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5D() {
                return GetUint8(0x4F5D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5D(int value) {
                SetUint8(0x4F5D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5E/0x2440E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5E() {
                return GetUint8(0x4F5E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5E(int value) {
                SetUint8(0x4F5E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F5F/0x2440F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F5F() {
                return GetUint8(0x4F5F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F5F(int value) {
                SetUint8(0x4F5F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F60/0x24410.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F60() {
                return GetUint8(0x4F60);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F60(int value) {
                SetUint8(0x4F60, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F61/0x24411.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F61() {
                return GetUint8(0x4F61);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F61(int value) {
                SetUint8(0x4F61, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F62/0x24412.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F62() {
                return GetUint8(0x4F62);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F62(int value) {
                SetUint8(0x4F62, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F63/0x24413.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F63() {
                return GetUint8(0x4F63);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F63(int value) {
                SetUint8(0x4F63, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F64/0x24414.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F64() {
                return GetUint8(0x4F64);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F64(int value) {
                SetUint8(0x4F64, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F65/0x24415.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F65() {
                return GetUint8(0x4F65);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F65(int value) {
                SetUint8(0x4F65, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F66/0x24416.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F66() {
                return GetUint8(0x4F66);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F66(int value) {
                SetUint8(0x4F66, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F67/0x24417.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F67() {
                return GetUint8(0x4F67);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F67(int value) {
                SetUint8(0x4F67, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F68/0x24418.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F68() {
                return GetUint8(0x4F68);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F68(int value) {
                SetUint8(0x4F68, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F69/0x24419.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F69() {
                return GetUint8(0x4F69);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F69(int value) {
                SetUint8(0x4F69, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6A/0x2441A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6A() {
                return GetUint8(0x4F6A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6A(int value) {
                SetUint8(0x4F6A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6B/0x2441B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6B() {
                return GetUint8(0x4F6B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6B(int value) {
                SetUint8(0x4F6B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6C/0x2441C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6C() {
                return GetUint8(0x4F6C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6C(int value) {
                SetUint8(0x4F6C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6D/0x2441D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6D() {
                return GetUint8(0x4F6D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6D(int value) {
                SetUint8(0x4F6D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6E/0x2441E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6E() {
                return GetUint8(0x4F6E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6E(int value) {
                SetUint8(0x4F6E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F6F/0x2441F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F6F() {
                return GetUint8(0x4F6F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F6F(int value) {
                SetUint8(0x4F6F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F70/0x24420.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F70() {
                return GetUint8(0x4F70);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F70(int value) {
                SetUint8(0x4F70, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F71/0x24421.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F71() {
                return GetUint8(0x4F71);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F71(int value) {
                SetUint8(0x4F71, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F72/0x24422.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F72() {
                return GetUint8(0x4F72);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F72(int value) {
                SetUint8(0x4F72, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F73/0x24423.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F73() {
                return GetUint8(0x4F73);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F73(int value) {
                SetUint8(0x4F73, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F74/0x24424.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F74() {
                return GetUint8(0x4F74);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F74(int value) {
                SetUint8(0x4F74, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F75/0x24425.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F75() {
                return GetUint8(0x4F75);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F75(int value) {
                SetUint8(0x4F75, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F76/0x24426.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F76() {
                return GetUint8(0x4F76);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F76(int value) {
                SetUint8(0x4F76, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F77/0x24427.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F77() {
                return GetUint8(0x4F77);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F77(int value) {
                SetUint8(0x4F77, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F78/0x24428.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F78() {
                return GetUint8(0x4F78);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F78(int value) {
                SetUint8(0x4F78, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F79/0x24429.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F79() {
                return GetUint8(0x4F79);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F79(int value) {
                SetUint8(0x4F79, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7A/0x2442A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7A() {
                return GetUint8(0x4F7A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7A(int value) {
                SetUint8(0x4F7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7B/0x2442B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7B() {
                return GetUint8(0x4F7B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7B(int value) {
                SetUint8(0x4F7B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7C/0x2442C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7C() {
                return GetUint8(0x4F7C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7C(int value) {
                SetUint8(0x4F7C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7D/0x2442D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7D() {
                return GetUint8(0x4F7D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7D(int value) {
                SetUint8(0x4F7D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7E/0x2442E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7E() {
                return GetUint8(0x4F7E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7E(int value) {
                SetUint8(0x4F7E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F7F/0x2442F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F7F() {
                return GetUint8(0x4F7F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F7F(int value) {
                SetUint8(0x4F7F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F80/0x24430.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F80() {
                return GetUint8(0x4F80);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F80(int value) {
                SetUint8(0x4F80, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F81/0x24431.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F81() {
                return GetUint8(0x4F81);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F81(int value) {
                SetUint8(0x4F81, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F82/0x24432.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F82() {
                return GetUint8(0x4F82);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F82(int value) {
                SetUint8(0x4F82, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F83/0x24433.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F83() {
                return GetUint8(0x4F83);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F83(int value) {
                SetUint8(0x4F83, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F84/0x24434.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F84() {
                return GetUint8(0x4F84);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F84(int value) {
                SetUint8(0x4F84, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F85/0x24435.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F85() {
                return GetUint8(0x4F85);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F85(int value) {
                SetUint8(0x4F85, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F86/0x24436.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F86() {
                return GetUint8(0x4F86);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F86(int value) {
                SetUint8(0x4F86, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F87/0x24437.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F87() {
                return GetUint8(0x4F87);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F87(int value) {
                SetUint8(0x4F87, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F88/0x24438.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F88() {
                return GetUint8(0x4F88);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F88(int value) {
                SetUint8(0x4F88, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F89/0x24439.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F89() {
                return GetUint8(0x4F89);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F89(int value) {
                SetUint8(0x4F89, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8A/0x2443A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8A() {
                return GetUint8(0x4F8A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8A(int value) {
                SetUint8(0x4F8A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8B/0x2443B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8B() {
                return GetUint8(0x4F8B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8B(int value) {
                SetUint8(0x4F8B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8C/0x2443C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8C() {
                return GetUint8(0x4F8C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8C(int value) {
                SetUint8(0x4F8C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8D/0x2443D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8D() {
                return GetUint8(0x4F8D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8D(int value) {
                SetUint8(0x4F8D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8E/0x2443E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8E() {
                return GetUint8(0x4F8E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8E(int value) {
                SetUint8(0x4F8E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F8F/0x2443F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F8F() {
                return GetUint8(0x4F8F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F8F(int value) {
                SetUint8(0x4F8F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F90/0x24440.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F90() {
                return GetUint8(0x4F90);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F90(int value) {
                SetUint8(0x4F90, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F91/0x24441.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F91() {
                return GetUint8(0x4F91);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F91(int value) {
                SetUint8(0x4F91, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F92/0x24442.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F92() {
                return GetUint8(0x4F92);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F92(int value) {
                SetUint8(0x4F92, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F93/0x24443.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F93() {
                return GetUint8(0x4F93);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F93(int value) {
                SetUint8(0x4F93, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F94/0x24444.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F94() {
                return GetUint8(0x4F94);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F94(int value) {
                SetUint8(0x4F94, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F95/0x24445.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F95() {
                return GetUint8(0x4F95);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F95(int value) {
                SetUint8(0x4F95, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F96/0x24446.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F96() {
                return GetUint8(0x4F96);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F96(int value) {
                SetUint8(0x4F96, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F97/0x24447.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F97() {
                return GetUint8(0x4F97);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F97(int value) {
                SetUint8(0x4F97, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F98/0x24448.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F98() {
                return GetUint8(0x4F98);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F98(int value) {
                SetUint8(0x4F98, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F99/0x24449.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F99() {
                return GetUint8(0x4F99);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F99(int value) {
                SetUint8(0x4F99, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9A/0x2444A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9A() {
                return GetUint8(0x4F9A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9A(int value) {
                SetUint8(0x4F9A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9B/0x2444B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9B() {
                return GetUint8(0x4F9B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9B(int value) {
                SetUint8(0x4F9B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9C/0x2444C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9C() {
                return GetUint8(0x4F9C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9C(int value) {
                SetUint8(0x4F9C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9D/0x2444D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9D() {
                return GetUint8(0x4F9D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9D(int value) {
                SetUint8(0x4F9D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9E/0x2444E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9E() {
                return GetUint8(0x4F9E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9E(int value) {
                SetUint8(0x4F9E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4F9F/0x2444F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4F9F() {
                return GetUint8(0x4F9F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4F9F(int value) {
                SetUint8(0x4F9F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA0/0x24450.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA0() {
                return GetUint8(0x4FA0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA0(int value) {
                SetUint8(0x4FA0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA1/0x24451.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA1() {
                return GetUint8(0x4FA1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA1(int value) {
                SetUint8(0x4FA1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA2/0x24452.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA2() {
                return GetUint8(0x4FA2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA2(int value) {
                SetUint8(0x4FA2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA3/0x24453.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA3() {
                return GetUint8(0x4FA3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA3(int value) {
                SetUint8(0x4FA3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA4/0x24454.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA4() {
                return GetUint8(0x4FA4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA4(int value) {
                SetUint8(0x4FA4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA5/0x24455.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA5() {
                return GetUint8(0x4FA5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA5(int value) {
                SetUint8(0x4FA5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA6/0x24456.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA6() {
                return GetUint8(0x4FA6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA6(int value) {
                SetUint8(0x4FA6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA7/0x24457.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA7() {
                return GetUint8(0x4FA7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA7(int value) {
                SetUint8(0x4FA7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA8/0x24458.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA8() {
                return GetUint8(0x4FA8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA8(int value) {
                SetUint8(0x4FA8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FA9/0x24459.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FA9() {
                return GetUint8(0x4FA9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FA9(int value) {
                SetUint8(0x4FA9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAA/0x2445A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAA() {
                return GetUint8(0x4FAA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAA(int value) {
                SetUint8(0x4FAA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAB/0x2445B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAB() {
                return GetUint8(0x4FAB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAB(int value) {
                SetUint8(0x4FAB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAC/0x2445C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAC() {
                return GetUint8(0x4FAC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAC(int value) {
                SetUint8(0x4FAC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAD/0x2445D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAD() {
                return GetUint8(0x4FAD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAD(int value) {
                SetUint8(0x4FAD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAE/0x2445E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAE() {
                return GetUint8(0x4FAE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAE(int value) {
                SetUint8(0x4FAE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FAF/0x2445F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FAF() {
                return GetUint8(0x4FAF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FAF(int value) {
                SetUint8(0x4FAF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB0/0x24460.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB0() {
                return GetUint8(0x4FB0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB0(int value) {
                SetUint8(0x4FB0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB1/0x24461.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB1() {
                return GetUint8(0x4FB1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB1(int value) {
                SetUint8(0x4FB1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB2/0x24462.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB2() {
                return GetUint8(0x4FB2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB2(int value) {
                SetUint8(0x4FB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB3/0x24463.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB3() {
                return GetUint8(0x4FB3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB3(int value) {
                SetUint8(0x4FB3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB4/0x24464.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB4() {
                return GetUint8(0x4FB4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB4(int value) {
                SetUint8(0x4FB4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB5/0x24465.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB5() {
                return GetUint8(0x4FB5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB5(int value) {
                SetUint8(0x4FB5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB6/0x24466.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB6() {
                return GetUint8(0x4FB6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB6(int value) {
                SetUint8(0x4FB6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB7/0x24467.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB7() {
                return GetUint8(0x4FB7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB7(int value) {
                SetUint8(0x4FB7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB8/0x24468.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB8() {
                return GetUint8(0x4FB8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB8(int value) {
                SetUint8(0x4FB8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FB9/0x24469.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FB9() {
                return GetUint8(0x4FB9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FB9(int value) {
                SetUint8(0x4FB9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBA/0x2446A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBA() {
                return GetUint8(0x4FBA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBA(int value) {
                SetUint8(0x4FBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBB/0x2446B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBB() {
                return GetUint8(0x4FBB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBB(int value) {
                SetUint8(0x4FBB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBC/0x2446C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBC() {
                return GetUint8(0x4FBC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBC(int value) {
                SetUint8(0x4FBC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBD/0x2446D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBD() {
                return GetUint8(0x4FBD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBD(int value) {
                SetUint8(0x4FBD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBE/0x2446E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBE() {
                return GetUint8(0x4FBE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBE(int value) {
                SetUint8(0x4FBE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FBF/0x2446F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FBF() {
                return GetUint8(0x4FBF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FBF(int value) {
                SetUint8(0x4FBF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC0/0x24470.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC0() {
                return GetUint8(0x4FC0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC0(int value) {
                SetUint8(0x4FC0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC1/0x24471.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC1() {
                return GetUint8(0x4FC1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC1(int value) {
                SetUint8(0x4FC1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC2/0x24472.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC2() {
                return GetUint8(0x4FC2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC2(int value) {
                SetUint8(0x4FC2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC3/0x24473.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC3() {
                return GetUint8(0x4FC3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC3(int value) {
                SetUint8(0x4FC3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC4/0x24474.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC4() {
                return GetUint8(0x4FC4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC4(int value) {
                SetUint8(0x4FC4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC5/0x24475.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC5() {
                return GetUint8(0x4FC5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC5(int value) {
                SetUint8(0x4FC5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC6/0x24476.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC6() {
                return GetUint8(0x4FC6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC6(int value) {
                SetUint8(0x4FC6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC7/0x24477.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC7() {
                return GetUint8(0x4FC7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC7(int value) {
                SetUint8(0x4FC7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC8/0x24478.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC8() {
                return GetUint8(0x4FC8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC8(int value) {
                SetUint8(0x4FC8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FC9/0x24479.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FC9() {
                return GetUint8(0x4FC9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FC9(int value) {
                SetUint8(0x4FC9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCA/0x2447A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCA() {
                return GetUint8(0x4FCA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCA(int value) {
                SetUint8(0x4FCA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCB/0x2447B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCB() {
                return GetUint8(0x4FCB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCB(int value) {
                SetUint8(0x4FCB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCC/0x2447C.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCC() {
                return GetUint8(0x4FCC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCC(int value) {
                SetUint8(0x4FCC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCD/0x2447D.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCD() {
                return GetUint8(0x4FCD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCD(int value) {
                SetUint8(0x4FCD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCE/0x2447E.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCE() {
                return GetUint8(0x4FCE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCE(int value) {
                SetUint8(0x4FCE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FCF/0x2447F.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FCF() {
                return GetUint8(0x4FCF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FCF(int value) {
                SetUint8(0x4FCF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD0/0x24480.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD0() {
                return GetUint8(0x4FD0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD0(int value) {
                SetUint8(0x4FD0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD1/0x24481.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD1() {
                return GetUint8(0x4FD1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD1(int value) {
                SetUint8(0x4FD1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD2/0x24482.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD2() {
                return GetUint8(0x4FD2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD2(int value) {
                SetUint8(0x4FD2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD3/0x24483.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD3() {
                return GetUint8(0x4FD3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD3(int value) {
                SetUint8(0x4FD3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD4/0x24484.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD4() {
                return GetUint8(0x4FD4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD4(int value) {
                SetUint8(0x4FD4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD5/0x24485.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD5() {
                return GetUint8(0x4FD5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD5(int value) {
                SetUint8(0x4FD5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD6/0x24486.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD6() {
                return GetUint8(0x4FD6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD6(int value) {
                SetUint8(0x4FD6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD7/0x24487.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD7() {
                return GetUint8(0x4FD7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD7(int value) {
                SetUint8(0x4FD7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD8/0x24488.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD8() {
                return GetUint8(0x4FD8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD8(int value) {
                SetUint8(0x4FD8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FD9/0x24489.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FD9() {
                return GetUint8(0x4FD9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FD9(int value) {
                SetUint8(0x4FD9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FDA/0x2448A.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FDA() {
                return GetUint8(0x4FDA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FDA(int value) {
                SetUint8(0x4FDA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x4FDB/0x2448B.
            // Operation not registered by running code
            public int GetByte8_1F4B_4FDB() {
                return GetUint8(0x4FDB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_4FDB(int value) {
                SetUint8(0x4FDB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x519C/0x2464C.
            // Operation not registered by running code
            public int GetByte8_1F4B_519C() {
                return GetUint8(0x519C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_519C(int value) {
                SetUint8(0x519C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x519D/0x2464D.
            // Operation not registered by running code
            public int GetByte8_1F4B_519D() {
                return GetUint8(0x519D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_519D(int value) {
                SetUint8(0x519D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x519E/0x2464E.
            // Operation not registered by running code
            public int GetByte8_1F4B_519E() {
                return GetUint8(0x519E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_519E(int value) {
                SetUint8(0x519E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x519F/0x2464F.
            // Operation not registered by running code
            public int GetByte8_1F4B_519F() {
                return GetUint8(0x519F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_519F(int value) {
                SetUint8(0x519F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A0/0x24650.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A0() {
                return GetUint8(0x51A0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A0(int value) {
                SetUint8(0x51A0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A1/0x24651.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A1() {
                return GetUint8(0x51A1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A1(int value) {
                SetUint8(0x51A1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A2/0x24652.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A2() {
                return GetUint8(0x51A2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A2(int value) {
                SetUint8(0x51A2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A3/0x24653.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A3() {
                return GetUint8(0x51A3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A3(int value) {
                SetUint8(0x51A3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A4/0x24654.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A4() {
                return GetUint8(0x51A4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A4(int value) {
                SetUint8(0x51A4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A5/0x24655.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A5() {
                return GetUint8(0x51A5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A5(int value) {
                SetUint8(0x51A5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A6/0x24656.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A6() {
                return GetUint8(0x51A6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A6(int value) {
                SetUint8(0x51A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A7/0x24657.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A7() {
                return GetUint8(0x51A7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A7(int value) {
                SetUint8(0x51A7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A8/0x24658.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A8() {
                return GetUint8(0x51A8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A8(int value) {
                SetUint8(0x51A8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51A9/0x24659.
            // Operation not registered by running code
            public int GetByte8_1F4B_51A9() {
                return GetUint8(0x51A9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51A9(int value) {
                SetUint8(0x51A9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AA/0x2465A.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AA() {
                return GetUint8(0x51AA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AA(int value) {
                SetUint8(0x51AA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AB/0x2465B.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AB() {
                return GetUint8(0x51AB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AB(int value) {
                SetUint8(0x51AB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AC/0x2465C.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AC() {
                return GetUint8(0x51AC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AC(int value) {
                SetUint8(0x51AC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AD/0x2465D.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AD() {
                return GetUint8(0x51AD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AD(int value) {
                SetUint8(0x51AD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AE/0x2465E.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AE() {
                return GetUint8(0x51AE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AE(int value) {
                SetUint8(0x51AE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51AF/0x2465F.
            // Operation not registered by running code
            public int GetByte8_1F4B_51AF() {
                return GetUint8(0x51AF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51AF(int value) {
                SetUint8(0x51AF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B0/0x24660.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B0() {
                return GetUint8(0x51B0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B0(int value) {
                SetUint8(0x51B0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B1/0x24661.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B1() {
                return GetUint8(0x51B1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B1(int value) {
                SetUint8(0x51B1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B2/0x24662.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B2() {
                return GetUint8(0x51B2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B2(int value) {
                SetUint8(0x51B2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B3/0x24663.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B3() {
                return GetUint8(0x51B3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B3(int value) {
                SetUint8(0x51B3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B4/0x24664.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B4() {
                return GetUint8(0x51B4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B4(int value) {
                SetUint8(0x51B4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B5/0x24665.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B5() {
                return GetUint8(0x51B5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B5(int value) {
                SetUint8(0x51B5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B6/0x24666.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B6() {
                return GetUint8(0x51B6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B6(int value) {
                SetUint8(0x51B6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B7/0x24667.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B7() {
                return GetUint8(0x51B7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B7(int value) {
                SetUint8(0x51B7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B8/0x24668.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B8() {
                return GetUint8(0x51B8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B8(int value) {
                SetUint8(0x51B8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51B9/0x24669.
            // Operation not registered by running code
            public int GetByte8_1F4B_51B9() {
                return GetUint8(0x51B9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51B9(int value) {
                SetUint8(0x51B9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BA/0x2466A.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BA() {
                return GetUint8(0x51BA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BA(int value) {
                SetUint8(0x51BA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BB/0x2466B.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BB() {
                return GetUint8(0x51BB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BB(int value) {
                SetUint8(0x51BB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BC/0x2466C.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BC() {
                return GetUint8(0x51BC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BC(int value) {
                SetUint8(0x51BC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BD/0x2466D.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BD() {
                return GetUint8(0x51BD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BD(int value) {
                SetUint8(0x51BD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BE/0x2466E.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BE() {
                return GetUint8(0x51BE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BE(int value) {
                SetUint8(0x51BE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51BF/0x2466F.
            // Operation not registered by running code
            public int GetByte8_1F4B_51BF() {
                return GetUint8(0x51BF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51BF(int value) {
                SetUint8(0x51BF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C0/0x24670.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C0() {
                return GetUint8(0x51C0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C0(int value) {
                SetUint8(0x51C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C1/0x24671.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C1() {
                return GetUint8(0x51C1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C1(int value) {
                SetUint8(0x51C1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C2/0x24672.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C2() {
                return GetUint8(0x51C2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C2(int value) {
                SetUint8(0x51C2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C3/0x24673.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C3() {
                return GetUint8(0x51C3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C3(int value) {
                SetUint8(0x51C3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C4/0x24674.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C4() {
                return GetUint8(0x51C4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C4(int value) {
                SetUint8(0x51C4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C5/0x24675.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C5() {
                return GetUint8(0x51C5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C5(int value) {
                SetUint8(0x51C5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C6/0x24676.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C6() {
                return GetUint8(0x51C6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C6(int value) {
                SetUint8(0x51C6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C7/0x24677.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C7() {
                return GetUint8(0x51C7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C7(int value) {
                SetUint8(0x51C7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C8/0x24678.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C8() {
                return GetUint8(0x51C8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C8(int value) {
                SetUint8(0x51C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51C9/0x24679.
            // Operation not registered by running code
            public int GetByte8_1F4B_51C9() {
                return GetUint8(0x51C9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51C9(int value) {
                SetUint8(0x51C9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CA/0x2467A.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CA() {
                return GetUint8(0x51CA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CA(int value) {
                SetUint8(0x51CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CB/0x2467B.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CB() {
                return GetUint8(0x51CB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CB(int value) {
                SetUint8(0x51CB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CC/0x2467C.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CC() {
                return GetUint8(0x51CC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CC(int value) {
                SetUint8(0x51CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CD/0x2467D.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CD() {
                return GetUint8(0x51CD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CD(int value) {
                SetUint8(0x51CD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CE/0x2467E.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CE() {
                return GetUint8(0x51CE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CE(int value) {
                SetUint8(0x51CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51CF/0x2467F.
            // Operation not registered by running code
            public int GetByte8_1F4B_51CF() {
                return GetUint8(0x51CF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51CF(int value) {
                SetUint8(0x51CF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D0/0x24680.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D0() {
                return GetUint8(0x51D0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D0(int value) {
                SetUint8(0x51D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D1/0x24681.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D1() {
                return GetUint8(0x51D1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D1(int value) {
                SetUint8(0x51D1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D2/0x24682.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D2() {
                return GetUint8(0x51D2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D2(int value) {
                SetUint8(0x51D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D3/0x24683.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D3() {
                return GetUint8(0x51D3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D3(int value) {
                SetUint8(0x51D3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D4/0x24684.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D4() {
                return GetUint8(0x51D4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D4(int value) {
                SetUint8(0x51D4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D5/0x24685.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D5() {
                return GetUint8(0x51D5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D5(int value) {
                SetUint8(0x51D5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D6/0x24686.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D6() {
                return GetUint8(0x51D6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D6(int value) {
                SetUint8(0x51D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D7/0x24687.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D7() {
                return GetUint8(0x51D7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D7(int value) {
                SetUint8(0x51D7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D8/0x24688.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D8() {
                return GetUint8(0x51D8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D8(int value) {
                SetUint8(0x51D8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51D9/0x24689.
            // Operation not registered by running code
            public int GetByte8_1F4B_51D9() {
                return GetUint8(0x51D9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51D9(int value) {
                SetUint8(0x51D9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DA/0x2468A.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DA() {
                return GetUint8(0x51DA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DA(int value) {
                SetUint8(0x51DA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DB/0x2468B.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DB() {
                return GetUint8(0x51DB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DB(int value) {
                SetUint8(0x51DB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DC/0x2468C.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DC() {
                return GetUint8(0x51DC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DC(int value) {
                SetUint8(0x51DC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DD/0x2468D.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DD() {
                return GetUint8(0x51DD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DD(int value) {
                SetUint8(0x51DD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DE/0x2468E.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DE() {
                return GetUint8(0x51DE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DE(int value) {
                SetUint8(0x51DE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51DF/0x2468F.
            // Operation not registered by running code
            public int GetByte8_1F4B_51DF() {
                return GetUint8(0x51DF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51DF(int value) {
                SetUint8(0x51DF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E0/0x24690.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E0() {
                return GetUint8(0x51E0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E0(int value) {
                SetUint8(0x51E0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E1/0x24691.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E1() {
                return GetUint8(0x51E1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E1(int value) {
                SetUint8(0x51E1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E2/0x24692.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E2() {
                return GetUint8(0x51E2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E2(int value) {
                SetUint8(0x51E2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E3/0x24693.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E3() {
                return GetUint8(0x51E3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E3(int value) {
                SetUint8(0x51E3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E4/0x24694.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E4() {
                return GetUint8(0x51E4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E4(int value) {
                SetUint8(0x51E4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E5/0x24695.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E5() {
                return GetUint8(0x51E5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E5(int value) {
                SetUint8(0x51E5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E6/0x24696.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E6() {
                return GetUint8(0x51E6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E6(int value) {
                SetUint8(0x51E6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E7/0x24697.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E7() {
                return GetUint8(0x51E7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E7(int value) {
                SetUint8(0x51E7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E8/0x24698.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E8() {
                return GetUint8(0x51E8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E8(int value) {
                SetUint8(0x51E8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51E9/0x24699.
            // Operation not registered by running code
            public int GetByte8_1F4B_51E9() {
                return GetUint8(0x51E9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51E9(int value) {
                SetUint8(0x51E9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51EA/0x2469A.
            // Operation not registered by running code
            public int GetByte8_1F4B_51EA() {
                return GetUint8(0x51EA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51EA(int value) {
                SetUint8(0x51EA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51EB/0x2469B.
            // Operation not registered by running code
            public int GetByte8_1F4B_51EB() {
                return GetUint8(0x51EB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51EB(int value) {
                SetUint8(0x51EB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51EC/0x2469C.
            // Operation not registered by running code
            public int GetByte8_1F4B_51EC() {
                return GetUint8(0x51EC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51EC(int value) {
                SetUint8(0x51EC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51ED/0x2469D.
            // Operation not registered by running code
            public int GetByte8_1F4B_51ED() {
                return GetUint8(0x51ED);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51ED(int value) {
                SetUint8(0x51ED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51EE/0x2469E.
            // Operation not registered by running code
            public int GetByte8_1F4B_51EE() {
                return GetUint8(0x51EE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51EE(int value) {
                SetUint8(0x51EE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51EF/0x2469F.
            // Operation not registered by running code
            public int GetByte8_1F4B_51EF() {
                return GetUint8(0x51EF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51EF(int value) {
                SetUint8(0x51EF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F0/0x246A0.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F0() {
                return GetUint8(0x51F0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F0(int value) {
                SetUint8(0x51F0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F1/0x246A1.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F1() {
                return GetUint8(0x51F1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F1(int value) {
                SetUint8(0x51F1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F2/0x246A2.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F2() {
                return GetUint8(0x51F2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F2(int value) {
                SetUint8(0x51F2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F3/0x246A3.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F3() {
                return GetUint8(0x51F3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F3(int value) {
                SetUint8(0x51F3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F4/0x246A4.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F4() {
                return GetUint8(0x51F4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F4(int value) {
                SetUint8(0x51F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F5/0x246A5.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F5() {
                return GetUint8(0x51F5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F5(int value) {
                SetUint8(0x51F5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F6/0x246A6.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F6() {
                return GetUint8(0x51F6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F6(int value) {
                SetUint8(0x51F6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F7/0x246A7.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F7() {
                return GetUint8(0x51F7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F7(int value) {
                SetUint8(0x51F7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F8/0x246A8.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F8() {
                return GetUint8(0x51F8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F8(int value) {
                SetUint8(0x51F8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51F9/0x246A9.
            // Operation not registered by running code
            public int GetByte8_1F4B_51F9() {
                return GetUint8(0x51F9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51F9(int value) {
                SetUint8(0x51F9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FA/0x246AA.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FA() {
                return GetUint8(0x51FA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FA(int value) {
                SetUint8(0x51FA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FB/0x246AB.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FB() {
                return GetUint8(0x51FB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FB(int value) {
                SetUint8(0x51FB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FC/0x246AC.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FC() {
                return GetUint8(0x51FC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FC(int value) {
                SetUint8(0x51FC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FD/0x246AD.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FD() {
                return GetUint8(0x51FD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FD(int value) {
                SetUint8(0x51FD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FE/0x246AE.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FE() {
                return GetUint8(0x51FE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FE(int value) {
                SetUint8(0x51FE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x51FF/0x246AF.
            // Operation not registered by running code
            public int GetByte8_1F4B_51FF() {
                return GetUint8(0x51FF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_51FF(int value) {
                SetUint8(0x51FF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5200/0x246B0.
            // Operation not registered by running code
            public int GetByte8_1F4B_5200() {
                return GetUint8(0x5200);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5200(int value) {
                SetUint8(0x5200, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5201/0x246B1.
            // Operation not registered by running code
            public int GetByte8_1F4B_5201() {
                return GetUint8(0x5201);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5201(int value) {
                SetUint8(0x5201, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5202/0x246B2.
            // Operation not registered by running code
            public int GetByte8_1F4B_5202() {
                return GetUint8(0x5202);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5202(int value) {
                SetUint8(0x5202, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5203/0x246B3.
            // Operation not registered by running code
            public int GetByte8_1F4B_5203() {
                return GetUint8(0x5203);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5203(int value) {
                SetUint8(0x5203, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5204/0x246B4.
            // Operation not registered by running code
            public int GetByte8_1F4B_5204() {
                return GetUint8(0x5204);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5204(int value) {
                SetUint8(0x5204, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5205/0x246B5.
            // Operation not registered by running code
            public int GetByte8_1F4B_5205() {
                return GetUint8(0x5205);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5205(int value) {
                SetUint8(0x5205, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5206/0x246B6.
            // Operation not registered by running code
            public int GetByte8_1F4B_5206() {
                return GetUint8(0x5206);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5206(int value) {
                SetUint8(0x5206, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5207/0x246B7.
            // Operation not registered by running code
            public int GetByte8_1F4B_5207() {
                return GetUint8(0x5207);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5207(int value) {
                SetUint8(0x5207, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5208/0x246B8.
            // Operation not registered by running code
            public int GetByte8_1F4B_5208() {
                return GetUint8(0x5208);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5208(int value) {
                SetUint8(0x5208, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5209/0x246B9.
            // Operation not registered by running code
            public int GetByte8_1F4B_5209() {
                return GetUint8(0x5209);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5209(int value) {
                SetUint8(0x5209, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520A/0x246BA.
            // Operation not registered by running code
            public int GetByte8_1F4B_520A() {
                return GetUint8(0x520A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520A(int value) {
                SetUint8(0x520A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520B/0x246BB.
            // Operation not registered by running code
            public int GetByte8_1F4B_520B() {
                return GetUint8(0x520B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520B(int value) {
                SetUint8(0x520B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520C/0x246BC.
            // Operation not registered by running code
            public int GetByte8_1F4B_520C() {
                return GetUint8(0x520C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520C(int value) {
                SetUint8(0x520C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520D/0x246BD.
            // Operation not registered by running code
            public int GetByte8_1F4B_520D() {
                return GetUint8(0x520D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520D(int value) {
                SetUint8(0x520D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520E/0x246BE.
            // Operation not registered by running code
            public int GetByte8_1F4B_520E() {
                return GetUint8(0x520E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520E(int value) {
                SetUint8(0x520E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x520F/0x246BF.
            // Operation not registered by running code
            public int GetByte8_1F4B_520F() {
                return GetUint8(0x520F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_520F(int value) {
                SetUint8(0x520F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5210/0x246C0.
            // Operation not registered by running code
            public int GetByte8_1F4B_5210() {
                return GetUint8(0x5210);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5210(int value) {
                SetUint8(0x5210, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5211/0x246C1.
            // Operation not registered by running code
            public int GetByte8_1F4B_5211() {
                return GetUint8(0x5211);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5211(int value) {
                SetUint8(0x5211, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5212/0x246C2.
            // Operation not registered by running code
            public int GetByte8_1F4B_5212() {
                return GetUint8(0x5212);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5212(int value) {
                SetUint8(0x5212, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5213/0x246C3.
            // Operation not registered by running code
            public int GetByte8_1F4B_5213() {
                return GetUint8(0x5213);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5213(int value) {
                SetUint8(0x5213, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5214/0x246C4.
            // Operation not registered by running code
            public int GetByte8_1F4B_5214() {
                return GetUint8(0x5214);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5214(int value) {
                SetUint8(0x5214, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5215/0x246C5.
            // Operation not registered by running code
            public int GetByte8_1F4B_5215() {
                return GetUint8(0x5215);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5215(int value) {
                SetUint8(0x5215, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5216/0x246C6.
            // Operation not registered by running code
            public int GetByte8_1F4B_5216() {
                return GetUint8(0x5216);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5216(int value) {
                SetUint8(0x5216, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5217/0x246C7.
            // Operation not registered by running code
            public int GetByte8_1F4B_5217() {
                return GetUint8(0x5217);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5217(int value) {
                SetUint8(0x5217, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5218/0x246C8.
            // Operation not registered by running code
            public int GetByte8_1F4B_5218() {
                return GetUint8(0x5218);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5218(int value) {
                SetUint8(0x5218, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5219/0x246C9.
            // Operation not registered by running code
            public int GetByte8_1F4B_5219() {
                return GetUint8(0x5219);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5219(int value) {
                SetUint8(0x5219, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521A/0x246CA.
            // Operation not registered by running code
            public int GetByte8_1F4B_521A() {
                return GetUint8(0x521A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521A(int value) {
                SetUint8(0x521A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521B/0x246CB.
            // Operation not registered by running code
            public int GetByte8_1F4B_521B() {
                return GetUint8(0x521B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521B(int value) {
                SetUint8(0x521B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521C/0x246CC.
            // Operation not registered by running code
            public int GetByte8_1F4B_521C() {
                return GetUint8(0x521C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521C(int value) {
                SetUint8(0x521C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521D/0x246CD.
            // Operation not registered by running code
            public int GetByte8_1F4B_521D() {
                return GetUint8(0x521D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521D(int value) {
                SetUint8(0x521D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521E/0x246CE.
            // Operation not registered by running code
            public int GetByte8_1F4B_521E() {
                return GetUint8(0x521E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521E(int value) {
                SetUint8(0x521E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x521F/0x246CF.
            // Operation not registered by running code
            public int GetByte8_1F4B_521F() {
                return GetUint8(0x521F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_521F(int value) {
                SetUint8(0x521F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5220/0x246D0.
            // Operation not registered by running code
            public int GetByte8_1F4B_5220() {
                return GetUint8(0x5220);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5220(int value) {
                SetUint8(0x5220, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5221/0x246D1.
            // Operation not registered by running code
            public int GetByte8_1F4B_5221() {
                return GetUint8(0x5221);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5221(int value) {
                SetUint8(0x5221, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5222/0x246D2.
            // Operation not registered by running code
            public int GetByte8_1F4B_5222() {
                return GetUint8(0x5222);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5222(int value) {
                SetUint8(0x5222, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5223/0x246D3.
            // Operation not registered by running code
            public int GetByte8_1F4B_5223() {
                return GetUint8(0x5223);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5223(int value) {
                SetUint8(0x5223, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5224/0x246D4.
            // Operation not registered by running code
            public int GetByte8_1F4B_5224() {
                return GetUint8(0x5224);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5224(int value) {
                SetUint8(0x5224, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5225/0x246D5.
            // Operation not registered by running code
            public int GetByte8_1F4B_5225() {
                return GetUint8(0x5225);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5225(int value) {
                SetUint8(0x5225, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5226/0x246D6.
            // Operation not registered by running code
            public int GetByte8_1F4B_5226() {
                return GetUint8(0x5226);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5226(int value) {
                SetUint8(0x5226, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5227/0x246D7.
            // Operation not registered by running code
            public int GetByte8_1F4B_5227() {
                return GetUint8(0x5227);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5227(int value) {
                SetUint8(0x5227, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5228/0x246D8.
            // Operation not registered by running code
            public int GetByte8_1F4B_5228() {
                return GetUint8(0x5228);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5228(int value) {
                SetUint8(0x5228, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5229/0x246D9.
            // Operation not registered by running code
            public int GetByte8_1F4B_5229() {
                return GetUint8(0x5229);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5229(int value) {
                SetUint8(0x5229, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522A/0x246DA.
            // Operation not registered by running code
            public int GetByte8_1F4B_522A() {
                return GetUint8(0x522A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522A(int value) {
                SetUint8(0x522A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522B/0x246DB.
            // Operation not registered by running code
            public int GetByte8_1F4B_522B() {
                return GetUint8(0x522B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522B(int value) {
                SetUint8(0x522B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522C/0x246DC.
            // Operation not registered by running code
            public int GetByte8_1F4B_522C() {
                return GetUint8(0x522C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522C(int value) {
                SetUint8(0x522C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522D/0x246DD.
            // Operation not registered by running code
            public int GetByte8_1F4B_522D() {
                return GetUint8(0x522D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522D(int value) {
                SetUint8(0x522D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522E/0x246DE.
            // Operation not registered by running code
            public int GetByte8_1F4B_522E() {
                return GetUint8(0x522E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522E(int value) {
                SetUint8(0x522E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x522F/0x246DF.
            // Operation not registered by running code
            public int GetByte8_1F4B_522F() {
                return GetUint8(0x522F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_522F(int value) {
                SetUint8(0x522F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5230/0x246E0.
            // Operation not registered by running code
            public int GetByte8_1F4B_5230() {
                return GetUint8(0x5230);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5230(int value) {
                SetUint8(0x5230, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5231/0x246E1.
            // Operation not registered by running code
            public int GetByte8_1F4B_5231() {
                return GetUint8(0x5231);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5231(int value) {
                SetUint8(0x5231, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5232/0x246E2.
            // Operation not registered by running code
            public int GetByte8_1F4B_5232() {
                return GetUint8(0x5232);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5232(int value) {
                SetUint8(0x5232, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5233/0x246E3.
            // Operation not registered by running code
            public int GetByte8_1F4B_5233() {
                return GetUint8(0x5233);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5233(int value) {
                SetUint8(0x5233, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5234/0x246E4.
            // Operation not registered by running code
            public int GetByte8_1F4B_5234() {
                return GetUint8(0x5234);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5234(int value) {
                SetUint8(0x5234, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5235/0x246E5.
            // Operation not registered by running code
            public int GetByte8_1F4B_5235() {
                return GetUint8(0x5235);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5235(int value) {
                SetUint8(0x5235, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5236/0x246E6.
            // Operation not registered by running code
            public int GetByte8_1F4B_5236() {
                return GetUint8(0x5236);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5236(int value) {
                SetUint8(0x5236, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5237/0x246E7.
            // Operation not registered by running code
            public int GetByte8_1F4B_5237() {
                return GetUint8(0x5237);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5237(int value) {
                SetUint8(0x5237, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5238/0x246E8.
            // Operation not registered by running code
            public int GetByte8_1F4B_5238() {
                return GetUint8(0x5238);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5238(int value) {
                SetUint8(0x5238, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5239/0x246E9.
            // Operation not registered by running code
            public int GetByte8_1F4B_5239() {
                return GetUint8(0x5239);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5239(int value) {
                SetUint8(0x5239, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523A/0x246EA.
            // Operation not registered by running code
            public int GetByte8_1F4B_523A() {
                return GetUint8(0x523A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523A(int value) {
                SetUint8(0x523A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523B/0x246EB.
            // Operation not registered by running code
            public int GetByte8_1F4B_523B() {
                return GetUint8(0x523B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523B(int value) {
                SetUint8(0x523B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523C/0x246EC.
            // Operation not registered by running code
            public int GetByte8_1F4B_523C() {
                return GetUint8(0x523C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523C(int value) {
                SetUint8(0x523C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523D/0x246ED.
            // Operation not registered by running code
            public int GetByte8_1F4B_523D() {
                return GetUint8(0x523D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523D(int value) {
                SetUint8(0x523D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523E/0x246EE.
            // Operation not registered by running code
            public int GetByte8_1F4B_523E() {
                return GetUint8(0x523E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523E(int value) {
                SetUint8(0x523E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x523F/0x246EF.
            // Operation not registered by running code
            public int GetByte8_1F4B_523F() {
                return GetUint8(0x523F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_523F(int value) {
                SetUint8(0x523F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5240/0x246F0.
            // Operation not registered by running code
            public int GetByte8_1F4B_5240() {
                return GetUint8(0x5240);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5240(int value) {
                SetUint8(0x5240, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5241/0x246F1.
            // Operation not registered by running code
            public int GetByte8_1F4B_5241() {
                return GetUint8(0x5241);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5241(int value) {
                SetUint8(0x5241, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5242/0x246F2.
            // Operation not registered by running code
            public int GetByte8_1F4B_5242() {
                return GetUint8(0x5242);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5242(int value) {
                SetUint8(0x5242, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5243/0x246F3.
            // Operation not registered by running code
            public int GetByte8_1F4B_5243() {
                return GetUint8(0x5243);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5243(int value) {
                SetUint8(0x5243, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5244/0x246F4.
            // Operation not registered by running code
            public int GetByte8_1F4B_5244() {
                return GetUint8(0x5244);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5244(int value) {
                SetUint8(0x5244, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5245/0x246F5.
            // Operation not registered by running code
            public int GetByte8_1F4B_5245() {
                return GetUint8(0x5245);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5245(int value) {
                SetUint8(0x5245, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5246/0x246F6.
            // Operation not registered by running code
            public int GetByte8_1F4B_5246() {
                return GetUint8(0x5246);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5246(int value) {
                SetUint8(0x5246, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5247/0x246F7.
            // Operation not registered by running code
            public int GetByte8_1F4B_5247() {
                return GetUint8(0x5247);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5247(int value) {
                SetUint8(0x5247, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5248/0x246F8.
            // Operation not registered by running code
            public int GetByte8_1F4B_5248() {
                return GetUint8(0x5248);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5248(int value) {
                SetUint8(0x5248, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5249/0x246F9.
            // Operation not registered by running code
            public int GetByte8_1F4B_5249() {
                return GetUint8(0x5249);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5249(int value) {
                SetUint8(0x5249, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524A/0x246FA.
            // Operation not registered by running code
            public int GetByte8_1F4B_524A() {
                return GetUint8(0x524A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524A(int value) {
                SetUint8(0x524A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524B/0x246FB.
            // Operation not registered by running code
            public int GetByte8_1F4B_524B() {
                return GetUint8(0x524B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524B(int value) {
                SetUint8(0x524B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524C/0x246FC.
            // Operation not registered by running code
            public int GetByte8_1F4B_524C() {
                return GetUint8(0x524C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524C(int value) {
                SetUint8(0x524C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524D/0x246FD.
            // Operation not registered by running code
            public int GetByte8_1F4B_524D() {
                return GetUint8(0x524D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524D(int value) {
                SetUint8(0x524D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524E/0x246FE.
            // Operation not registered by running code
            public int GetByte8_1F4B_524E() {
                return GetUint8(0x524E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524E(int value) {
                SetUint8(0x524E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x524F/0x246FF.
            // Operation not registered by running code
            public int GetByte8_1F4B_524F() {
                return GetUint8(0x524F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_524F(int value) {
                SetUint8(0x524F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5250/0x24700.
            // Operation not registered by running code
            public int GetByte8_1F4B_5250() {
                return GetUint8(0x5250);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5250(int value) {
                SetUint8(0x5250, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5251/0x24701.
            // Operation not registered by running code
            public int GetByte8_1F4B_5251() {
                return GetUint8(0x5251);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5251(int value) {
                SetUint8(0x5251, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5252/0x24702.
            // Operation not registered by running code
            public int GetByte8_1F4B_5252() {
                return GetUint8(0x5252);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5252(int value) {
                SetUint8(0x5252, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5253/0x24703.
            // Operation not registered by running code
            public int GetByte8_1F4B_5253() {
                return GetUint8(0x5253);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5253(int value) {
                SetUint8(0x5253, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5254/0x24704.
            // Operation not registered by running code
            public int GetByte8_1F4B_5254() {
                return GetUint8(0x5254);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5254(int value) {
                SetUint8(0x5254, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5255/0x24705.
            // Operation not registered by running code
            public int GetByte8_1F4B_5255() {
                return GetUint8(0x5255);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5255(int value) {
                SetUint8(0x5255, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5256/0x24706.
            // Operation not registered by running code
            public int GetByte8_1F4B_5256() {
                return GetUint8(0x5256);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5256(int value) {
                SetUint8(0x5256, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5257/0x24707.
            // Operation not registered by running code
            public int GetByte8_1F4B_5257() {
                return GetUint8(0x5257);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5257(int value) {
                SetUint8(0x5257, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5258/0x24708.
            // Operation not registered by running code
            public int GetByte8_1F4B_5258() {
                return GetUint8(0x5258);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5258(int value) {
                SetUint8(0x5258, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5259/0x24709.
            // Operation not registered by running code
            public int GetByte8_1F4B_5259() {
                return GetUint8(0x5259);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5259(int value) {
                SetUint8(0x5259, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525A/0x2470A.
            // Operation not registered by running code
            public int GetByte8_1F4B_525A() {
                return GetUint8(0x525A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525A(int value) {
                SetUint8(0x525A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525B/0x2470B.
            // Operation not registered by running code
            public int GetByte8_1F4B_525B() {
                return GetUint8(0x525B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525B(int value) {
                SetUint8(0x525B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525C/0x2470C.
            // Operation not registered by running code
            public int GetByte8_1F4B_525C() {
                return GetUint8(0x525C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525C(int value) {
                SetUint8(0x525C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525D/0x2470D.
            // Operation not registered by running code
            public int GetByte8_1F4B_525D() {
                return GetUint8(0x525D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525D(int value) {
                SetUint8(0x525D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525E/0x2470E.
            // Operation not registered by running code
            public int GetByte8_1F4B_525E() {
                return GetUint8(0x525E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525E(int value) {
                SetUint8(0x525E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x525F/0x2470F.
            // Operation not registered by running code
            public int GetByte8_1F4B_525F() {
                return GetUint8(0x525F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_525F(int value) {
                SetUint8(0x525F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5260/0x24710.
            // Operation not registered by running code
            public int GetByte8_1F4B_5260() {
                return GetUint8(0x5260);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5260(int value) {
                SetUint8(0x5260, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5261/0x24711.
            // Operation not registered by running code
            public int GetByte8_1F4B_5261() {
                return GetUint8(0x5261);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5261(int value) {
                SetUint8(0x5261, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5262/0x24712.
            // Operation not registered by running code
            public int GetByte8_1F4B_5262() {
                return GetUint8(0x5262);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5262(int value) {
                SetUint8(0x5262, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5263/0x24713.
            // Operation not registered by running code
            public int GetByte8_1F4B_5263() {
                return GetUint8(0x5263);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5263(int value) {
                SetUint8(0x5263, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5264/0x24714.
            // Operation not registered by running code
            public int GetByte8_1F4B_5264() {
                return GetUint8(0x5264);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5264(int value) {
                SetUint8(0x5264, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5265/0x24715.
            // Operation not registered by running code
            public int GetByte8_1F4B_5265() {
                return GetUint8(0x5265);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5265(int value) {
                SetUint8(0x5265, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5266/0x24716.
            // Operation not registered by running code
            public int GetByte8_1F4B_5266() {
                return GetUint8(0x5266);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5266(int value) {
                SetUint8(0x5266, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5267/0x24717.
            // Operation not registered by running code
            public int GetByte8_1F4B_5267() {
                return GetUint8(0x5267);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5267(int value) {
                SetUint8(0x5267, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5268/0x24718.
            // Operation not registered by running code
            public int GetByte8_1F4B_5268() {
                return GetUint8(0x5268);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5268(int value) {
                SetUint8(0x5268, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5269/0x24719.
            // Operation not registered by running code
            public int GetByte8_1F4B_5269() {
                return GetUint8(0x5269);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5269(int value) {
                SetUint8(0x5269, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526A/0x2471A.
            // Operation not registered by running code
            public int GetByte8_1F4B_526A() {
                return GetUint8(0x526A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526A(int value) {
                SetUint8(0x526A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526B/0x2471B.
            // Operation not registered by running code
            public int GetByte8_1F4B_526B() {
                return GetUint8(0x526B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526B(int value) {
                SetUint8(0x526B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526C/0x2471C.
            // Operation not registered by running code
            public int GetByte8_1F4B_526C() {
                return GetUint8(0x526C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526C(int value) {
                SetUint8(0x526C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526D/0x2471D.
            // Operation not registered by running code
            public int GetByte8_1F4B_526D() {
                return GetUint8(0x526D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526D(int value) {
                SetUint8(0x526D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526E/0x2471E.
            // Operation not registered by running code
            public int GetByte8_1F4B_526E() {
                return GetUint8(0x526E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526E(int value) {
                SetUint8(0x526E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x526F/0x2471F.
            // Operation not registered by running code
            public int GetByte8_1F4B_526F() {
                return GetUint8(0x526F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_526F(int value) {
                SetUint8(0x526F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5270/0x24720.
            // Operation not registered by running code
            public int GetByte8_1F4B_5270() {
                return GetUint8(0x5270);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5270(int value) {
                SetUint8(0x5270, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5271/0x24721.
            // Operation not registered by running code
            public int GetByte8_1F4B_5271() {
                return GetUint8(0x5271);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5271(int value) {
                SetUint8(0x5271, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5272/0x24722.
            // Operation not registered by running code
            public int GetByte8_1F4B_5272() {
                return GetUint8(0x5272);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5272(int value) {
                SetUint8(0x5272, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5273/0x24723.
            // Operation not registered by running code
            public int GetByte8_1F4B_5273() {
                return GetUint8(0x5273);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5273(int value) {
                SetUint8(0x5273, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5274/0x24724.
            // Operation not registered by running code
            public int GetByte8_1F4B_5274() {
                return GetUint8(0x5274);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5274(int value) {
                SetUint8(0x5274, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5275/0x24725.
            // Operation not registered by running code
            public int GetByte8_1F4B_5275() {
                return GetUint8(0x5275);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5275(int value) {
                SetUint8(0x5275, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5276/0x24726.
            // Operation not registered by running code
            public int GetByte8_1F4B_5276() {
                return GetUint8(0x5276);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5276(int value) {
                SetUint8(0x5276, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5277/0x24727.
            // Operation not registered by running code
            public int GetByte8_1F4B_5277() {
                return GetUint8(0x5277);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5277(int value) {
                SetUint8(0x5277, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5278/0x24728.
            // Operation not registered by running code
            public int GetByte8_1F4B_5278() {
                return GetUint8(0x5278);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5278(int value) {
                SetUint8(0x5278, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5279/0x24729.
            // Operation not registered by running code
            public int GetByte8_1F4B_5279() {
                return GetUint8(0x5279);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5279(int value) {
                SetUint8(0x5279, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527A/0x2472A.
            // Operation not registered by running code
            public int GetByte8_1F4B_527A() {
                return GetUint8(0x527A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527A(int value) {
                SetUint8(0x527A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527B/0x2472B.
            // Operation not registered by running code
            public int GetByte8_1F4B_527B() {
                return GetUint8(0x527B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527B(int value) {
                SetUint8(0x527B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527C/0x2472C.
            // Operation not registered by running code
            public int GetByte8_1F4B_527C() {
                return GetUint8(0x527C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527C(int value) {
                SetUint8(0x527C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527D/0x2472D.
            // Operation not registered by running code
            public int GetByte8_1F4B_527D() {
                return GetUint8(0x527D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527D(int value) {
                SetUint8(0x527D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527E/0x2472E.
            // Operation not registered by running code
            public int GetByte8_1F4B_527E() {
                return GetUint8(0x527E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527E(int value) {
                SetUint8(0x527E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x527F/0x2472F.
            // Operation not registered by running code
            public int GetByte8_1F4B_527F() {
                return GetUint8(0x527F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_527F(int value) {
                SetUint8(0x527F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5280/0x24730.
            // Operation not registered by running code
            public int GetByte8_1F4B_5280() {
                return GetUint8(0x5280);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5280(int value) {
                SetUint8(0x5280, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5281/0x24731.
            // Operation not registered by running code
            public int GetByte8_1F4B_5281() {
                return GetUint8(0x5281);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5281(int value) {
                SetUint8(0x5281, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5282/0x24732.
            // Operation not registered by running code
            public int GetByte8_1F4B_5282() {
                return GetUint8(0x5282);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5282(int value) {
                SetUint8(0x5282, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5283/0x24733.
            // Operation not registered by running code
            public int GetByte8_1F4B_5283() {
                return GetUint8(0x5283);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5283(int value) {
                SetUint8(0x5283, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5284/0x24734.
            // Operation not registered by running code
            public int GetByte8_1F4B_5284() {
                return GetUint8(0x5284);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5284(int value) {
                SetUint8(0x5284, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5285/0x24735.
            // Operation not registered by running code
            public int GetByte8_1F4B_5285() {
                return GetUint8(0x5285);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5285(int value) {
                SetUint8(0x5285, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5286/0x24736.
            // Operation not registered by running code
            public int GetByte8_1F4B_5286() {
                return GetUint8(0x5286);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5286(int value) {
                SetUint8(0x5286, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5287/0x24737.
            // Operation not registered by running code
            public int GetByte8_1F4B_5287() {
                return GetUint8(0x5287);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5287(int value) {
                SetUint8(0x5287, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5288/0x24738.
            // Operation not registered by running code
            public int GetByte8_1F4B_5288() {
                return GetUint8(0x5288);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5288(int value) {
                SetUint8(0x5288, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5289/0x24739.
            // Operation not registered by running code
            public int GetByte8_1F4B_5289() {
                return GetUint8(0x5289);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5289(int value) {
                SetUint8(0x5289, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528A/0x2473A.
            // Operation not registered by running code
            public int GetByte8_1F4B_528A() {
                return GetUint8(0x528A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528A(int value) {
                SetUint8(0x528A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528B/0x2473B.
            // Operation not registered by running code
            public int GetByte8_1F4B_528B() {
                return GetUint8(0x528B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528B(int value) {
                SetUint8(0x528B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528C/0x2473C.
            // Operation not registered by running code
            public int GetByte8_1F4B_528C() {
                return GetUint8(0x528C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528C(int value) {
                SetUint8(0x528C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528D/0x2473D.
            // Operation not registered by running code
            public int GetByte8_1F4B_528D() {
                return GetUint8(0x528D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528D(int value) {
                SetUint8(0x528D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528E/0x2473E.
            // Operation not registered by running code
            public int GetByte8_1F4B_528E() {
                return GetUint8(0x528E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528E(int value) {
                SetUint8(0x528E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x528F/0x2473F.
            // Operation not registered by running code
            public int GetByte8_1F4B_528F() {
                return GetUint8(0x528F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_528F(int value) {
                SetUint8(0x528F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5290/0x24740.
            // Operation not registered by running code
            public int GetByte8_1F4B_5290() {
                return GetUint8(0x5290);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5290(int value) {
                SetUint8(0x5290, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5291/0x24741.
            // Operation not registered by running code
            public int GetByte8_1F4B_5291() {
                return GetUint8(0x5291);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5291(int value) {
                SetUint8(0x5291, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5292/0x24742.
            // Operation not registered by running code
            public int GetByte8_1F4B_5292() {
                return GetUint8(0x5292);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5292(int value) {
                SetUint8(0x5292, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5293/0x24743.
            // Operation not registered by running code
            public int GetByte8_1F4B_5293() {
                return GetUint8(0x5293);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5293(int value) {
                SetUint8(0x5293, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5294/0x24744.
            // Operation not registered by running code
            public int GetByte8_1F4B_5294() {
                return GetUint8(0x5294);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5294(int value) {
                SetUint8(0x5294, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5295/0x24745.
            // Operation not registered by running code
            public int GetByte8_1F4B_5295() {
                return GetUint8(0x5295);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5295(int value) {
                SetUint8(0x5295, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5296/0x24746.
            // Operation not registered by running code
            public int GetByte8_1F4B_5296() {
                return GetUint8(0x5296);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5296(int value) {
                SetUint8(0x5296, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5297/0x24747.
            // Operation not registered by running code
            public int GetByte8_1F4B_5297() {
                return GetUint8(0x5297);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5297(int value) {
                SetUint8(0x5297, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5298/0x24748.
            // Operation not registered by running code
            public int GetByte8_1F4B_5298() {
                return GetUint8(0x5298);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5298(int value) {
                SetUint8(0x5298, value);
            }
            
// Getters and Setters for address 0x1F4B:0x5299/0x24749.
            // Operation not registered by running code
            public int GetByte8_1F4B_5299() {
                return GetUint8(0x5299);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_5299(int value) {
                SetUint8(0x5299, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529A/0x2474A.
            // Operation not registered by running code
            public int GetByte8_1F4B_529A() {
                return GetUint8(0x529A);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529A(int value) {
                SetUint8(0x529A, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529B/0x2474B.
            // Operation not registered by running code
            public int GetByte8_1F4B_529B() {
                return GetUint8(0x529B);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529B(int value) {
                SetUint8(0x529B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529C/0x2474C.
            // Operation not registered by running code
            public int GetByte8_1F4B_529C() {
                return GetUint8(0x529C);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529C(int value) {
                SetUint8(0x529C, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529D/0x2474D.
            // Operation not registered by running code
            public int GetByte8_1F4B_529D() {
                return GetUint8(0x529D);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529D(int value) {
                SetUint8(0x529D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529E/0x2474E.
            // Operation not registered by running code
            public int GetByte8_1F4B_529E() {
                return GetUint8(0x529E);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529E(int value) {
                SetUint8(0x529E, value);
            }
            
// Getters and Setters for address 0x1F4B:0x529F/0x2474F.
            // Operation not registered by running code
            public int GetByte8_1F4B_529F() {
                return GetUint8(0x529F);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_529F(int value) {
                SetUint8(0x529F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A0/0x24750.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A0() {
                return GetUint8(0x52A0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A0(int value) {
                SetUint8(0x52A0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A1/0x24751.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A1() {
                return GetUint8(0x52A1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A1(int value) {
                SetUint8(0x52A1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A2/0x24752.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A2() {
                return GetUint8(0x52A2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A2(int value) {
                SetUint8(0x52A2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A3/0x24753.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A3() {
                return GetUint8(0x52A3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A3(int value) {
                SetUint8(0x52A3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A4/0x24754.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A4() {
                return GetUint8(0x52A4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A4(int value) {
                SetUint8(0x52A4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A5/0x24755.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A5() {
                return GetUint8(0x52A5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A5(int value) {
                SetUint8(0x52A5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A6/0x24756.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A6() {
                return GetUint8(0x52A6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A6(int value) {
                SetUint8(0x52A6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A7/0x24757.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A7() {
                return GetUint8(0x52A7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A7(int value) {
                SetUint8(0x52A7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A8/0x24758.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A8() {
                return GetUint8(0x52A8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A8(int value) {
                SetUint8(0x52A8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52A9/0x24759.
            // Operation not registered by running code
            public int GetByte8_1F4B_52A9() {
                return GetUint8(0x52A9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52A9(int value) {
                SetUint8(0x52A9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AA/0x2475A.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AA() {
                return GetUint8(0x52AA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AA(int value) {
                SetUint8(0x52AA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AB/0x2475B.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AB() {
                return GetUint8(0x52AB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AB(int value) {
                SetUint8(0x52AB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AC/0x2475C.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AC() {
                return GetUint8(0x52AC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AC(int value) {
                SetUint8(0x52AC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AD/0x2475D.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AD() {
                return GetUint8(0x52AD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AD(int value) {
                SetUint8(0x52AD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AE/0x2475E.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AE() {
                return GetUint8(0x52AE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AE(int value) {
                SetUint8(0x52AE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52AF/0x2475F.
            // Operation not registered by running code
            public int GetByte8_1F4B_52AF() {
                return GetUint8(0x52AF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52AF(int value) {
                SetUint8(0x52AF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B0/0x24760.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B0() {
                return GetUint8(0x52B0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B0(int value) {
                SetUint8(0x52B0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B1/0x24761.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B1() {
                return GetUint8(0x52B1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B1(int value) {
                SetUint8(0x52B1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B2/0x24762.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B2() {
                return GetUint8(0x52B2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B2(int value) {
                SetUint8(0x52B2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B3/0x24763.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B3() {
                return GetUint8(0x52B3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B3(int value) {
                SetUint8(0x52B3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B4/0x24764.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B4() {
                return GetUint8(0x52B4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B4(int value) {
                SetUint8(0x52B4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B5/0x24765.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B5() {
                return GetUint8(0x52B5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B5(int value) {
                SetUint8(0x52B5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B6/0x24766.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B6() {
                return GetUint8(0x52B6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B6(int value) {
                SetUint8(0x52B6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B7/0x24767.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B7() {
                return GetUint8(0x52B7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B7(int value) {
                SetUint8(0x52B7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B8/0x24768.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B8() {
                return GetUint8(0x52B8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B8(int value) {
                SetUint8(0x52B8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52B9/0x24769.
            // Operation not registered by running code
            public int GetByte8_1F4B_52B9() {
                return GetUint8(0x52B9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52B9(int value) {
                SetUint8(0x52B9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BA/0x2476A.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BA() {
                return GetUint8(0x52BA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BA(int value) {
                SetUint8(0x52BA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BB/0x2476B.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BB() {
                return GetUint8(0x52BB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BB(int value) {
                SetUint8(0x52BB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BC/0x2476C.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BC() {
                return GetUint8(0x52BC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BC(int value) {
                SetUint8(0x52BC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BD/0x2476D.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BD() {
                return GetUint8(0x52BD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BD(int value) {
                SetUint8(0x52BD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BE/0x2476E.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BE() {
                return GetUint8(0x52BE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BE(int value) {
                SetUint8(0x52BE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52BF/0x2476F.
            // Operation not registered by running code
            public int GetByte8_1F4B_52BF() {
                return GetUint8(0x52BF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52BF(int value) {
                SetUint8(0x52BF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C0/0x24770.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C0() {
                return GetUint8(0x52C0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C0(int value) {
                SetUint8(0x52C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C1/0x24771.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C1() {
                return GetUint8(0x52C1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C1(int value) {
                SetUint8(0x52C1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C2/0x24772.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C2() {
                return GetUint8(0x52C2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C2(int value) {
                SetUint8(0x52C2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C3/0x24773.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C3() {
                return GetUint8(0x52C3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C3(int value) {
                SetUint8(0x52C3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C4/0x24774.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C4() {
                return GetUint8(0x52C4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C4(int value) {
                SetUint8(0x52C4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C5/0x24775.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C5() {
                return GetUint8(0x52C5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C5(int value) {
                SetUint8(0x52C5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C6/0x24776.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C6() {
                return GetUint8(0x52C6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C6(int value) {
                SetUint8(0x52C6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C7/0x24777.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C7() {
                return GetUint8(0x52C7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C7(int value) {
                SetUint8(0x52C7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C8/0x24778.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C8() {
                return GetUint8(0x52C8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C8(int value) {
                SetUint8(0x52C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52C9/0x24779.
            // Operation not registered by running code
            public int GetByte8_1F4B_52C9() {
                return GetUint8(0x52C9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52C9(int value) {
                SetUint8(0x52C9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CA/0x2477A.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CA() {
                return GetUint8(0x52CA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CA(int value) {
                SetUint8(0x52CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CB/0x2477B.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CB() {
                return GetUint8(0x52CB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CB(int value) {
                SetUint8(0x52CB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CC/0x2477C.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CC() {
                return GetUint8(0x52CC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CC(int value) {
                SetUint8(0x52CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CD/0x2477D.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CD() {
                return GetUint8(0x52CD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CD(int value) {
                SetUint8(0x52CD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CE/0x2477E.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CE() {
                return GetUint8(0x52CE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CE(int value) {
                SetUint8(0x52CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52CF/0x2477F.
            // Operation not registered by running code
            public int GetByte8_1F4B_52CF() {
                return GetUint8(0x52CF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52CF(int value) {
                SetUint8(0x52CF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D0/0x24780.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D0() {
                return GetUint8(0x52D0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D0(int value) {
                SetUint8(0x52D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D1/0x24781.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D1() {
                return GetUint8(0x52D1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D1(int value) {
                SetUint8(0x52D1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D2/0x24782.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D2() {
                return GetUint8(0x52D2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D2(int value) {
                SetUint8(0x52D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D3/0x24783.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D3() {
                return GetUint8(0x52D3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D3(int value) {
                SetUint8(0x52D3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D4/0x24784.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D4() {
                return GetUint8(0x52D4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D4(int value) {
                SetUint8(0x52D4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D5/0x24785.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D5() {
                return GetUint8(0x52D5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D5(int value) {
                SetUint8(0x52D5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D6/0x24786.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D6() {
                return GetUint8(0x52D6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D6(int value) {
                SetUint8(0x52D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D7/0x24787.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D7() {
                return GetUint8(0x52D7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D7(int value) {
                SetUint8(0x52D7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D8/0x24788.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D8() {
                return GetUint8(0x52D8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D8(int value) {
                SetUint8(0x52D8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52D9/0x24789.
            // Operation not registered by running code
            public int GetByte8_1F4B_52D9() {
                return GetUint8(0x52D9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52D9(int value) {
                SetUint8(0x52D9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DA/0x2478A.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DA() {
                return GetUint8(0x52DA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DA(int value) {
                SetUint8(0x52DA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DB/0x2478B.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DB() {
                return GetUint8(0x52DB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DB(int value) {
                SetUint8(0x52DB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DC/0x2478C.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DC() {
                return GetUint8(0x52DC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DC(int value) {
                SetUint8(0x52DC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DD/0x2478D.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DD() {
                return GetUint8(0x52DD);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DD(int value) {
                SetUint8(0x52DD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DE/0x2478E.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DE() {
                return GetUint8(0x52DE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DE(int value) {
                SetUint8(0x52DE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52DF/0x2478F.
            // Operation not registered by running code
            public int GetByte8_1F4B_52DF() {
                return GetUint8(0x52DF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52DF(int value) {
                SetUint8(0x52DF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E0/0x24790.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E0() {
                return GetUint8(0x52E0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E0(int value) {
                SetUint8(0x52E0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E1/0x24791.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E1() {
                return GetUint8(0x52E1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E1(int value) {
                SetUint8(0x52E1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E2/0x24792.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E2() {
                return GetUint8(0x52E2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E2(int value) {
                SetUint8(0x52E2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E3/0x24793.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E3() {
                return GetUint8(0x52E3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E3(int value) {
                SetUint8(0x52E3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E4/0x24794.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E4() {
                return GetUint8(0x52E4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E4(int value) {
                SetUint8(0x52E4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E5/0x24795.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E5() {
                return GetUint8(0x52E5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E5(int value) {
                SetUint8(0x52E5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E6/0x24796.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E6() {
                return GetUint8(0x52E6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E6(int value) {
                SetUint8(0x52E6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E7/0x24797.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E7() {
                return GetUint8(0x52E7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E7(int value) {
                SetUint8(0x52E7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E8/0x24798.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E8() {
                return GetUint8(0x52E8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E8(int value) {
                SetUint8(0x52E8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52E9/0x24799.
            // Operation not registered by running code
            public int GetByte8_1F4B_52E9() {
                return GetUint8(0x52E9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52E9(int value) {
                SetUint8(0x52E9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52EA/0x2479A.
            // Operation not registered by running code
            public int GetByte8_1F4B_52EA() {
                return GetUint8(0x52EA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52EA(int value) {
                SetUint8(0x52EA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52EB/0x2479B.
            // Operation not registered by running code
            public int GetByte8_1F4B_52EB() {
                return GetUint8(0x52EB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52EB(int value) {
                SetUint8(0x52EB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52EC/0x2479C.
            // Operation not registered by running code
            public int GetByte8_1F4B_52EC() {
                return GetUint8(0x52EC);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52EC(int value) {
                SetUint8(0x52EC, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52ED/0x2479D.
            // Operation not registered by running code
            public int GetByte8_1F4B_52ED() {
                return GetUint8(0x52ED);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52ED(int value) {
                SetUint8(0x52ED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52EE/0x2479E.
            // Operation not registered by running code
            public int GetByte8_1F4B_52EE() {
                return GetUint8(0x52EE);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52EE(int value) {
                SetUint8(0x52EE, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52EF/0x2479F.
            // Operation not registered by running code
            public int GetByte8_1F4B_52EF() {
                return GetUint8(0x52EF);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52EF(int value) {
                SetUint8(0x52EF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F0/0x247A0.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F0() {
                return GetUint8(0x52F0);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F0(int value) {
                SetUint8(0x52F0, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F1/0x247A1.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F1() {
                return GetUint8(0x52F1);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F1(int value) {
                SetUint8(0x52F1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F2/0x247A2.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F2() {
                return GetUint8(0x52F2);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F2(int value) {
                SetUint8(0x52F2, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F3/0x247A3.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F3() {
                return GetUint8(0x52F3);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F3(int value) {
                SetUint8(0x52F3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F4/0x247A4.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F4() {
                return GetUint8(0x52F4);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F4(int value) {
                SetUint8(0x52F4, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F5/0x247A5.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F5() {
                return GetUint8(0x52F5);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F5(int value) {
                SetUint8(0x52F5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F6/0x247A6.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F6() {
                return GetUint8(0x52F6);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F6(int value) {
                SetUint8(0x52F6, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F7/0x247A7.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F7() {
                return GetUint8(0x52F7);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F7(int value) {
                SetUint8(0x52F7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F8/0x247A8.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F8() {
                return GetUint8(0x52F8);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F8(int value) {
                SetUint8(0x52F8, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52F9/0x247A9.
            // Operation not registered by running code
            public int GetByte8_1F4B_52F9() {
                return GetUint8(0x52F9);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52F9(int value) {
                SetUint8(0x52F9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52FA/0x247AA.
            // Operation not registered by running code
            public int GetByte8_1F4B_52FA() {
                return GetUint8(0x52FA);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52FA(int value) {
                SetUint8(0x52FA, value);
            }
            
// Getters and Setters for address 0x1F4B:0x52FB/0x247AB.
            // Operation not registered by running code
            public int GetByte8_1F4B_52FB() {
                return GetUint8(0x52FB);
            }
            
            // Was accessed via the following registers: SS
            public void SetByte8_1F4B_52FB(int value) {
                SetUint8(0x52FB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B79/0x28029.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B79() {
                return GetUint16(0x8B79);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B79(int value) {
                SetUint16(0x8B79, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B7B/0x2802B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B7B() {
                return GetUint16(0x8B7B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B7B(int value) {
                SetUint16(0x8B7B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B7D/0x2802D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B7D() {
                return GetUint16(0x8B7D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B7D(int value) {
                SetUint16(0x8B7D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B7F/0x2802F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B7F() {
                return GetUint16(0x8B7F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B7F(int value) {
                SetUint16(0x8B7F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B81/0x28031.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B81() {
                return GetUint16(0x8B81);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B81(int value) {
                SetUint16(0x8B81, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B83/0x28033.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B83() {
                return GetUint16(0x8B83);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B83(int value) {
                SetUint16(0x8B83, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B85/0x28035.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B85() {
                return GetUint16(0x8B85);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B85(int value) {
                SetUint16(0x8B85, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B87/0x28037.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B87() {
                return GetUint16(0x8B87);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B87(int value) {
                SetUint16(0x8B87, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B89/0x28039.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B89() {
                return GetUint16(0x8B89);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B89(int value) {
                SetUint16(0x8B89, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B8B/0x2803B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B8B() {
                return GetUint16(0x8B8B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B8B(int value) {
                SetUint16(0x8B8B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B8D/0x2803D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B8D() {
                return GetUint16(0x8B8D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B8D(int value) {
                SetUint16(0x8B8D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B8F/0x2803F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B8F() {
                return GetUint16(0x8B8F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B8F(int value) {
                SetUint16(0x8B8F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B91/0x28041.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B91() {
                return GetUint16(0x8B91);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B91(int value) {
                SetUint16(0x8B91, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B93/0x28043.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B93() {
                return GetUint16(0x8B93);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B93(int value) {
                SetUint16(0x8B93, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B95/0x28045.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B95() {
                return GetUint16(0x8B95);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B95(int value) {
                SetUint16(0x8B95, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B97/0x28047.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B97() {
                return GetUint16(0x8B97);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B97(int value) {
                SetUint16(0x8B97, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B99/0x28049.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B99() {
                return GetUint16(0x8B99);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B99(int value) {
                SetUint16(0x8B99, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B9B/0x2804B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B9B() {
                return GetUint16(0x8B9B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B9B(int value) {
                SetUint16(0x8B9B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B9D/0x2804D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B9D() {
                return GetUint16(0x8B9D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B9D(int value) {
                SetUint16(0x8B9D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8B9F/0x2804F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8B9F() {
                return GetUint16(0x8B9F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8B9F(int value) {
                SetUint16(0x8B9F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BA1/0x28051.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BA1() {
                return GetUint16(0x8BA1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BA1(int value) {
                SetUint16(0x8BA1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BA3/0x28053.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BA3() {
                return GetUint16(0x8BA3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BA3(int value) {
                SetUint16(0x8BA3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BA5/0x28055.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BA5() {
                return GetUint16(0x8BA5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BA5(int value) {
                SetUint16(0x8BA5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BA7/0x28057.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BA7() {
                return GetUint16(0x8BA7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BA7(int value) {
                SetUint16(0x8BA7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BA9/0x28059.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BA9() {
                return GetUint16(0x8BA9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BA9(int value) {
                SetUint16(0x8BA9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BAB/0x2805B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BAB() {
                return GetUint16(0x8BAB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BAB(int value) {
                SetUint16(0x8BAB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BAD/0x2805D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BAD() {
                return GetUint16(0x8BAD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BAD(int value) {
                SetUint16(0x8BAD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BAF/0x2805F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BAF() {
                return GetUint16(0x8BAF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BAF(int value) {
                SetUint16(0x8BAF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BB1/0x28061.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BB1() {
                return GetUint16(0x8BB1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BB1(int value) {
                SetUint16(0x8BB1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BB3/0x28063.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BB3() {
                return GetUint16(0x8BB3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BB3(int value) {
                SetUint16(0x8BB3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BB5/0x28065.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BB5() {
                return GetUint16(0x8BB5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BB5(int value) {
                SetUint16(0x8BB5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BB7/0x28067.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BB7() {
                return GetUint16(0x8BB7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BB7(int value) {
                SetUint16(0x8BB7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BB9/0x28069.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BB9() {
                return GetUint16(0x8BB9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BB9(int value) {
                SetUint16(0x8BB9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BBB/0x2806B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BBB() {
                return GetUint16(0x8BBB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BBB(int value) {
                SetUint16(0x8BBB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BBD/0x2806D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BBD() {
                return GetUint16(0x8BBD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BBD(int value) {
                SetUint16(0x8BBD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BBF/0x2806F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BBF() {
                return GetUint16(0x8BBF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BBF(int value) {
                SetUint16(0x8BBF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BC1/0x28071.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BC1() {
                return GetUint16(0x8BC1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BC1(int value) {
                SetUint16(0x8BC1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BC3/0x28073.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BC3() {
                return GetUint16(0x8BC3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BC3(int value) {
                SetUint16(0x8BC3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BC5/0x28075.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BC5() {
                return GetUint16(0x8BC5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BC5(int value) {
                SetUint16(0x8BC5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BC7/0x28077.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BC7() {
                return GetUint16(0x8BC7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BC7(int value) {
                SetUint16(0x8BC7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BC9/0x28079.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BC9() {
                return GetUint16(0x8BC9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BC9(int value) {
                SetUint16(0x8BC9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BCB/0x2807B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BCB() {
                return GetUint16(0x8BCB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BCB(int value) {
                SetUint16(0x8BCB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BCD/0x2807D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BCD() {
                return GetUint16(0x8BCD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BCD(int value) {
                SetUint16(0x8BCD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BCF/0x2807F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BCF() {
                return GetUint16(0x8BCF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BCF(int value) {
                SetUint16(0x8BCF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BD1/0x28081.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BD1() {
                return GetUint16(0x8BD1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BD1(int value) {
                SetUint16(0x8BD1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BD3/0x28083.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BD3() {
                return GetUint16(0x8BD3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BD3(int value) {
                SetUint16(0x8BD3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BD5/0x28085.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BD5() {
                return GetUint16(0x8BD5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BD5(int value) {
                SetUint16(0x8BD5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BD7/0x28087.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BD7() {
                return GetUint16(0x8BD7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BD7(int value) {
                SetUint16(0x8BD7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BD9/0x28089.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BD9() {
                return GetUint16(0x8BD9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BD9(int value) {
                SetUint16(0x8BD9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BDB/0x2808B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BDB() {
                return GetUint16(0x8BDB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BDB(int value) {
                SetUint16(0x8BDB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BDD/0x2808D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BDD() {
                return GetUint16(0x8BDD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BDD(int value) {
                SetUint16(0x8BDD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BDF/0x2808F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BDF() {
                return GetUint16(0x8BDF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BDF(int value) {
                SetUint16(0x8BDF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BE1/0x28091.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BE1() {
                return GetUint16(0x8BE1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BE1(int value) {
                SetUint16(0x8BE1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BE3/0x28093.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BE3() {
                return GetUint16(0x8BE3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BE3(int value) {
                SetUint16(0x8BE3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BE5/0x28095.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BE5() {
                return GetUint16(0x8BE5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BE5(int value) {
                SetUint16(0x8BE5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BE7/0x28097.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BE7() {
                return GetUint16(0x8BE7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BE7(int value) {
                SetUint16(0x8BE7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BE9/0x28099.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BE9() {
                return GetUint16(0x8BE9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BE9(int value) {
                SetUint16(0x8BE9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BEB/0x2809B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BEB() {
                return GetUint16(0x8BEB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BEB(int value) {
                SetUint16(0x8BEB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BED/0x2809D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BED() {
                return GetUint16(0x8BED);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BED(int value) {
                SetUint16(0x8BED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BEF/0x2809F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BEF() {
                return GetUint16(0x8BEF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BEF(int value) {
                SetUint16(0x8BEF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BF1/0x280A1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BF1() {
                return GetUint16(0x8BF1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BF1(int value) {
                SetUint16(0x8BF1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BF3/0x280A3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BF3() {
                return GetUint16(0x8BF3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BF3(int value) {
                SetUint16(0x8BF3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BF5/0x280A5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BF5() {
                return GetUint16(0x8BF5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BF5(int value) {
                SetUint16(0x8BF5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BF7/0x280A7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BF7() {
                return GetUint16(0x8BF7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BF7(int value) {
                SetUint16(0x8BF7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BF9/0x280A9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BF9() {
                return GetUint16(0x8BF9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BF9(int value) {
                SetUint16(0x8BF9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BFB/0x280AB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BFB() {
                return GetUint16(0x8BFB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BFB(int value) {
                SetUint16(0x8BFB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BFD/0x280AD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BFD() {
                return GetUint16(0x8BFD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BFD(int value) {
                SetUint16(0x8BFD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8BFF/0x280AF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8BFF() {
                return GetUint16(0x8BFF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8BFF(int value) {
                SetUint16(0x8BFF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C01/0x280B1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C01() {
                return GetUint16(0x8C01);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C01(int value) {
                SetUint16(0x8C01, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C03/0x280B3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C03() {
                return GetUint16(0x8C03);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C03(int value) {
                SetUint16(0x8C03, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C05/0x280B5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C05() {
                return GetUint16(0x8C05);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C05(int value) {
                SetUint16(0x8C05, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C07/0x280B7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C07() {
                return GetUint16(0x8C07);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C07(int value) {
                SetUint16(0x8C07, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C09/0x280B9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C09() {
                return GetUint16(0x8C09);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C09(int value) {
                SetUint16(0x8C09, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C0B/0x280BB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C0B() {
                return GetUint16(0x8C0B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C0B(int value) {
                SetUint16(0x8C0B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C0D/0x280BD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C0D() {
                return GetUint16(0x8C0D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C0D(int value) {
                SetUint16(0x8C0D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C0F/0x280BF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C0F() {
                return GetUint16(0x8C0F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C0F(int value) {
                SetUint16(0x8C0F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C11/0x280C1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C11() {
                return GetUint16(0x8C11);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C11(int value) {
                SetUint16(0x8C11, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C13/0x280C3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C13() {
                return GetUint16(0x8C13);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C13(int value) {
                SetUint16(0x8C13, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C15/0x280C5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C15() {
                return GetUint16(0x8C15);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C15(int value) {
                SetUint16(0x8C15, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C17/0x280C7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C17() {
                return GetUint16(0x8C17);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C17(int value) {
                SetUint16(0x8C17, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C19/0x280C9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C19() {
                return GetUint16(0x8C19);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C19(int value) {
                SetUint16(0x8C19, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C1B/0x280CB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C1B() {
                return GetUint16(0x8C1B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C1B(int value) {
                SetUint16(0x8C1B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C1D/0x280CD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C1D() {
                return GetUint16(0x8C1D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C1D(int value) {
                SetUint16(0x8C1D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C1F/0x280CF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C1F() {
                return GetUint16(0x8C1F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C1F(int value) {
                SetUint16(0x8C1F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C21/0x280D1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C21() {
                return GetUint16(0x8C21);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C21(int value) {
                SetUint16(0x8C21, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C23/0x280D3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C23() {
                return GetUint16(0x8C23);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C23(int value) {
                SetUint16(0x8C23, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C25/0x280D5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C25() {
                return GetUint16(0x8C25);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C25(int value) {
                SetUint16(0x8C25, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C27/0x280D7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C27() {
                return GetUint16(0x8C27);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C27(int value) {
                SetUint16(0x8C27, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C29/0x280D9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C29() {
                return GetUint16(0x8C29);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C29(int value) {
                SetUint16(0x8C29, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C2B/0x280DB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C2B() {
                return GetUint16(0x8C2B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C2B(int value) {
                SetUint16(0x8C2B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C2D/0x280DD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C2D() {
                return GetUint16(0x8C2D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C2D(int value) {
                SetUint16(0x8C2D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C2F/0x280DF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C2F() {
                return GetUint16(0x8C2F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C2F(int value) {
                SetUint16(0x8C2F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C31/0x280E1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C31() {
                return GetUint16(0x8C31);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C31(int value) {
                SetUint16(0x8C31, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C33/0x280E3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C33() {
                return GetUint16(0x8C33);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C33(int value) {
                SetUint16(0x8C33, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C35/0x280E5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C35() {
                return GetUint16(0x8C35);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C35(int value) {
                SetUint16(0x8C35, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C37/0x280E7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C37() {
                return GetUint16(0x8C37);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C37(int value) {
                SetUint16(0x8C37, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C39/0x280E9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C39() {
                return GetUint16(0x8C39);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C39(int value) {
                SetUint16(0x8C39, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C3B/0x280EB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C3B() {
                return GetUint16(0x8C3B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C3B(int value) {
                SetUint16(0x8C3B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C3D/0x280ED.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C3D() {
                return GetUint16(0x8C3D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C3D(int value) {
                SetUint16(0x8C3D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C3F/0x280EF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C3F() {
                return GetUint16(0x8C3F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C3F(int value) {
                SetUint16(0x8C3F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C41/0x280F1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C41() {
                return GetUint16(0x8C41);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C41(int value) {
                SetUint16(0x8C41, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C43/0x280F3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C43() {
                return GetUint16(0x8C43);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C43(int value) {
                SetUint16(0x8C43, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C45/0x280F5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C45() {
                return GetUint16(0x8C45);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C45(int value) {
                SetUint16(0x8C45, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C47/0x280F7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C47() {
                return GetUint16(0x8C47);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C47(int value) {
                SetUint16(0x8C47, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C49/0x280F9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C49() {
                return GetUint16(0x8C49);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C49(int value) {
                SetUint16(0x8C49, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C4B/0x280FB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C4B() {
                return GetUint16(0x8C4B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C4B(int value) {
                SetUint16(0x8C4B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C4D/0x280FD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C4D() {
                return GetUint16(0x8C4D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C4D(int value) {
                SetUint16(0x8C4D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C4F/0x280FF.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C4F() {
                return GetUint16(0x8C4F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C4F(int value) {
                SetUint16(0x8C4F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C51/0x28101.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C51() {
                return GetUint16(0x8C51);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C51(int value) {
                SetUint16(0x8C51, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C53/0x28103.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C53() {
                return GetUint16(0x8C53);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C53(int value) {
                SetUint16(0x8C53, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C55/0x28105.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C55() {
                return GetUint16(0x8C55);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C55(int value) {
                SetUint16(0x8C55, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C57/0x28107.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C57() {
                return GetUint16(0x8C57);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C57(int value) {
                SetUint16(0x8C57, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C59/0x28109.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C59() {
                return GetUint16(0x8C59);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C59(int value) {
                SetUint16(0x8C59, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C5B/0x2810B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C5B() {
                return GetUint16(0x8C5B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C5B(int value) {
                SetUint16(0x8C5B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C5D/0x2810D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C5D() {
                return GetUint16(0x8C5D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C5D(int value) {
                SetUint16(0x8C5D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C5F/0x2810F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C5F() {
                return GetUint16(0x8C5F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C5F(int value) {
                SetUint16(0x8C5F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C61/0x28111.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C61() {
                return GetUint16(0x8C61);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C61(int value) {
                SetUint16(0x8C61, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C63/0x28113.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C63() {
                return GetUint16(0x8C63);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C63(int value) {
                SetUint16(0x8C63, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C65/0x28115.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C65() {
                return GetUint16(0x8C65);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C65(int value) {
                SetUint16(0x8C65, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C67/0x28117.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C67() {
                return GetUint16(0x8C67);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C67(int value) {
                SetUint16(0x8C67, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C69/0x28119.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C69() {
                return GetUint16(0x8C69);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C69(int value) {
                SetUint16(0x8C69, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C6B/0x2811B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C6B() {
                return GetUint16(0x8C6B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C6B(int value) {
                SetUint16(0x8C6B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C6D/0x2811D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C6D() {
                return GetUint16(0x8C6D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C6D(int value) {
                SetUint16(0x8C6D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C6F/0x2811F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C6F() {
                return GetUint16(0x8C6F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C6F(int value) {
                SetUint16(0x8C6F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C71/0x28121.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C71() {
                return GetUint16(0x8C71);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C71(int value) {
                SetUint16(0x8C71, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C73/0x28123.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C73() {
                return GetUint16(0x8C73);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C73(int value) {
                SetUint16(0x8C73, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C75/0x28125.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C75() {
                return GetUint16(0x8C75);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C75(int value) {
                SetUint16(0x8C75, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C77/0x28127.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C77() {
                return GetUint16(0x8C77);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C77(int value) {
                SetUint16(0x8C77, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C79/0x28129.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C79() {
                return GetUint16(0x8C79);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C79(int value) {
                SetUint16(0x8C79, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C7B/0x2812B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C7B() {
                return GetUint16(0x8C7B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C7B(int value) {
                SetUint16(0x8C7B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C7D/0x2812D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C7D() {
                return GetUint16(0x8C7D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C7D(int value) {
                SetUint16(0x8C7D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C7F/0x2812F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C7F() {
                return GetUint16(0x8C7F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C7F(int value) {
                SetUint16(0x8C7F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C81/0x28131.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C81() {
                return GetUint16(0x8C81);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C81(int value) {
                SetUint16(0x8C81, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C83/0x28133.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C83() {
                return GetUint16(0x8C83);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C83(int value) {
                SetUint16(0x8C83, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C85/0x28135.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C85() {
                return GetUint16(0x8C85);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C85(int value) {
                SetUint16(0x8C85, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C87/0x28137.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C87() {
                return GetUint16(0x8C87);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C87(int value) {
                SetUint16(0x8C87, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C89/0x28139.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C89() {
                return GetUint16(0x8C89);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C89(int value) {
                SetUint16(0x8C89, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C8B/0x2813B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C8B() {
                return GetUint16(0x8C8B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C8B(int value) {
                SetUint16(0x8C8B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C8D/0x2813D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C8D() {
                return GetUint16(0x8C8D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C8D(int value) {
                SetUint16(0x8C8D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C8F/0x2813F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C8F() {
                return GetUint16(0x8C8F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C8F(int value) {
                SetUint16(0x8C8F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C91/0x28141.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C91() {
                return GetUint16(0x8C91);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C91(int value) {
                SetUint16(0x8C91, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C93/0x28143.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C93() {
                return GetUint16(0x8C93);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C93(int value) {
                SetUint16(0x8C93, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C95/0x28145.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C95() {
                return GetUint16(0x8C95);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C95(int value) {
                SetUint16(0x8C95, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C97/0x28147.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C97() {
                return GetUint16(0x8C97);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C97(int value) {
                SetUint16(0x8C97, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C99/0x28149.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C99() {
                return GetUint16(0x8C99);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C99(int value) {
                SetUint16(0x8C99, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C9B/0x2814B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C9B() {
                return GetUint16(0x8C9B);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C9B(int value) {
                SetUint16(0x8C9B, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C9D/0x2814D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C9D() {
                return GetUint16(0x8C9D);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C9D(int value) {
                SetUint16(0x8C9D, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8C9F/0x2814F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8C9F() {
                return GetUint16(0x8C9F);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8C9F(int value) {
                SetUint16(0x8C9F, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CA1/0x28151.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CA1() {
                return GetUint16(0x8CA1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CA1(int value) {
                SetUint16(0x8CA1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CA3/0x28153.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CA3() {
                return GetUint16(0x8CA3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CA3(int value) {
                SetUint16(0x8CA3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CA5/0x28155.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CA5() {
                return GetUint16(0x8CA5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CA5(int value) {
                SetUint16(0x8CA5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CA7/0x28157.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CA7() {
                return GetUint16(0x8CA7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CA7(int value) {
                SetUint16(0x8CA7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CA9/0x28159.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CA9() {
                return GetUint16(0x8CA9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CA9(int value) {
                SetUint16(0x8CA9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CAB/0x2815B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CAB() {
                return GetUint16(0x8CAB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CAB(int value) {
                SetUint16(0x8CAB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CAD/0x2815D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CAD() {
                return GetUint16(0x8CAD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CAD(int value) {
                SetUint16(0x8CAD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CAF/0x2815F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CAF() {
                return GetUint16(0x8CAF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CAF(int value) {
                SetUint16(0x8CAF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CB1/0x28161.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CB1() {
                return GetUint16(0x8CB1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CB1(int value) {
                SetUint16(0x8CB1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CB3/0x28163.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CB3() {
                return GetUint16(0x8CB3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CB3(int value) {
                SetUint16(0x8CB3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CB5/0x28165.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CB5() {
                return GetUint16(0x8CB5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CB5(int value) {
                SetUint16(0x8CB5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CB7/0x28167.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CB7() {
                return GetUint16(0x8CB7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CB7(int value) {
                SetUint16(0x8CB7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CB9/0x28169.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CB9() {
                return GetUint16(0x8CB9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CB9(int value) {
                SetUint16(0x8CB9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CBB/0x2816B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CBB() {
                return GetUint16(0x8CBB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CBB(int value) {
                SetUint16(0x8CBB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CBD/0x2816D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CBD() {
                return GetUint16(0x8CBD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CBD(int value) {
                SetUint16(0x8CBD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CBF/0x2816F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CBF() {
                return GetUint16(0x8CBF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CBF(int value) {
                SetUint16(0x8CBF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CC1/0x28171.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CC1() {
                return GetUint16(0x8CC1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CC1(int value) {
                SetUint16(0x8CC1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CC3/0x28173.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CC3() {
                return GetUint16(0x8CC3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CC3(int value) {
                SetUint16(0x8CC3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CC5/0x28175.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CC5() {
                return GetUint16(0x8CC5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CC5(int value) {
                SetUint16(0x8CC5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CC7/0x28177.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CC7() {
                return GetUint16(0x8CC7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CC7(int value) {
                SetUint16(0x8CC7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CC9/0x28179.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CC9() {
                return GetUint16(0x8CC9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CC9(int value) {
                SetUint16(0x8CC9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CCB/0x2817B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CCB() {
                return GetUint16(0x8CCB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CCB(int value) {
                SetUint16(0x8CCB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CCD/0x2817D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CCD() {
                return GetUint16(0x8CCD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CCD(int value) {
                SetUint16(0x8CCD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CCF/0x2817F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CCF() {
                return GetUint16(0x8CCF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CCF(int value) {
                SetUint16(0x8CCF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CD1/0x28181.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CD1() {
                return GetUint16(0x8CD1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CD1(int value) {
                SetUint16(0x8CD1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CD3/0x28183.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CD3() {
                return GetUint16(0x8CD3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CD3(int value) {
                SetUint16(0x8CD3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CD5/0x28185.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CD5() {
                return GetUint16(0x8CD5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CD5(int value) {
                SetUint16(0x8CD5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CD7/0x28187.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CD7() {
                return GetUint16(0x8CD7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CD7(int value) {
                SetUint16(0x8CD7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CD9/0x28189.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CD9() {
                return GetUint16(0x8CD9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CD9(int value) {
                SetUint16(0x8CD9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CDB/0x2818B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CDB() {
                return GetUint16(0x8CDB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CDB(int value) {
                SetUint16(0x8CDB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CDD/0x2818D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CDD() {
                return GetUint16(0x8CDD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CDD(int value) {
                SetUint16(0x8CDD, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CDF/0x2818F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CDF() {
                return GetUint16(0x8CDF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CDF(int value) {
                SetUint16(0x8CDF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CE1/0x28191.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CE1() {
                return GetUint16(0x8CE1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CE1(int value) {
                SetUint16(0x8CE1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CE3/0x28193.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CE3() {
                return GetUint16(0x8CE3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CE3(int value) {
                SetUint16(0x8CE3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CE5/0x28195.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CE5() {
                return GetUint16(0x8CE5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CE5(int value) {
                SetUint16(0x8CE5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CE7/0x28197.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CE7() {
                return GetUint16(0x8CE7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CE7(int value) {
                SetUint16(0x8CE7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CE9/0x28199.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CE9() {
                return GetUint16(0x8CE9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CE9(int value) {
                SetUint16(0x8CE9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CEB/0x2819B.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CEB() {
                return GetUint16(0x8CEB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CEB(int value) {
                SetUint16(0x8CEB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CED/0x2819D.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CED() {
                return GetUint16(0x8CED);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CED(int value) {
                SetUint16(0x8CED, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CEF/0x2819F.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CEF() {
                return GetUint16(0x8CEF);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CEF(int value) {
                SetUint16(0x8CEF, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CF1/0x281A1.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CF1() {
                return GetUint16(0x8CF1);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CF1(int value) {
                SetUint16(0x8CF1, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CF3/0x281A3.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CF3() {
                return GetUint16(0x8CF3);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CF3(int value) {
                SetUint16(0x8CF3, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CF5/0x281A5.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CF5() {
                return GetUint16(0x8CF5);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CF5(int value) {
                SetUint16(0x8CF5, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CF7/0x281A7.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CF7() {
                return GetUint16(0x8CF7);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CF7(int value) {
                SetUint16(0x8CF7, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CF9/0x281A9.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CF9() {
                return GetUint16(0x8CF9);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CF9(int value) {
                SetUint16(0x8CF9, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CFB/0x281AB.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CFB() {
                return GetUint16(0x8CFB);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CFB(int value) {
                SetUint16(0x8CFB, value);
            }
            
// Getters and Setters for address 0x1F4B:0x8CFD/0x281AD.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_8CFD() {
                return GetUint16(0x8CFD);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_8CFD(int value) {
                SetUint16(0x8CFD, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5C0/0x29A70.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5C0() {
                return GetUint16(0xA5C0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_A5C0(int value) {
                SetUint16(0xA5C0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5C6/0x29A76.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5C6() {
                return GetUint16(0xA5C6);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5C6(int value) {
                SetUint16(0xA5C6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5C8/0x29A78.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5C8() {
                return GetUint16(0xA5C8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5C8(int value) {
                SetUint16(0xA5C8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5CA/0x29A7A.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5CA() {
                return GetUint16(0xA5CA);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5CA(int value) {
                SetUint16(0xA5CA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5CC/0x29A7C.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5CC() {
                return GetUint16(0xA5CC);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5CC(int value) {
                SetUint16(0xA5CC, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5CE/0x29A7E.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5CE() {
                return GetUint16(0xA5CE);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5CE(int value) {
                SetUint16(0xA5CE, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5D0/0x29A80.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5D0() {
                return GetUint16(0xA5D0);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5D0(int value) {
                SetUint16(0xA5D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5D2/0x29A82.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5D2() {
                return GetUint16(0xA5D2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5D2(int value) {
                SetUint16(0xA5D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5D4/0x29A84.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5D4() {
                return GetUint16(0xA5D4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5D4(int value) {
                SetUint16(0xA5D4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5D6/0x29A86.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5D6() {
                return GetUint16(0xA5D6);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5D6(int value) {
                SetUint16(0xA5D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA5D8/0x29A88.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A5D8() {
                return GetUint16(0xA5D8);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A5D8(int value) {
                SetUint16(0xA5D8, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA9D0/0x29E80.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A9D0() {
                return GetUint16(0xA9D0);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_A9D0(int value) {
                SetUint16(0xA9D0, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA9D2/0x29E82.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A9D2() {
                return GetUint16(0xA9D2);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A9D2(int value) {
                SetUint16(0xA9D2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA9D4/0x29E84.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A9D4() {
                return GetUint16(0xA9D4);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A9D4(int value) {
                SetUint16(0xA9D4, value);
            }
            
// Getters and Setters for address 0x1F4B:0xA9D6/0x29E86.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_A9D6() {
                return GetUint16(0xA9D6);
            }
            
            // Operation not registered by running code
            public void SetWord16_1F4B_A9D6(int value) {
                SetUint16(0xA9D6, value);
            }
            
// Getters and Setters for address 0x1F4B:0xCE7A/0x2C32A.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_CE7A() {
                return GetUint16(0xCE7A);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_CE7A(int value) {
                SetUint16(0xCE7A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD820/0x2CCD0.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D820() {
                return GetUint16(0xD820);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D820(int value) {
                SetUint16(0xD820, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD834/0x2CCE4.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D834() {
                return GetUint16(0xD834);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D834(int value) {
                SetUint16(0xD834, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD836/0x2CCE6.
            // Was accessed via the following registers: SS
            public int GetWord16_1F4B_D836() {
                return GetUint16(0xD836);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D836(int value) {
                SetUint16(0xD836, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD838/0x2CCE8.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D838() {
                return GetUint16(0xD838);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D838(int value) {
                SetUint16(0xD838, value);
            }
            
// Getters and Setters for address 0x1F4B:0xD83A/0x2CCEA.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_D83A() {
                return GetUint16(0xD83A);
            }
            
            // Was accessed via the following registers: DS, SS
            public void SetWord16_1F4B_D83A(int value) {
                SetUint16(0xD83A, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBB2/0x2D062.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DBB2() {
                return GetUint16(0xDBB2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBB2(int value) {
                SetUint16(0xDBB2, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBBA/0x2D06A.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DBBA() {
                return GetUint16(0xDBBA);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBBA(int value) {
                SetUint16(0xDBBA, value);
            }
            
// Getters and Setters for address 0x1F4B:0xDBBC/0x2D06C.
            // Operation not registered by running code
            public int GetWord16_1F4B_DBBC() {
                return GetUint16(0xDBBC);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DBBC(int value) {
                SetUint16(0xDBBC, value);
            }
            
            // Was accessed via the following registers: SS
            public int GetDword32_1F4B_DBBC() {
                return GetUint32(0xDBBC);
            }
            
            // Operation not registered by running code
            public void SetDword32_1F4B_DBBC(int value) {
                SetUint32(0xDBBC, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_1F4B_DBBC() {
                return new SegmentedAddress(GetUint16(0xDBBC + 2), GetUint16(0xDBBC));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_1F4B_DBBC(SegmentedAddress value) {
                SetUint16(0xDBBC + 2, value.GetSegment());
                SetUint16(0xDBBC, value.GetOffset());
            }
            
// Getters and Setters for address 0x1F4B:0xDCF2/0x2D1A2.
            // Was accessed via the following registers: DS, SS
            public int GetWord16_1F4B_DCF2() {
                return GetUint16(0xDCF2);
            }
            
            // Was accessed via the following registers: DS
            public void SetWord16_1F4B_DCF2(int value) {
                SetUint16(0xDCF2, value);
            }
            

;
                }
            
            public class GlobalsOnCsSegment0x1000 : MemoryBasedDataStructureWithBaseAddress {
                public GlobalsOnCsSegment0x1000(Machine machine) {
                  base(machine.GetMemory(), 0x1000 * 0x10);
                }

                // Getters and Setters for address 0x1000:0xAA/0x100AA.
            // Operation not registered by running code
            public int GetWord16_1000_00AA() {
                return GetUint16(0xAA);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_00AA(int value) {
                SetUint16(0xAA, value);
            }
            
// Getters and Setters for address 0x1000:0xAC/0x100AC.
            // Operation not registered by running code
            public int GetWord16_1000_00AC() {
                return GetUint16(0xAC);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_00AC(int value) {
                SetUint16(0xAC, value);
            }
            
// Getters and Setters for address 0x1000:0xAE/0x100AE.
            // Operation not registered by running code
            public int GetWord16_1000_00AE() {
                return GetUint16(0xAE);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_00AE(int value) {
                SetUint16(0xAE, value);
            }
            
// Getters and Setters for address 0x1000:0x65B4/0x165B4.
            // Was accessed via the following registers: CS
            public int GetWord16_1000_65B4() {
                return GetUint16(0x65B4);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_65B4(int value) {
                SetUint16(0x65B4, value);
            }
            
// Getters and Setters for address 0x1000:0xC13C/0x1C13C.
            // Operation not registered by running code
            public int GetByte8_1000_C13C() {
                return GetUint8(0xC13C);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_1000_C13C(int value) {
                SetUint8(0xC13C, value);
            }
            
// Getters and Setters for address 0x1000:0xC21A/0x1C21A.
            // Was accessed via the following registers: CS
            public int GetByte8_1000_C21A_paletteOffset() {
                return GetUint8(0xC21A);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_1000_C21A_paletteOffset(int value) {
                SetUint8(0xC21A, value);
            }
            
// Getters and Setters for address 0x1000:0xCC94/0x1CC94.
            // Operation not registered by running code
            public int GetWord16_1000_CC94_blitFunction() {
                return GetUint16(0xCC94);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_CC94_blitFunction(int value) {
                SetUint16(0xCC94, value);
            }
            
// Getters and Setters for address 0x1000:0xE8D2/0x1E8D2.
            // Was accessed via the following registers: CS
            public int GetWord16_1000_E8D2_pitTimerValue() {
                return GetUint16(0xE8D2);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_1000_E8D2_pitTimerValue(int value) {
                SetUint16(0xE8D2, value);
            }
            
// Getters and Setters for address 0x1000:0xE8D4/0x1E8D4.
            // Was accessed via the following registers: CS
            public int GetByte8_1000_E8D4_pitTimerCounter() {
                return GetUint8(0xE8D4);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_1000_E8D4_pitTimerCounter(int value) {
                SetUint8(0xE8D4, value);
            }
            
// Getters and Setters for address 0x1000:0xED3A/0x1ED3A.
            // Was accessed via the following registers: CS
            public int GetWord16_1000_ED3A_emsEmmHandle() {
                return GetUint16(0xED3A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1000_ED3A_emsEmmHandle(int value) {
                SetUint16(0xED3A, value);
            }
            
// Getters and Setters for address 0x1000:0xED3E/0x1ED3E.
            // Was accessed via the following registers: CS
            public int GetWord16_1000_ED3E() {
                return GetUint16(0xED3E);
            }
            
            // Operation not registered by running code
            public void SetWord16_1000_ED3E(int value) {
                SetUint16(0xED3E, value);
            }
            
// Getters and Setters for address 0x1000:0xEE8A/0x1EE8A.
            // Was accessed via the following registers: CS
            public int GetWord16_1000_EE8A_xmsMemoryBlock() {
                return GetUint16(0xEE8A);
            }
            
            // Operation not registered by running code
            public void SetWord16_1000_EE8A_xmsMemoryBlock(int value) {
                SetUint16(0xEE8A, value);
            }
            
// Getters and Setters for address 0x1000:0xEFD9/0x1EFD9.
            // Operation not registered by running code
            public int GetByte8_1000_EFD9() {
                return GetUint8(0xEFD9);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_1000_EFD9(int value) {
                SetUint8(0xEFD9, value);
            }
            


            }
            
            public class GlobalsOnCsSegment0x334B : MemoryBasedDataStructureWithBaseAddress {
                public GlobalsOnCsSegment0x334B(Machine machine) {
                  base(machine.GetMemory(), 0x334B * 0x10);
                }

                // Getters and Setters for address 0x334B:0x18A/0x3363A.
            // Operation not registered by running code
            public int GetWord16_334B_018A_MouseCursorAddressInVram() {
                return GetUint16(0x18A);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_018A_MouseCursorAddressInVram(int value) {
                SetUint16(0x18A, value);
            }
            
// Getters and Setters for address 0x334B:0x18C/0x3363C.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_018C_ColumnsOfMouseCursorCount() {
                return GetUint8(0x18C);
            }
            
            // Operation not registered by running code
            public void SetByte8_334B_018C_ColumnsOfMouseCursorCount(int value) {
                SetUint8(0x18C, value);
            }
            
            // Was accessed via the following registers: CS
            public int GetWord16_334B_018C_ColumnsOfMouseCursorCount() {
                return GetUint16(0x18C);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_018C_ColumnsOfMouseCursorCount(int value) {
                SetUint16(0x18C, value);
            }
            
// Getters and Setters for address 0x334B:0x18E/0x3363E.
            // Operation not registered by running code
            public int GetWord16_334B_018E_LinesOfMouseCursorCount() {
                return GetUint16(0x18E);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_018E_LinesOfMouseCursorCount(int value) {
                SetUint16(0x18E, value);
            }
            
// Getters and Setters for address 0x334B:0x190/0x33640.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0190() {
                return GetUint16(0x190);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0190(int value) {
                SetUint16(0x190, value);
            }
            
// Getters and Setters for address 0x334B:0x192/0x33642.
            // Operation not registered by running code
            public int GetWord16_334B_0192() {
                return GetUint16(0x192);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0192(int value) {
                SetUint16(0x192, value);
            }
            
// Getters and Setters for address 0x334B:0x194/0x33644.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0194() {
                return GetUint16(0x194);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0194(int value) {
                SetUint16(0x194, value);
            }
            
// Getters and Setters for address 0x334B:0x196/0x33646.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0196() {
                return GetUint16(0x196);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0196(int value) {
                SetUint16(0x196, value);
            }
            
// Getters and Setters for address 0x334B:0x198/0x33648.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0198() {
                return GetUint16(0x198);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0198(int value) {
                SetUint16(0x198, value);
            }
            
// Getters and Setters for address 0x334B:0x19A/0x3364A.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_019A() {
                return GetUint16(0x19A);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_019A(int value) {
                SetUint16(0x19A, value);
            }
            
// Getters and Setters for address 0x334B:0x19C/0x3364C.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_019C() {
                return GetUint8(0x19C);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_019C(int value) {
                SetUint8(0x19C, value);
            }
            
// Getters and Setters for address 0x334B:0x19D/0x3364D.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_019D() {
                return GetUint16(0x19D);
            }
            
            // Operation not registered by running code
            public void SetWord16_334B_019D(int value) {
                SetUint16(0x19D, value);
            }
            
// Getters and Setters for address 0x334B:0x19E/0x3364E.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_019E() {
                return GetUint8(0x19E);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_019E(int value) {
                SetUint8(0x19E, value);
            }
            
// Getters and Setters for address 0x334B:0x19F/0x3364F.
            // Operation not registered by running code
            public int GetWord16_334B_019F_VgaStatusRegisterPort() {
                return GetUint16(0x19F);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_019F_VgaStatusRegisterPort(int value) {
                SetUint16(0x19F, value);
            }
            
// Getters and Setters for address 0x334B:0x1A1/0x33651.
            // Operation not registered by running code
            public int GetByte8_334B_01A1_NeedWaitForRetrace() {
                return GetUint8(0x1A1);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_01A1_NeedWaitForRetrace(int value) {
                SetUint8(0x1A1, value);
            }
            
// Getters and Setters for address 0x334B:0x1A2/0x33652.
            // Operation not registered by running code
            public int GetByte8_334B_01A2_VgaStatusRegisterPortExpectedRetraceValue() {
                return GetUint8(0x1A2);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_01A2_VgaStatusRegisterPortExpectedRetraceValue(int value) {
                SetUint8(0x1A2, value);
            }
            
// Getters and Setters for address 0x334B:0x1A3/0x33653.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01A3_VgaOffset() {
                return GetUint16(0x1A3);
            }
            
            // Operation not registered by running code
            public void SetWord16_334B_01A3_VgaOffset(int value) {
                SetUint16(0x1A3, value);
            }
            
// Getters and Setters for address 0x334B:0x1A5/0x33655.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01A5() {
                return GetUint16(0x1A5);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01A5(int value) {
                SetUint16(0x1A5, value);
            }
            
// Getters and Setters for address 0x334B:0x1A7/0x33657.
            // Operation not registered by running code
            public int GetWord16_334B_01A7() {
                return GetUint16(0x1A7);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01A7(int value) {
                SetUint16(0x1A7, value);
            }
            
            // Was accessed via the following registers: CS
            public int GetDword32_334B_01A7() {
                return GetUint32(0x1A7);
            }
            
            // Operation not registered by running code
            public void SetDword32_334B_01A7(int value) {
                SetUint32(0x1A7, value);
            }
            
            // Operation not registered by running code
            public SegmentedAddress GetPtrDword32Ptr_334B_01A7() {
                return new SegmentedAddress(GetUint16(0x1A7 + 2), GetUint16(0x1A7));
            }
            
            // Operation not registered by running code
            public void SetPtrDword32Ptr_334B_01A7(SegmentedAddress value) {
                SetUint16(0x1A7 + 2, value.GetSegment());
                SetUint16(0x1A7, value.GetOffset());
            }
            
// Getters and Setters for address 0x334B:0x1A9/0x33659.
            // Operation not registered by running code
            public int GetWord16_334B_01A9() {
                return GetUint16(0x1A9);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01A9(int value) {
                SetUint16(0x1A9, value);
            }
            
// Getters and Setters for address 0x334B:0x1AB/0x3365B.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01AB() {
                return GetUint16(0x1AB);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01AB(int value) {
                SetUint16(0x1AB, value);
            }
            
// Getters and Setters for address 0x334B:0x1AD/0x3365D.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01AD() {
                return GetUint16(0x1AD);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01AD(int value) {
                SetUint16(0x1AD, value);
            }
            
// Getters and Setters for address 0x334B:0x1AF/0x3365F.
            // Operation not registered by running code
            public int GetWord16_334B_01AF() {
                return GetUint16(0x1AF);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01AF(int value) {
                SetUint16(0x1AF, value);
            }
            
// Getters and Setters for address 0x334B:0x1B1/0x33661.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_01B1() {
                return GetUint8(0x1B1);
            }
            
            // Operation not registered by running code
            public void SetByte8_334B_01B1(int value) {
                SetUint8(0x1B1, value);
            }
            
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01B1() {
                return GetUint16(0x1B1);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01B1(int value) {
                SetUint16(0x1B1, value);
            }
            
// Getters and Setters for address 0x334B:0x1B2/0x33662.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_01B2() {
                return GetUint8(0x1B2);
            }
            
            // Operation not registered by running code
            public void SetByte8_334B_01B2(int value) {
                SetUint8(0x1B2, value);
            }
            
// Getters and Setters for address 0x334B:0x1B3/0x33663.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01B3() {
                return GetUint16(0x1B3);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01B3(int value) {
                SetUint16(0x1B3, value);
            }
            
// Getters and Setters for address 0x334B:0x1B5/0x33665.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01B5() {
                return GetUint16(0x1B5);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01B5(int value) {
                SetUint16(0x1B5, value);
            }
            
// Getters and Setters for address 0x334B:0x1B7/0x33667.
            // Operation not registered by running code
            public int GetWord16_334B_01B7() {
                return GetUint16(0x1B7);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01B7(int value) {
                SetUint16(0x1B7, value);
            }
            
// Getters and Setters for address 0x334B:0x1B9/0x33669.
            // Operation not registered by running code
            public int GetWord16_334B_01B9() {
                return GetUint16(0x1B9);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01B9(int value) {
                SetUint16(0x1B9, value);
            }
            
// Getters and Setters for address 0x334B:0x1BB/0x3366B.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_01BB() {
                return GetUint16(0x1BB);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_01BB(int value) {
                SetUint16(0x1BB, value);
            }
            
// Getters and Setters for address 0x334B:0x1BD/0x3366D.
            // Operation not registered by running code
            public int GetByte8_334B_01BD_PaletteLoadMode() {
                return GetUint8(0x1BD);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_01BD_PaletteLoadMode(int value) {
                SetUint8(0x1BD, value);
            }
            
// Getters and Setters for address 0x334B:0x1BE/0x3366E.
            // Was accessed via the following registers: CS
            public int GetByte8_334B_01BE() {
                return GetUint8(0x1BE);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_01BE(int value) {
                SetUint8(0x1BE, value);
            }
            
// Getters and Setters for address 0x334B:0xC3C/0x340EC.
            // Operation not registered by running code
            public int GetWord16_334B_0C3C() {
                return GetUint16(0xC3C);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0C3C(int value) {
                SetUint16(0xC3C, value);
            }
            
// Getters and Setters for address 0x334B:0xC43/0x340F3.
            // Operation not registered by running code
            public int GetByte8_334B_0C43() {
                return GetUint8(0xC43);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0C43(int value) {
                SetUint8(0xC43, value);
            }
            
// Getters and Setters for address 0x334B:0xCD6/0x34186.
            // Operation not registered by running code
            public int GetWord16_334B_0CD6() {
                return GetUint16(0xCD6);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0CD6(int value) {
                SetUint16(0xCD6, value);
            }
            
// Getters and Setters for address 0x334B:0xCDD/0x3418D.
            // Operation not registered by running code
            public int GetByte8_334B_0CDD() {
                return GetUint8(0xCDD);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0CDD(int value) {
                SetUint8(0xCDD, value);
            }
            
// Getters and Setters for address 0x334B:0xD81/0x34231.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0D81() {
                return GetUint16(0xD81);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0D81(int value) {
                SetUint16(0xD81, value);
            }
            
// Getters and Setters for address 0x334B:0xD83/0x34233.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_0D83() {
                return GetUint16(0xD83);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0D83(int value) {
                SetUint16(0xD83, value);
            }
            
// Getters and Setters for address 0x334B:0xDDE/0x3428E.
            // Operation not registered by running code
            public int GetWord16_334B_0DDE() {
                return GetUint16(0xDDE);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_0DDE(int value) {
                SetUint16(0xDDE, value);
            }
            
// Getters and Setters for address 0x334B:0xE13/0x342C3.
            // Operation not registered by running code
            public int GetByte8_334B_0E13() {
                return GetUint8(0xE13);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0E13(int value) {
                SetUint8(0xE13, value);
            }
            
// Getters and Setters for address 0x334B:0xE26/0x342D6.
            // Operation not registered by running code
            public int GetByte8_334B_0E26() {
                return GetUint8(0xE26);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0E26(int value) {
                SetUint8(0xE26, value);
            }
            
// Getters and Setters for address 0x334B:0xE32/0x342E2.
            // Operation not registered by running code
            public int GetByte8_334B_0E32() {
                return GetUint8(0xE32);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0E32(int value) {
                SetUint8(0xE32, value);
            }
            
// Getters and Setters for address 0x334B:0xEF0/0x343A0.
            // Operation not registered by running code
            public int GetByte8_334B_0EF0() {
                return GetUint8(0xEF0);
            }
            
            // Was accessed via the following registers: CS
            public void SetByte8_334B_0EF0(int value) {
                SetUint8(0xEF0, value);
            }
            
// Getters and Setters for address 0x334B:0x10DC/0x3458C.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_10DC() {
                return GetUint16(0x10DC);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_10DC(int value) {
                SetUint16(0x10DC, value);
            }
            
// Getters and Setters for address 0x334B:0x10DE/0x3458E.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_10DE() {
                return GetUint16(0x10DE);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_10DE(int value) {
                SetUint16(0x10DE, value);
            }
            
// Getters and Setters for address 0x334B:0x10E0/0x34590.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_10E0() {
                return GetUint16(0x10E0);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_10E0(int value) {
                SetUint16(0x10E0, value);
            }
            
// Getters and Setters for address 0x334B:0x158B/0x34A3B.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_158B() {
                return GetUint16(0x158B);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_158B(int value) {
                SetUint16(0x158B, value);
            }
            
// Getters and Setters for address 0x334B:0x1CA0/0x35150.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CA0() {
                return GetUint16(0x1CA0);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CA0(int value) {
                SetUint16(0x1CA0, value);
            }
            
// Getters and Setters for address 0x334B:0x1CA2/0x35152.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CA2() {
                return GetUint16(0x1CA2);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CA2(int value) {
                SetUint16(0x1CA2, value);
            }
            
// Getters and Setters for address 0x334B:0x1CA4/0x35154.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CA4() {
                return GetUint16(0x1CA4);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CA4(int value) {
                SetUint16(0x1CA4, value);
            }
            
// Getters and Setters for address 0x334B:0x1CA6/0x35156.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CA6_UnknownGlobeRelated() {
                return GetUint16(0x1CA6);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CA6_UnknownGlobeRelated(int value) {
                SetUint16(0x1CA6, value);
            }
            
// Getters and Setters for address 0x334B:0x1CA8/0x35158.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CA8() {
                return GetUint16(0x1CA8);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CA8(int value) {
                SetUint16(0x1CA8, value);
            }
            
// Getters and Setters for address 0x334B:0x1CAA/0x3515A.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CAA() {
                return GetUint16(0x1CAA);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CAA(int value) {
                SetUint16(0x1CAA, value);
            }
            
// Getters and Setters for address 0x334B:0x1CAC/0x3515C.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CAC() {
                return GetUint16(0x1CAC);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CAC(int value) {
                SetUint16(0x1CAC, value);
            }
            
// Getters and Setters for address 0x334B:0x1CAE/0x3515E.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CAE_UnknownGlobeRelated() {
                return GetUint16(0x1CAE);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CAE_UnknownGlobeRelated(int value) {
                SetUint16(0x1CAE, value);
            }
            
// Getters and Setters for address 0x334B:0x1CB0/0x35160.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CB0_UnknownGlobeRelated() {
                return GetUint16(0x1CB0);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CB0_UnknownGlobeRelated(int value) {
                SetUint16(0x1CB0, value);
            }
            
// Getters and Setters for address 0x334B:0x1CB2/0x35162.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CB2_UnknownGlobeRelated() {
                return GetUint16(0x1CB2);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CB2_UnknownGlobeRelated(int value) {
                SetUint16(0x1CB2, value);
            }
            
// Getters and Setters for address 0x334B:0x1CB4/0x35164.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_1CB4() {
                return GetUint16(0x1CB4);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1CB4(int value) {
                SetUint16(0x1CB4, value);
            }
            
// Getters and Setters for address 0x334B:0x1E4A/0x352FA.
            // Operation not registered by running code
            public int GetWord16_334B_1E4A() {
                return GetUint16(0x1E4A);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1E4A(int value) {
                SetUint16(0x1E4A, value);
            }
            
// Getters and Setters for address 0x334B:0x1EA6/0x35356.
            // Operation not registered by running code
            public int GetWord16_334B_1EA6_UnknownGlobeRelated() {
                return GetUint16(0x1EA6);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1EA6_UnknownGlobeRelated(int value) {
                SetUint16(0x1EA6, value);
            }
            
// Getters and Setters for address 0x334B:0x1F29/0x353D9.
            // Operation not registered by running code
            public int GetWord16_334B_1F29_UnknownGlobeRelated() {
                return GetUint16(0x1F29);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_1F29_UnknownGlobeRelated(int value) {
                SetUint16(0x1F29, value);
            }
            
// Getters and Setters for address 0x334B:0x2535/0x359E5.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_2535() {
                return GetUint16(0x2535);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_2535(int value) {
                SetUint16(0x2535, value);
            }
            
// Getters and Setters for address 0x334B:0x2537/0x359E7.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_2537() {
                return GetUint16(0x2537);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_2537(int value) {
                SetUint16(0x2537, value);
            }
            
// Getters and Setters for address 0x334B:0x2539/0x359E9.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_2539() {
                return GetUint16(0x2539);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_2539(int value) {
                SetUint16(0x2539, value);
            }
            
// Getters and Setters for address 0x334B:0x261B/0x35ACB.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_261B() {
                return GetUint16(0x261B);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_261B(int value) {
                SetUint16(0x261B, value);
            }
            
// Getters and Setters for address 0x334B:0x2768/0x35C18.
            // Operation not registered by running code
            public int GetWord16_334B_2768() {
                return GetUint16(0x2768);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_2768(int value) {
                SetUint16(0x2768, value);
            }
            
// Getters and Setters for address 0x334B:0x276A/0x35C1A.
            // Operation not registered by running code
            public int GetWord16_334B_276A() {
                return GetUint16(0x276A);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_276A(int value) {
                SetUint16(0x276A, value);
            }
            
// Getters and Setters for address 0x334B:0x3114/0x365C4.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_3114() {
                return GetUint16(0x3114);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_3114(int value) {
                SetUint16(0x3114, value);
            }
            
// Getters and Setters for address 0x334B:0x3116/0x365C6.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_3116() {
                return GetUint16(0x3116);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_334B_3116(int value) {
                SetUint16(0x3116, value);
            }
            
// Getters and Setters for address 0x334B:0x3A10/0x36EC0.
            // Was accessed via the following registers: CS
            public int GetWord16_334B_3A10() {
                return GetUint16(0x3A10);
            }
            
            // Operation not registered by running code
            public void SetWord16_334B_3A10(int value) {
                SetUint16(0x3A10, value);
            }
            


            }
            
            public class GlobalsOnCsSegment0x563E : MemoryBasedDataStructureWithBaseAddress {
                public GlobalsOnCsSegment0x563E(Machine machine) {
                  base(machine.GetMemory(), 0x563E * 0x10);
                }

                // Getters and Setters for address 0x563E:0x125/0x56505.
            // Was accessed via the following registers: CS
            public int GetWord16_563E_0125() {
                return GetUint16(0x125);
            }
            
            // Operation not registered by running code
            public void SetWord16_563E_0125(int value) {
                SetUint16(0x125, value);
            }
            
// Getters and Setters for address 0x563E:0x127/0x56507.
            // Was accessed via the following registers: CS
            public int GetWord16_563E_0127() {
                return GetUint16(0x127);
            }
            
            // Was accessed via the following registers: CS
            public void SetWord16_563E_0127(int value) {
                SetUint16(0x127, value);
            }
            
// Getters and Setters for address 0x563E:0x139/0x56519.
            // Was accessed via the following registers: CS, DS
            public int GetByte8_563E_0139() {
                return GetUint8(0x139);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_0139(int value) {
                SetUint8(0x139, value);
            }
            
// Getters and Setters for address 0x563E:0x13A/0x5651A.
            // Operation not registered by running code
            public int GetByte8_563E_013A() {
                return GetUint8(0x13A);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_013A(int value) {
                SetUint8(0x13A, value);
            }
            
// Getters and Setters for address 0x563E:0x13B/0x5651B.
            // Operation not registered by running code
            public int GetWord16_563E_013B() {
                return GetUint16(0x13B);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetWord16_563E_013B(int value) {
                SetUint16(0x13B, value);
            }
            
// Getters and Setters for address 0x563E:0x13E/0x5651E.
            // Was accessed via the following registers: DS
            public int GetByte8_563E_013E() {
                return GetUint8(0x13E);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetByte8_563E_013E(int value) {
                SetUint8(0x13E, value);
            }
            
// Getters and Setters for address 0x563E:0x140/0x56520.
            // Was accessed via the following registers: DS
            public int GetWord16_563E_0140() {
                return GetUint16(0x140);
            }
            
            // Was accessed via the following registers: CS, DS
            public void SetWord16_563E_0140(int value) {
                SetUint16(0x140, value);
            }
            


            }
            

            // Accessors for values accessed via register ES
            public class GlobalsOnES : MemoryBasedDataStructureWithESBaseAddress {
                public GlobalsOnES(Machine machine) {
                    base(machine);
                }

                // Getters and Setters for address 0x40:0x63/0x463.
            // Was accessed via the following registers: ES
            public int GetWord16_0040_0063() {
                return GetUint16(0x63);
            }
            
            // Operation not registered by running code
            public void SetWord16_0040_0063(int value) {
                SetUint16(0x63, value);
            }
            
// Getters and Setters for address 0x0:0x46C/0x46C.
            // Was accessed via the following registers: ES
            public int GetWord16_0000_046C() {
                return GetUint16(0x46C);
            }
            
            // Operation not registered by running code
            public void SetWord16_0000_046C(int value) {
                SetUint16(0x46C, value);
            }
            

;
                }
            

            /// Stubs for overrides
            /// </summary>
            public class Stubs : CSharpOverrideHelper {
                public Stubs(Dictionary<SegmentedAddress, FunctionInformation> functionInformations, string prefix, Machine machine) {
                    base(functionInformations, prefix, machine);
                }
            

            // defineFunction(0x1000, 0xB0, "initialize_2_ida", this.initialize_2_ida_1000_00B0_100B0);
            public Action initialize_2_ida_1000_00B0_100B0() {
                // intialize_resources_ida_1000_00D1_100D1();// map2_resource_func_ida_1000_0169_10169();// unknown_1000_B17A_1B17A();// VgaInitRelated_1000_DA53_1DA53();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD1, "intialize_resources_ida", this.intialize_resources_ida_1000_00D1_100D1);
            public Action intialize_resources_ida_1000_00D1_100D1() {
                // ConvertIndexTableToPointerTable_1000_0098_10098();// unknown_1000_CFB9_1CFB9();// open_resource_force_hsq_ida_1000_F0A0_1F0A0();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// bump_allocate_bump_cx_bytes_ida_1000_F0FF_1F0FF();// VgaFunc20NoOp_334B_013C_335EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x169, "map2_resource_func_ida", this.map2_resource_func_ida_1000_0169_10169);
            public Action map2_resource_func_ida_1000_0169_10169() {
                // unknown_1000_6603_16603();// unknown_1000_B5C5_1B5C5();// open_sprite_sheet_ida_1000_C13E_1C13E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x21C, "play_intro2_ida", this.play_intro2_ida_1000_021C_1021C);
            public Action play_intro2_ida_1000_021C_1021C() {
                // ConvertIndexTableToPointerTable_1000_0098_10098();// unknown_1000_0911_10911();// calc_SAL_index_ida_1000_5E4F_15E4F();// pcm_stop_voc_q_ida_1000_AC14_1AC14();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// VgaFunc08FillWithZeroFor64000AtES_334B_0118_335C8();

                return nearRet();
            }

            // defineFunction(0x1000, 0x309, "play_CREDITS_HNM_ida", this.play_CREDITS_HNM_ida_1000_0309_10309);
            public Action play_CREDITS_HNM_ida_1000_0309_10309() {
                // ClearGlobalVgaOffset_1000_0579_10579();

                return nearRet();
            }

            // defineFunction(0x1000, 0x580, "play_intro_ida", this.play_intro_ida_1000_0580_10580);
            public Action play_intro_ida_1000_0580_10580() {
                // ClearGlobalVgaOffset_1000_0579_10579();// play_VIRGIN_HNM_ida_1000_0625_10625();// unknown_1000_0911_10911();// LoadSceneSequenceDataIntoAXAndAdvanceSI_1000_093F_1093F();// SetSceneSequenceOffsetToSi_1000_0945_10945();// unknown_1000_39E6_139E6();// unknown_1000_3A7C_13A7C();// unknown_1000_9985_19985();// CallMidiFunc02_1000_AEB7_1AEB7();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C0F4_1C0F4();// transition_ida_1000_C108_1C108();// hnm_close_resource_ida_1000_CA01_1CA01();// stc_on_user_input_ida_1000_DD63_1DD63();// check_midi_ida_1000_DE0C_1DE0C();// unknown_1000_DE54_1DE54();// VgaFunc08FillWithZeroFor64000AtES_334B_0118_335C8();// VgaFunc33UpdateVgaOffset01A3FromLineNumberAsAx_334B_0163_33613();// VgaFunc41CopyPalette2toPalette1_334B_017B_3362B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x61C, "load_VIRGIN_HNM_ida", this.load_VIRGIN_HNM_ida_1000_061C_1061C);
            public Action load_VIRGIN_HNM_ida_1000_061C_1061C() {
                // decode_sd_block_ida_1000_AA0F_1AA0F();// play_music_MORNING_HSQ_ida_1000_AD57_1AD57();// hnm_reset_and_read_header_ida_1000_C92B_1C92B();// unknown_1000_CB1A_1CB1A();// hnm_decode_video_frame_ida_1000_CC96_1CC96();// unknown_1000_CCF4_1CCF4();// hnm_prepare_header_read_ida_1000_CDA0_1CDA0();// hnm_reset_ida_1000_CE1A_1CE1A();

                return nearRet();
            }

            // defineFunction(0x1000, 0x625, "play_VIRGIN_HNM_ida", this.play_VIRGIN_HNM_ida_1000_0625_10625);
            public Action play_VIRGIN_HNM_ida_1000_0625_10625() {
                // SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();// do_frame_and_check_if_frame_advanced_ida_1000_C9F4_1C9F4();// CheckIfHnmComplete_1000_CC85_1CC85();// stc_on_user_input_ida_1000_DD63_1DD63();

                return nearRet();
            }

            // defineFunction(0x1000, 0x2D74, "open_SAL_resource_ida", this.open_SAL_resource_ida_1000_2D74_12D74);
            public Action open_SAL_resource_ida_1000_2D74_12D74() {
                // ConvertIndexTableToPointerTable_1000_0098_10098();// calc_SAL_index_ida_1000_5E4F_15E4F();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3B59, "draw_SAL_ida", this.draw_SAL_ida_1000_3B59_13B59);
            public Action draw_SAL_ida_1000_3B59_13B59() {
                // SAL_polygon_ida_1000_3BE9_13BE9();// unknown_1000_3D2F_13D2F();// do_weird_shit_with_stack_buffer_ida_1000_3D83_13D83();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();// unknown_334B_0139_335E9();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3BE9, "SAL_polygon_ida", this.SAL_polygon_ida_1000_3BE9_13BE9);
            public Action SAL_polygon_ida_1000_3BE9_13BE9() {
                // unknown_1000_3E13_13E13();// VgaFunc36GenerateTextureOutBP_334B_016C_3361C();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3D83, "do_weird_shit_with_stack_buffer_ida", this.do_weird_shit_with_stack_buffer_ida_1000_3D83_13D83);
            public Action do_weird_shit_with_stack_buffer_ida_1000_3D83_13D83() {
                // unknown_1000_3DF4_13DF4();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5E4F, "calc_SAL_index_ida", this.calc_SAL_index_ida_1000_5E4F_15E4F);
            public Action calc_SAL_index_ida_1000_5E4F_15E4F() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x63F0, "map_func_qq_ida", this.map_func_qq_ida_1000_63F0_163F0);
            public Action map_func_qq_ida_1000_63F0_163F0() {
                // unknown_1000_642E_1642E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA87E, "audio_test_frequency_ida", this.audio_test_frequency_ida_1000_A87E_1A87E);
            public Action audio_test_frequency_ida_1000_A87E_1A87E() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA9A1, "close_res_file_handle_ida", this.close_res_file_handle_ida_1000_A9A1_1A9A1);
            public Action close_res_file_handle_ida_1000_A9A1_1A9A1() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xAA0F, "decode_sd_block_ida", this.decode_sd_block_ida_1000_AA0F_1AA0F);
            public Action decode_sd_block_ida_1000_AA0F_1AA0F() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xAB15, "audio_start_voc_ida", this.audio_start_voc_ida_1000_AB15_1AB15);
            public Action audio_start_voc_ida_1000_AB15_1AB15() {
                // IsUnknownDC2BZero_1000_ABCC_1ABCC();// CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAC14, "pcm_stop_voc_q_ida", this.pcm_stop_voc_q_ida_1000_AC14_1AC14);
            public Action pcm_stop_voc_q_ida_1000_AC14_1AC14() {
                // close_res_file_handle_ida_1000_A9A1_1A9A1();// unknown_1000_DA5F_1DA5F();// ClearAL_5635_0109_56459();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAD57, "play_music_MORNING_HSQ_ida", this.play_music_MORNING_HSQ_ida_1000_AD57_1AD57);
            public Action play_music_MORNING_HSQ_ida_1000_AD57_1AD57() {
                // load_music_ida_1000_AE62_1AE62();// CallMidiFunc02_1000_AEB7_1AEB7();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_563E_0103_564E3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAE62, "load_music_ida", this.load_music_ida_1000_AE62_1AE62);
            public Action load_music_ida_1000_AE62_1AE62() {
                // CallMidiFunc02_1000_AEB7_1AEB7();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB389, "open_sav_cl_ida", this.open_sav_cl_ida_1000_B389_1B389);
            public Action open_sav_cl_ida_1000_B389_1B389() {
                // map_func_ida_1000_B427_1B427();// unknown_1000_B4EA_1B4EA();// strcpy_to_filename_buf_ida_1000_F2FC_1F2FC();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB427, "map_func_ida", this.map_func_ida_1000_B427_1B427);
            public Action map_func_ida_1000_B427_1B427() {
                // alloc_cx_pages_to_di_ida_1000_F11C_1F11C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB58B, "map_func_ida", this.map_func_ida_1000_B58B_1B58B);
            public Action map_func_ida_1000_B58B_1B58B() {
                // unknown_1000_B5A0_1B5A0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB6C3, "map_func_ida", this.map_func_ida_1000_B6C3_1B6C3);
            public Action map_func_ida_1000_B6C3_1B6C3() {
                // unknown_1000_B7D2_1B7D2();// unknown_334B_0142_335F2();// unknown_334B_0157_33607();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB977, "map_func_gfx_ida", this.map_func_gfx_ida_1000_B977_1B977);
            public Action map_func_gfx_ida_1000_B977_1B977() {
                // unknown_334B_0145_335F5();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBFE3, "map_func_ida", this.map_func_ida_1000_BFE3_1BFE3);
            public Action map_func_ida_1000_BFE3_1BFE3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC097, "gfx_call_bp_with_front_buffer_as_screen_ida", this.gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097);
            public Action gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097() {
                // load_VIRGIN_HNM_ida_1000_061C_1061C();// NoOp_1000_0F66_10F66();// unknown_1000_2DB1_12DB1();// unknown_1000_2EB2_12EB2();// unknown_1000_5A56_15A56();// unknown_1000_B827_1B827();// unknown_1000_BE1D_1BE1D();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// unknown_1000_D1EF_1D1EF();// unknown_1000_D717_1D717();// unknown_1000_D75A_1D75A();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC108, "transition_ida", this.transition_ida_1000_C108_1C108);
            public Action transition_ida_1000_C108_1C108() {
                // gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();// unknown_334B_0151_33601();// unknown_334B_0160_33610();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC137, "load_icons_sprites_ida", this.load_icons_sprites_ida_1000_C137_1C137);
            public Action load_icons_sprites_ida_1000_C137_1C137() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC13E, "open_sprite_sheet_ida", this.open_sprite_sheet_ida_1000_C13E_1C13E);
            public Action open_sprite_sheet_ida_1000_C13E_1C13E() {
                // unknown_1000_C1AA_1C1AA();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// VgaFunc20NoOp_334B_013C_335EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC1BA, "hnm_apply_palette_ida", this.hnm_apply_palette_ida_1000_C1BA_1C1BA);
            public Action hnm_apply_palette_ida_1000_C1BA_1C1BA() {
                // unknown_334B_0106_335B6();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC22F, "draw_sprite_ida", this.draw_sprite_ida_1000_C22F_1C22F);
            public Action draw_sprite_ida_1000_C22F_1C22F() {
                // unknown_1000_C2A1_1C2A1();// VgaFunc05Blit_334B_010F_335BF();// unknown_334B_0169_33619();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC477, "gfx_copy_rect_at_si_ida", this.gfx_copy_rect_at_si_ida_1000_C477_1C477);
            public Action gfx_copy_rect_at_si_ida_1000_C477_1C477() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC4AA, "gfx_copy_rect_to_screen_ida", this.gfx_copy_rect_to_screen_ida_1000_C4AA_1C4AA);
            public Action gfx_copy_rect_to_screen_ida_1000_C4AA_1C4AA() {
                // VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC4CD, "gfx_copy_framebuf_to_screen_ida", this.gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD);
            public Action gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD() {
                // VgaFunc15MemcpyDSToESFor64000_334B_012D_335DD();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC4F0, "rect_at_si_to_regs_ida", this.rect_at_si_to_regs_ida_1000_C4F0_1C4F0);
            public Action rect_at_si_to_regs_ida_1000_C4F0_1C4F0() {
                // VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC92B, "hnm_reset_and_read_header_ida", this.hnm_reset_and_read_header_ida_1000_C92B_1C92B);
            public Action hnm_reset_and_read_header_ida_1000_C92B_1C92B() {
                // hnm_apply_palette_ida_1000_C1BA_1C1BA();// GetHnmResourceFlagNamePtrByIndexAXToBx_1000_C921_1C921();// hnm_close_resource_ida_1000_CA01_1CA01();// hnm_read_header_size_ida_1000_CD8F_1CD8F();// HnmReadFromFileHandle_1000_CDBF_1CDBF();// unknown_1000_CE01_1CE01();// hnm_reset_ida_1000_CE1A_1CE1A();// open_res_or_file_or_die_ida_1000_F229_1F229();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC9F4, "do_frame_and_check_if_frame_advanced_ida", this.do_frame_and_check_if_frame_advanced_ida_1000_C9F4_1C9F4);
            public Action do_frame_and_check_if_frame_advanced_ida_1000_C9F4_1C9F4() {
                // hnm_do_frame_ida_1000_CA60_1CA60();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCA01, "hnm_close_resource_ida", this.hnm_close_resource_ida_1000_CA01_1CA01);
            public Action hnm_close_resource_ida_1000_CA01_1CA01() {
                // unknown_1000_CE01_1CE01();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCA1B, "hnm_load_ida", this.hnm_load_ida_1000_CA1B_1CA1B);
            public Action hnm_load_ida_1000_CA1B_1CA1B() {
                // decode_sd_block_ida_1000_AA0F_1AA0F();// hnm_reset_and_read_header_ida_1000_C92B_1C92B();// unknown_1000_CB1A_1CB1A();// hnm_decode_video_frame_ida_1000_CC96_1CC96();// unknown_1000_CCF4_1CCF4();// hnm_prepare_header_read_ida_1000_CDA0_1CDA0();// hnm_reset_ida_1000_CE1A_1CE1A();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCA60, "hnm_do_frame_ida", this.hnm_do_frame_ida_1000_CA60_1CA60);
            public Action hnm_do_frame_ida_1000_CA60_1CA60() {
                // unknown_1000_CA8F_1CA8F();// unknown_1000_CAA0_1CAA0();// unknown_1000_CAD4_1CAD4();// unknown_1000_CB1A_1CB1A();// unknown_1000_CC4E_1CC4E();// hnm_decode_video_frame_ida_1000_CC96_1CC96();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCC96, "hnm_decode_video_frame_ida", this.hnm_decode_video_frame_ida_1000_CC96_1CC96);
            public Action hnm_decode_video_frame_ida_1000_CC96_1CC96() {
                // unknown_1000_4B2B_14B2B();// VgaFunc03DrawMouseCursor_334B_0109_335B9();// unknown_334B_0136_335E6();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCD8F, "hnm_read_header_size_ida", this.hnm_read_header_size_ida_1000_CD8F_1CD8F);
            public Action hnm_read_header_size_ida_1000_CD8F_1CD8F() {
                // HnmReadFromFileHandle_1000_CDBF_1CDBF();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCDA0, "hnm_prepare_header_read_ida", this.hnm_prepare_header_read_ida_1000_CDA0_1CDA0);
            public Action hnm_prepare_header_read_ida_1000_CDA0_1CDA0() {
                // hnm_read_header_size_ida_1000_CD8F_1CD8F();// hnm_reset_ida_1000_CE1A_1CE1A();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCE1A, "hnm_reset_ida", this.hnm_reset_ida_1000_CE1A_1CE1A);
            public Action hnm_reset_ida_1000_CE1A_1CE1A() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xCE6C, "initialize_memory_handler_ida", this.initialize_memory_handler_ida_1000_CE6C_1CE6C);
            public Action initialize_memory_handler_ida_1000_CE6C_1CE6C() {
                // GetHnmResourceFlagNamePtrByIndexAXToBx_1000_C921_1C921();// unknown_1000_CE01_1CE01();// unknown_1000_CEB0_1CEB0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCFA0, "check_amr_or_eng_language_ida", this.check_amr_or_eng_language_ida_1000_CFA0_1CFA0);
            public Action check_amr_or_eng_language_ida_1000_CFA0_1CFA0() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD00F, "load_PHRASExx_HSQ_ida", this.load_PHRASExx_HSQ_ida_1000_D00F_1D00F);
            public Action load_PHRASExx_HSQ_ida_1000_D00F_1D00F() {
                // ConvertIndexTableToPointerTable_1000_0098_10098();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDB14, "define_mouse_range_ida", this.define_mouse_range_ida_1000_DB14_1DB14);
            public Action define_mouse_range_ida_1000_DB14_1DB14() {
                // ShlDXAndCXByAX_1000_DB44_1DB44();// provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDB4C, "mouse_stuff_ida", this.mouse_stuff_ida_1000_DB4C_1DB4C);
            public Action mouse_stuff_ida_1000_DB4C_1DB4C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xDBB2, "call_restore_cursor_ida", this.call_restore_cursor_ida_1000_DBB2_1DBB2);
            public Action call_restore_cursor_ida_1000_DBB2_1DBB2() {
                // VgaFunc04RestoreImageUnderMouseCursor_334B_010C_335BC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDBEC, "draw_mouse_ida", this.draw_mouse_ida_1000_DBEC_1DBEC);
            public Action draw_mouse_ida_1000_DBEC_1DBEC() {
                // VgaFunc03DrawMouseCursor_334B_0109_335B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDC20, "redraw_mouse_ida", this.redraw_mouse_ida_1000_DC20_1DC20);
            public Action redraw_mouse_ida_1000_DC20_1DC20() {
                // unknown_1000_DC6A_1DC6A();// VgaFunc03DrawMouseCursor_334B_0109_335B9();// VgaFunc04RestoreImageUnderMouseCursor_334B_010C_335BC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDD63, "stc_on_user_input_ida", this.stc_on_user_input_ida_1000_DD63_1DD63);
            public Action stc_on_user_input_ida_1000_DD63_1DD63() {
                // unknown_1000_D9D2_1D9D2();// unknown_1000_DE54_1DE54();// unknown_1000_DE7B_1DE7B();// unknown_1000_E3CC_1E3CC();// provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDE0C, "check_midi_ida", this.check_midi_ida_1000_DE0C_1DE0C);
            public Action check_midi_ida_1000_DE0C_1DE0C() {
                // SetCEE8To0_1000_DE4E_1DE4E();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDF1E, "get_mouse_pos_etc_ida", this.get_mouse_pos_etc_ida_1000_DF1E_1DF1E);
            public Action get_mouse_pos_etc_ida_1000_DF1E_1DF1E() {
                // unknown_1000_DE7B_1DE7B();// provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE4AD, "parse_command_line_ida", this.parse_command_line_ida_1000_E4AD_1E4AD);
            public Action parse_command_line_ida_1000_E4AD_1E4AD() {
                // parse_cmd_is_end_of_arg_ida_1000_E56B_1E56B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE56B, "parse_cmd_is_end_of_arg_ida", this.parse_cmd_is_end_of_arg_ida_1000_E56B_1E56B);
            public Action parse_cmd_is_end_of_arg_ida_1000_E56B_1E56B() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE57B, "load_driver_ax_with_vtable_at_si_ida", this.load_driver_ax_with_vtable_at_si_ida_1000_E57B_1E57B);
            public Action load_driver_ax_with_vtable_at_si_ida_1000_E57B_1E57B() {
                // open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE594, "initialize_ida", this.initialize_ida_1000_E594_1E594);
            public Action initialize_ida_1000_E594_1E594() {
                // SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// ClearCurrentVideoBuffer_1000_C0AD_1C0AD();// initialize_memory_handler_ida_1000_CE6C_1CE6C();// unknown_1000_DB03_1DB03();// define_mouse_range_ida_1000_DB14_1DB14();// load_driver_ax_with_vtable_at_si_ida_1000_E57B_1E57B();// open_dune_dat_ida_1000_E675_1E675();// initialize_audio_ida_1000_E76A_1E76A();// unknown_1000_E85C_1E85C();// initialize_mouse_ida_1000_E97A_1E97A();// memory_func_qq_ida_1000_EA7B_1EA7B();// bump_alloc_get_addr_in_di_ida_1000_F0F6_1F0F6();// bump_allocate_bump_cx_bytes_ida_1000_F0FF_1F0FF();// VgaFunc00SetMode_334B_0100_335B0();// VgaFunc01GetInfoInAxCxBp_334B_0103_335B3();// VgaFunc11MemcpyDSToESFor64000_334B_0121_335D1();// unknown_334B_0154_33604();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE675, "open_dune_dat_ida", this.open_dune_dat_ida_1000_E675_1E675);
            public Action open_dune_dat_ida_1000_E675_1E675() {
                // read_dune_dat_toc_ida_1000_E741_1E741();// UnknownStructCreation_1000_E75B_1E75B();// open_res_or_file_to_dx_size_ax_ida_1000_F1FB_1F1FB();// locate_res_by_name_dssi_ida_1000_F314_1F314();// unknown_1000_F3A7_1F3A7();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE741, "read_dune_dat_toc_ida", this.read_dune_dat_toc_ida_1000_E741_1E741);
            public Action read_dune_dat_toc_ida_1000_E741_1E741() {
                // seek_dune_dat_offset_dxax_ida_1000_F2D6_1F2D6();// read_dune_dat_cx_to_esdi_ida_1000_F2EA_1F2EA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE76A, "initialize_audio_ida", this.initialize_audio_ida_1000_E76A_1E76A);
            public Action initialize_audio_ida_1000_E76A_1E76A() {
                // unknown_1000_A637_1A637();// unknown_1000_A650_1A650();// audio_test_frequency_ida_1000_A87E_1A87E();// IsUnknownDBC80x100_1000_AE28_1AE28();// unknown_1000_AE3F_1AE3F();// unknown_1000_AE54_1AE54();// load_driver_ax_with_vtable_at_si_ida_1000_E57B_1E57B();// unknown_1000_E826_1E826();// CheckUnknown39B9_1000_E851_1E851();// PcSpeakerActivationWithBXAndALCleanup_5635_0100_56450();// PcSpeakerActivationWithBXAndALCleanup_563E_0100_564E0();

                return nearRet();
            }
  // Not providing stub for get_pit_timer_value_ida. Reason: Function has no return


            // defineFunction(0x1000, 0xE8D5, "uninitialize_memory_driver_ida", this.uninitialize_memory_driver_ida_1000_E8D5_1E8D5);
            public Action uninitialize_memory_driver_ida_1000_E8D5_1E8D5() {
                // SetPitTimerToAX_1000_E8A8_1E8A8();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE913, "install_interrupt_handlers_ida", this.install_interrupt_handlers_ida_1000_E913_1E913);
            public Action install_interrupt_handlers_ida_1000_E913_1E913() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE97A, "initialize_mouse_ida", this.initialize_mouse_ida_1000_E97A_1E97A);
            public Action initialize_mouse_ida_1000_E97A_1E97A() {
                // provided_interrupt_handler_0x21_F000_0020_F0020();// provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xEA7B, "memory_func_qq_ida", this.memory_func_qq_ida_1000_EA7B_1EA7B);
            public Action memory_func_qq_ida_1000_EA7B_1EA7B() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF0A0, "open_resource_force_hsq_ida", this.open_resource_force_hsq_ida_1000_F0A0_1F0A0);
            public Action open_resource_force_hsq_ida_1000_F0A0_1F0A0() {
                // open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF0B9, "open_resource_by_index_si_ida", this.open_resource_by_index_si_ida_1000_F0B9_1F0B9);
            public Action open_resource_by_index_si_ida_1000_F0B9_1F0B9() {
                // read_and_maybe_hsq_ida_1000_F0D6_1F0D6();// alloc_cx_pages_to_di_ida_1000_F11C_1F11C();// read_resource_to_esdi_ida_1000_F244_1F244();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF0D6, "read_and_maybe_hsq_ida", this.read_and_maybe_hsq_ida_1000_F0D6_1F0D6);
            public Action read_and_maybe_hsq_ida_1000_F0D6_1F0D6() {
                // read_resource_to_esdi_ida_1000_F244_1F244();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF0F6, "bump_alloc_get_addr_in_di_ida", this.bump_alloc_get_addr_in_di_ida_1000_F0F6_1F0F6);
            public Action bump_alloc_get_addr_in_di_ida_1000_F0F6_1F0F6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF0FF, "bump_allocate_bump_cx_bytes_ida", this.bump_allocate_bump_cx_bytes_ida_1000_F0FF_1F0FF);
            public Action bump_allocate_bump_cx_bytes_ida_1000_F0FF_1F0FF() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF11C, "alloc_cx_pages_to_di_ida", this.alloc_cx_pages_to_di_ida_1000_F11C_1F11C);
            public Action alloc_cx_pages_to_di_ida_1000_F11C_1F11C() {
                // allocator_attempt_to_free_space_ida_1000_F13F_1F13F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF13F, "allocator_attempt_to_free_space_ida", this.allocator_attempt_to_free_space_ida_1000_F13F_1F13F);
            public Action allocator_attempt_to_free_space_ida_1000_F13F_1F13F() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF1FB, "open_res_or_file_to_dx_size_ax_ida", this.open_res_or_file_to_dx_size_ax_ida_1000_F1FB_1F1FB);
            public Action open_res_or_file_to_dx_size_ax_ida_1000_F1FB_1F1FB() {
                // seek_dune_dat_to_res_dsdx_ida_1000_F2A7_1F2A7();// strcpy_to_filename_buf_ida_1000_F2FC_1F2FC();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF229, "open_res_or_file_or_die_ida", this.open_res_or_file_or_die_ida_1000_F229_1F229);
            public Action open_res_or_file_or_die_ida_1000_F229_1F229() {
                // open_res_or_file_to_dx_size_ax_ida_1000_F1FB_1F1FB();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF244, "read_resource_to_esdi_ida", this.read_resource_to_esdi_ida_1000_F244_1F244);
            public Action read_resource_to_esdi_ida_1000_F244_1F244() {
                // open_res_or_file_or_die_ida_1000_F229_1F229();// read_dune_dat_cx_to_esdi_ida_1000_F2EA_1F2EA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF2A7, "seek_dune_dat_to_res_dsdx_ida", this.seek_dune_dat_to_res_dsdx_ida_1000_F2A7_1F2A7);
            public Action seek_dune_dat_to_res_dsdx_ida_1000_F2A7_1F2A7() {
                // seek_dune_dat_offset_dxax_ida_1000_F2D6_1F2D6();// locate_res_by_name_dssi_ida_1000_F314_1F314();// unknown_1000_F3A7_1F3A7();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF2D6, "seek_dune_dat_offset_dxax_ida", this.seek_dune_dat_offset_dxax_ida_1000_F2D6_1F2D6);
            public Action seek_dune_dat_offset_dxax_ida_1000_F2D6_1F2D6() {
                // provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF2EA, "read_dune_dat_cx_to_esdi_ida", this.read_dune_dat_cx_to_esdi_ida_1000_F2EA_1F2EA);
            public Action read_dune_dat_cx_to_esdi_ida_1000_F2EA_1F2EA() {
                // provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xF2FC, "strcpy_to_filename_buf_ida", this.strcpy_to_filename_buf_ida_1000_F2FC_1F2FC);
            public Action strcpy_to_filename_buf_ida_1000_F2FC_1F2FC() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF314, "locate_res_by_name_dssi_ida", this.locate_res_by_name_dssi_ida_1000_F314_1F314);
            public Action locate_res_by_name_dssi_ida_1000_F314_1F314() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xF403, "hsq_decomp_skip_header_dssi_to_esdi_ida", this.hsq_decomp_skip_header_dssi_to_esdi_ida_1000_F403_1F403);
            public Action hsq_decomp_skip_header_dssi_to_esdi_ida_1000_F403_1F403() {
                // interrupt_handler_0x8_1000_EF6A_1EF6A();// interrupt_handler_0x9_1000_EFE7_1EFE7();

                return nearRet();
            }
  // Not providing stub for ConvertIndexTableToPointerTable. Reason: Function already has an override

  // Not providing stub for GetEsSiPointerToUnknown. Reason: Function already has an override


            // defineFunction(0x334B, 0x100, "VgaFunc00SetMode", this.VgaFunc00SetMode_334B_0100_335B0);
            public Action VgaFunc00SetMode_334B_0100_335B0() {
                // provided_interrupt_handler_0x10_F000_0008_F0008();

                return farRet();
            }
  // Not providing stub for VgaFunc01GetInfoInAxCxBp. Reason: Function already has an override


            // defineFunction(0x334B, 0x109, "VgaFunc03DrawMouseCursor", this.VgaFunc03DrawMouseCursor_334B_0109_335B9);
            public Action VgaFunc03DrawMouseCursor_334B_0109_335B9() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }
  // Not providing stub for VgaFunc04RestoreImageUnderMouseCursor. Reason: Function already has an override


            // defineFunction(0x334B, 0x10F, "VgaFunc05Blit", this.VgaFunc05Blit_334B_010F_335BF);
            public Action VgaFunc05Blit_334B_010F_335BF() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }
  // Not providing stub for VgaFunc08FillWithZeroFor64000AtES. Reason: Function already has an override

  // Not providing stub for VgaFunc11MemcpyDSToESFor64000. Reason: Function already has an override


            // defineFunction(0x334B, 0x124, "VgaFunc12CopyRectangle", this.VgaFunc12CopyRectangle_334B_0124_335D4);
            public Action VgaFunc12CopyRectangle_334B_0124_335D4() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }
  // Not providing stub for VgaFunc14CopySquareOfPixelsSiIsSourceSegment. Reason: Function already has an override

  // Not providing stub for VgaFunc15MemcpyDSToESFor64000. Reason: Function already has an override

  // Not providing stub for VgaFunc16CopySquareOfPixels. Reason: Function already has an override

  // Not providing stub for VgaFunc20NoOp. Reason: Function already has an override

  // Not providing stub for VgaFunc33UpdateVgaOffset01A3FromLineNumberAsAx. Reason: Function already has an override

  // Not providing stub for VgaFunc36GenerateTextureOutBP. Reason: Function already has an override


            // defineFunction(0x334B, 0x17B, "VgaFunc41CopyPalette2toPalette1", this.VgaFunc41CopyPalette2toPalette1_334B_017B_3362B);
            public Action VgaFunc41CopyPalette2toPalette1_334B_017B_3362B() {
                // CopyCsRamB5FToB2F_334B_0A58_33F08();

                return farRet();
            }
  // Not providing stub for WaitForRetrace. Reason: Function already has an override

  // Not providing stub for SetBxCxPaletteRelated. Reason: Function already has an override

  // Not providing stub for CopyCsRamB5FToB2F. Reason: Function already has an override

  // Not providing stub for LoadPaletteInVgaDac. Reason: Function already has an override

  // Not providing stub for SetDiFromXYCordsDxBx. Reason: Function already has an override

  // Not providing stub for MemcpyDSToESFor64000. Reason: Function already has an override

  // Not providing stub for CopySquareOfPixels. Reason: Function already has an override


            // defineFunction(0x334B, 0x1D07, "UnknownGlobeRelated", this.UnknownGlobeRelated_334B_1D07_351B7);
            public Action UnknownGlobeRelated_334B_1D07_351B7() {
                
   
                return farRet();
            }
  // Not providing stub for UnknownGlobeInitRelated. Reason: Function already has an override


            // defineFunction(0x334B, 0x2025, "UnknownMapRelated", this.UnknownMapRelated_334B_2025_354D5);
            public Action UnknownMapRelated_334B_2025_354D5() {
                
   
                return nearRet();
            }
  // Not providing stub for CopyMapBlock. Reason: Function already has an override

  // Not providing stub for RetraceRelatedCalledOnEnterGlobe. Reason: Function already has an override

  // Not providing stub for WaitForRetraceInTransitions. Reason: Function already has an override

  // Not providing stub for WaitForRetraceDuringIntroVideo. Reason: Function already has an override


            // defineFunction(0x334B, 0x32C1, "GenerateMenuTransitionFrame", this.GenerateMenuTransitionFrame_334B_32C1_36771);
            public Action GenerateMenuTransitionFrame_334B_32C1_36771() {
                
   
                return nearRet();
            }
  // Not providing stub for Unknown. Reason: Function already has an override

  // Not providing stub for InitDialogue. Reason: Function already has an override

  // Not providing stub for ClearGlobalVgaOffset. Reason: Function already has an override

  // Not providing stub for ClearUnknownValuesAndAX. Reason: Function already has an override

  // Not providing stub for SetFrontBufferAsActiveFrameBuffer. Reason: Function already has an override

  // Not providing stub for SetBackBufferAsActiveFrameBuffer. Reason: Function already has an override

  // Not providing stub for SetTextBufferAsActiveFrameBuffer. Reason: Function already has an override

  // Not providing stub for ClearCurrentVideoBuffer. Reason: Function already has an override

  // Not providing stub for GetCharacterCoordsXY. Reason: Function already has an override

  // Not providing stub for SetFontToIntro. Reason: Function already has an override

  // Not providing stub for SetFontToMenu. Reason: Function already has an override

  // Not providing stub for PushAll. Reason: Function already has an override

  // Not providing stub for PopAll. Reason: Function already has an override

  // Not providing stub for HnmReadFromFileHandle. Reason: Function already has an override

  // Not providing stub for VgaInitRelated. Reason: Function already has an override

  // Not providing stub for SetMapClickHandlerAddressToInGame. Reason: Function already has an override

  // Not providing stub for SetMapClickHandlerAddressFromAx. Reason: Function already has an override

  // Not providing stub for InitMapCursorTypeDC58To0. Reason: Function already has an override

  // Not providing stub for SetSiToMapCursorTypeDC58. Reason: Function already has an override

  // Not providing stub for UnknownMemcopy. Reason: Function already has an override

  // Not providing stub for MenuAnimationRelated. Reason: Function already has an override

  // Not providing stub for SetBpToCurrentMenuTypeForScreenAction. Reason: Function already has an override

  // Not providing stub for LoadSceneSequenceDataIntoAXAndAdvanceSI. Reason: Function already has an override

  // Not providing stub for SetSceneSequenceOffsetToSi. Reason: Function already has an override

  // Not providing stub for CallMidiFunc02. Reason: Function already has an override

  // Not providing stub for CallPcmFunc05. Reason: Function already has an override

  // Not providing stub for PcSpeakerActivationWithBXAndALCleanup. Reason: Function already has an override

  // Not providing stub for ClearAL. Reason: Function already has an override

  // Not providing stub for ClearAL. Reason: Function already has an override

  // Not providing stub for ClearAL. Reason: Function already has an override

  // Not providing stub for PcSpeakerActivationWithBXAndALCleanup. Reason: Function already has an override

  // Not providing stub for ClearAL. Reason: Function already has an override

  // Not providing stub for ClearAL. Reason: Function already has an override

  // Not providing stub for GetSunlightDay. Reason: Function already has an override

  // Not providing stub for SetHourOfTheDayToAX. Reason: Function already has an override

  // Not providing stub for SetPitTimerToAX. Reason: Function already has an override

  // Not providing stub for NoOp. Reason: Function already has an override

  // Not providing stub for MemCopy8BytesDsSIToDsDi. Reason: Function already has an override

  // Not providing stub for MemCopy8BytesFrom1470ToD83C. Reason: Function already has an override

  // Not providing stub for MemCopy8Bytes. Reason: Function already has an override

  // Not providing stub for CheckPcmEnabled. Reason: Function already has an override

  // Not providing stub for IsUnknownDBC80x100And2943BitmaskNonZero. Reason: Function already has an override


            // defineFunction(0x1000, 0xD443, "DispatcherJumpsToBX", this.DispatcherJumpsToBX_1000_D443_1D443);
            public Action DispatcherJumpsToBX_1000_D443_1D443() {
                // unknown_1000_1797_11797();// unknown_1000_17BE_117BE();// unknown_1000_1834_11834();// unknown_1000_18BA_118BA();// unknown_1000_2170_12170();// open_SAL_resource_ida_1000_2D74_12D74();// unknown_1000_35AD_135AD();// unknown_1000_37B2_137B2();// unknown_1000_407E_1407E();// unknown_1000_409A_1409A();// unknown_1000_40AE_140AE();// unknown_1000_40C3_140C3();// unknown_1000_4182_14182();// unknown_1000_425B_1425B();// SetUnknown11CATo0_1000_4AC4_14AC4();// unknown_1000_4B3B_14B3B();// unknown_1000_503C_1503C();// unknown_1000_5ADF_15ADF();// unknown_1000_5B5D_15B5D();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// unknown_1000_5BB0_15BB0();// unknown_1000_A7C2_1A7C2();// unknown_1000_AD43_1AD43();// unknown_1000_AD5E_1AD5E();// unknown_1000_ADBE_1ADBE();// unknown_1000_AE04_1AE04();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_1000_B532_1B532();// map_func_ida_1000_B58B_1B58B();// unknown_1000_B930_1B930();// unknown_1000_BA9E_1BA9E();// unknown_1000_BC99_1BC99();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C0D5_1C0D5();// unknown_1000_C0F4_1C0F4();// transition_ida_1000_C108_1C108();// unknown_1000_C13B_1C13B();// unknown_1000_C412_1C412();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();// hnm_close_resource_ida_1000_CA01_1CA01();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// unknown_1000_D2BD_1D2BD();// unknown_1000_D2EA_1D2EA();// MenuAnimationRelated_1000_D316_1D316();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D717_1D717();// InitMapCursorTypeDC58To0_1000_DAA3_1DAA3();// call_restore_cursor_ida_1000_DBB2_1DBB2();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();// unknown_1000_E387_1E387();// unknown_1000_E3CC_1E3CC();// uninitialize_memory_driver_ida_1000_E8D5_1E8D5();// unknown_334B_0160_33610();// ClearAL_5635_0103_56453();// ClearAL_563E_0106_564E6();// provided_interrupt_handler_0x10_F000_0008_F0008();// provided_interrupt_handler_0x21_F000_0020_F0020();// provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD454, "DispatcherHelperDeterminesWhereToJump", this.DispatcherHelperDeterminesWhereToJump_1000_D454_1D454);
            public Action DispatcherHelperDeterminesWhereToJump_1000_D454_1D454() {
                
   
                return nearRet();
            }
  // Not providing stub for SetUnknown11CATo0. Reason: Function already has an override

  // Not providing stub for SetUnknown11CATo1. Reason: Function already has an override

  // Not providing stub for IsUnknownDC2BZero. Reason: Function already has an override

  // Not providing stub for IsUnknownDBC80x100. Reason: Function already has an override

  // Not providing stub for SetUnknown2788To0. Reason: Function already has an override

  // Not providing stub for NoOp. Reason: Function already has an override

  // Not providing stub for ShlDXAndCXByAX. Reason: Function already has an override

  // Not providing stub for NoOp. Reason: Function already has an override

  // Not providing stub for UnknownStructCreation. Reason: Function already has an override

  // Not providing stub for CheckUnknown39B9. Reason: Function already has an override

  // Not providing stub for Fill47F8WithFF. Reason: Function already has an override

  // Not providing stub for Inc2788. Reason: Function already has an override

  // Not providing stub for SetCEE8To0. Reason: Function already has an override

  // Not providing stub for GetHnmResourceFlagNamePtrByIndexAXToBx. Reason: Function already has an override

  // Not providing stub for VideoPlayRelated. Reason: Function already has an override

  // Not providing stub for CheckIfHnmComplete. Reason: Function already has an override

  // Not providing stub for provided_interrupt_handler_0x10. Reason: Function already has an override

  // Not providing stub for provided_interrupt_handler_0x21. Reason: Function already has an override

  // Not providing stub for provided_interrupt_handler_0x33. Reason: Function already has an override

  // Not providing stub for entry. Reason: Function has no return


            // defineFunction(0x1000, 0xF3A7, "unknown", this.unknown_1000_F3A7_1F3A7);
            public Action unknown_1000_F3A7_1F3A7() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE85C, "unknown", this.unknown_1000_E85C_1E85C);
            public Action unknown_1000_E85C_1E85C() {
                // install_interrupt_handlers_ida_1000_E913_1E913();

                return nearRet();
            }

            // defineFunction(0x1000, 0xEFBA, "unknown", this.unknown_1000_EFBA_1EFBA);
            public Action unknown_1000_EFBA_1EFBA() {
                // unknown_563E_010F_564EF();

                return nearRet();
            }

            // defineFunction(0x334B, 0x154, "unknown", this.unknown_334B_0154_33604);
            public Action unknown_334B_0154_33604() {
                // WaitForRetrace_334B_09B8_33E68();// LoadPaletteInVgaDac_334B_0B68_34018();

                return farRet();
            }
  // Not providing stub for interrupt_handler_0x8. Reason: Function has no return


            // defineFunction(0x1000, 0xDB03, "unknown", this.unknown_1000_DB03_1DB03);
            public Action unknown_1000_DB03_1DB03() {
                // unknown_1000_DAE3_1DAE3();// call_restore_cursor_ida_1000_DBB2_1DBB2();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDAE3, "unknown", this.unknown_1000_DAE3_1DAE3);
            public Action unknown_1000_DAE3_1DAE3() {
                // provided_interrupt_handler_0x33_F000_0024_F0024();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA637, "unknown", this.unknown_1000_A637_1A637);
            public Action unknown_1000_A637_1A637() {
                // ClearAL_5635_0115_56465();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAE54, "unknown", this.unknown_1000_AE54_1AE54);
            public Action unknown_1000_AE54_1AE54() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA650, "unknown", this.unknown_1000_A650_1A650);
            public Action unknown_1000_A650_1A650() {
                // ClearAL_563E_0112_564F2();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAE3F, "unknown", this.unknown_1000_AE3F_1AE3F);
            public Action unknown_1000_AE3F_1AE3F() {
                // IsUnknownDBC80x100_1000_AE28_1AE28();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE826, "unknown", this.unknown_1000_E826_1E826);
            public Action unknown_1000_E826_1E826() {
                // read_dune_dat_toc_ida_1000_E741_1E741();// UnknownStructCreation_1000_E75B_1E75B();// locate_res_by_name_dssi_ida_1000_F314_1F314();// unknown_1000_F3A7_1F3A7();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCEB0, "unknown", this.unknown_1000_CEB0_1CEB0);
            public Action unknown_1000_CEB0_1CEB0() {
                // MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// GetHnmResourceFlagNamePtrByIndexAXToBx_1000_C921_1C921();// hnm_reset_and_read_header_ida_1000_C92B_1C92B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCE01, "unknown", this.unknown_1000_CE01_1CE01);
            public Action unknown_1000_CE01_1CE01() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xCFB9, "unknown", this.unknown_1000_CFB9_1CFB9);
            public Action unknown_1000_CFB9_1CFB9() {
                // ConvertIndexTableToPointerTable_1000_0098_10098();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB5C5, "unknown", this.unknown_1000_B5C5_1B5C5);
            public Action unknown_1000_B5C5_1B5C5() {
                // map_func_ida_1000_B58B_1B58B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB5A0, "unknown", this.unknown_1000_B5A0_1B5A0);
            public Action unknown_1000_B5A0_1B5A0() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x6603, "unknown", this.unknown_1000_6603_16603);
            public Action unknown_1000_6603_16603() {
                // unknown_1000_01E0_101E0();// unknown_1000_316E_1316E();// unknown_1000_3406_13406();// unknown_1000_34D0_134D0();// unknown_1000_6906_16906();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6906, "unknown", this.unknown_1000_6906_16906);
            public Action unknown_1000_6906_16906() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1E0, "unknown", this.unknown_1000_01E0_101E0);
            public Action unknown_1000_01E0_101E0() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB17A, "unknown", this.unknown_1000_B17A_1B17A);
            public Action unknown_1000_B17A_1B17A() {
                // unknown_1000_96B5_196B5();

                return nearRet();
            }

            // defineFunction(0x1000, 0x96B5, "unknown", this.unknown_1000_96B5_196B5);
            public Action unknown_1000_96B5_196B5() {
                // unknown_1000_9F9E_19F9E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9F9E, "unknown", this.unknown_1000_9F9E_19F9E);
            public Action unknown_1000_9F9E_19F9E() {
                // NoOp_1000_0F66_10F66();// unknown_1000_1803_11803();// unknown_1000_3AF9_13AF9();// unknown_1000_88AF_188AF();// unknown_1000_91A0_191A0();// unknown_1000_94F3_194F3();// unknown_1000_978E_1978E();// unknown_1000_9EFD_19EFD();// unknown_1000_A0F1_1A0F1();// unknown_1000_A396_1A396();// InitDialogue_1000_C85B_1C85B();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x94F3, "unknown", this.unknown_1000_94F3_194F3);
            public Action unknown_1000_94F3_194F3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA396, "unknown", this.unknown_1000_A396_1A396);
            public Action unknown_1000_A396_1A396() {
                // unknown_1000_A30B_1A30B();// unknown_1000_A334_1A334();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA30B, "unknown", this.unknown_1000_A30B_1A30B);
            public Action unknown_1000_A30B_1A30B() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x10F, "unknown", this.unknown_563E_010F_564EF);
            public Action unknown_563E_010F_564EF() {
                // unknown_563E_0349_56729();// unknown_563E_036F_5674F();// unknown_563E_04D7_568B7();

                return farRet();
            }

            // defineFunction(0x1000, 0xDE54, "unknown", this.unknown_1000_DE54_1DE54);
            public Action unknown_1000_DE54_1DE54() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x911, "unknown", this.unknown_1000_0911_10911);
            public Action unknown_1000_0911_10911() {
                // unknown_1000_0A3E_10A3E();// unknown_1000_0B21_10B21();// unknown_1000_39E6_139E6();// unknown_1000_98E6_198E6();// unknown_1000_9985_19985();// unknown_1000_B930_1B930();// unknown_1000_DA5F_1DA5F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x39E6, "unknown", this.unknown_1000_39E6_139E6);
            public Action unknown_1000_39E6_139E6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB930, "unknown", this.unknown_1000_B930_1B930);
            public Action unknown_1000_B930_1B930() {
                // unknown_1000_DA5F_1DA5F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDA5F, "unknown", this.unknown_1000_DA5F_1DA5F);
            public Action unknown_1000_DA5F_1DA5F() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB21, "unknown", this.unknown_1000_0B21_10B21);
            public Action unknown_1000_0B21_10B21() {
                // CallPcmFunc05_1000_AC30_1AC30();// unknown_1000_DA5F_1DA5F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9985, "unknown", this.unknown_1000_9985_19985);
            public Action unknown_1000_9985_19985() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x98E6, "unknown", this.unknown_1000_98E6_198E6);
            public Action unknown_1000_98E6_198E6() {
                // ClearUnknownValuesAndAX_1000_98F5_198F5();// unknown_1000_A7A5_1A7A5();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA7A5, "unknown", this.unknown_1000_A7A5_1A7A5);
            public Action unknown_1000_A7A5_1A7A5() {
                // IsUnknownDC2BZero_1000_ABCC_1ABCC();// unknown_1000_D61D_1D61D();// unknown_1000_DA5F_1DA5F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD61D, "unknown", this.unknown_1000_D61D_1D61D);
            public Action unknown_1000_D61D_1D61D() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA3E, "unknown", this.unknown_1000_0A3E_10A3E);
            public Action unknown_1000_0A3E_10A3E() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x103, "unknown", this.unknown_563E_0103_564E3);
            public Action unknown_563E_0103_564E3() {
                // unknown_563E_02AE_5668E();// unknown_563E_036F_5674F();// unknown_563E_052F_5690F();

                return farRet();
            }

            // defineFunction(0x563E, 0x52F, "unknown", this.unknown_563E_052F_5690F);
            public Action unknown_563E_052F_5690F() {
                // unknown_563E_0564_56944();// unknown_563E_05A6_56986();

                return nearRet();
            }

            // defineFunction(0x563E, 0x5A6, "unknown", this.unknown_563E_05A6_56986);
            public Action unknown_563E_05A6_56986() {
                // unknown_563E_05BF_5699F();

                return nearRet();
            }

            // defineFunction(0x563E, 0x5BF, "unknown", this.unknown_563E_05BF_5699F);
            public Action unknown_563E_05BF_5699F() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x564, "unknown", this.unknown_563E_0564_56944);
            public Action unknown_563E_0564_56944() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x2AE, "unknown", this.unknown_563E_02AE_5668E);
            public Action unknown_563E_02AE_5668E() {
                // unknown_563E_049B_5687B();

                return nearRet();
            }

            // defineFunction(0x563E, 0x49B, "unknown", this.unknown_563E_049B_5687B);
            public Action unknown_563E_049B_5687B() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x36F, "unknown", this.unknown_563E_036F_5674F);
            public Action unknown_563E_036F_5674F() {
                // unknown_563E_03C7_567A7();// unknown_563E_041C_567FC();// unknown_563E_0422_56802();// unknown_563E_0428_56808();// unknown_563E_0432_56812();// unknown_563E_0453_56833();// unknown_563E_045D_5683D();// unknown_563E_049B_5687B();

                return nearRet();
            }

            // defineFunction(0x563E, 0x3C7, "unknown", this.unknown_563E_03C7_567A7);
            public Action unknown_563E_03C7_567A7() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x428, "unknown", this.unknown_563E_0428_56808);
            public Action unknown_563E_0428_56808() {
                // unknown_563E_049B_5687B();// unknown_563E_05BF_5699F();

                return nearRet();
            }

            // defineFunction(0x563E, 0x349, "unknown", this.unknown_563E_0349_56729);
            public Action unknown_563E_0349_56729() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0x106, "unknown", this.unknown_334B_0106_335B6);
            public Action unknown_334B_0106_335B6() {
                // SetBxCxPaletteRelated_334B_0A21_33ED1();

                return farRet();
            }

            // defineFunction(0x1000, 0xCCF4, "unknown", this.unknown_1000_CCF4_1CCF4);
            public Action unknown_1000_CCF4_1CCF4() {
                // hsq_decomp_skip_header_dssi_to_esdi_ida_1000_F403_1F403();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCB1A, "unknown", this.unknown_1000_CB1A_1CB1A);
            public Action unknown_1000_CB1A_1CB1A() {
                // unknown_1000_CC0C_1CC0C();// unknown_1000_CC2B_1CC2B();// hnm_read_header_size_ida_1000_CD8F_1CD8F();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }
  // Not providing stub for unknown. Reason: Function has different return types: NEAR,INTERRUPT


            // defineFunction(0x1000, 0xCC2B, "unknown", this.unknown_1000_CC2B_1CC2B);
            public Action unknown_1000_CC2B_1CC2B() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x45D, "unknown", this.unknown_563E_045D_5683D);
            public Action unknown_563E_045D_5683D() {
                // unknown_563E_01E1_565C1();

                return nearRet();
            }

            // defineFunction(0x334B, 0x151, "unknown", this.unknown_334B_0151_33601);
            public Action unknown_334B_0151_33601() {
                // SetBxCxPaletteRelated_334B_0A21_33ED1();// unknown_334B_0B0C_33FBC();// LoadPaletteInVgaDac_334B_0B68_34018();// SetDiFromXYCordsDxBx_334B_0C10_340C0();// MemcpyDSToESFor64000_334B_1B7C_3502C();// RetraceRelatedCalledOnEnterGlobe_334B_253D_359ED();// WaitForRetraceInTransitions_334B_2572_35A22();// unknown_334B_2596_35A46();// WaitForRetraceDuringIntroVideo_334B_261D_35ACD();// unknown_334B_26E3_35B93();// unknown_334B_2AB0_35F60();

                return farRet();
            }

            // defineFunction(0x334B, 0x26E3, "unknown", this.unknown_334B_26E3_35B93);
            public Action unknown_334B_26E3_35B93() {
                // LoadPaletteInVgaDac_334B_0B68_34018();// WaitForRetraceDuringIntroVideo_334B_261D_35ACD();

                return nearRet();
            }

            // defineFunction(0x334B, 0x160, "unknown", this.unknown_334B_0160_33610);
            public Action unknown_334B_0160_33610() {
                // LoadPaletteInVgaDac_334B_0B68_34018();

                return farRet();
            }

            // defineFunction(0x1000, 0xC0F4, "unknown", this.unknown_1000_C0F4_1C0F4);
            public Action unknown_1000_C0F4_1C0F4() {
                // unknown_334B_0160_33610();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3A7C, "unknown", this.unknown_1000_3A7C_13A7C);
            public Action unknown_1000_3A7C_13A7C() {
                // unknown_1000_39E6_139E6();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDE7B, "unknown", this.unknown_1000_DE7B_1DE7B);
            public Action unknown_1000_DE7B_1DE7B() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE3CC, "unknown", this.unknown_1000_E3CC_1E3CC);
            public Action unknown_1000_E3CC_1E3CC() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD9D2, "unknown", this.unknown_1000_D9D2_1D9D2);
            public Action unknown_1000_D9D2_1D9D2() {
                // unknown_1000_3916_13916();// unknown_1000_44AB_144AB();// unknown_1000_46B5_146B5();// unknown_1000_6B34_16B34();// unknown_1000_99BE_199BE();// unknown_1000_ACE6_1ACE6();// unknown_1000_B9AE_1B9AE();// unknown_1000_BE57_1BE57();

                return nearRet();
            }

            // defineFunction(0x1000, 0xACE6, "unknown", this.unknown_1000_ACE6_1ACE6);
            public Action unknown_1000_ACE6_1ACE6() {
                // IsUnknownDC2BZero_1000_ABCC_1ABCC();// load_music_ida_1000_AE62_1AE62();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_563E_0103_564E3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCAA0, "unknown", this.unknown_1000_CAA0_1CAA0);
            public Action unknown_1000_CAA0_1CAA0() {
                // unknown_1000_CCF4_1CCF4();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCAD4, "unknown", this.unknown_1000_CAD4_1CAD4);
            public Action unknown_1000_CAD4_1CAD4() {
                // VideoPlayRelated_1000_CA59_1CA59();

                return nearRet();
            }

            // defineFunction(0x563E, 0x422, "unknown", this.unknown_563E_0422_56802);
            public Action unknown_563E_0422_56802() {
                // unknown_563E_049B_5687B();// unknown_563E_05BF_5699F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCC4E, "unknown", this.unknown_1000_CC4E_1CC4E);
            public Action unknown_1000_CC4E_1CC4E() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x41C, "unknown", this.unknown_563E_041C_567FC);
            public Action unknown_563E_041C_567FC() {
                // unknown_563E_049B_5687B();// unknown_563E_05BF_5699F();

                return nearRet();
            }
  // Not providing stub for interrupt_handler_0x9. Reason: Function has no return


            // defineFunction(0x1000, 0x83, "unknown", this.unknown_1000_0083_10083);
            public Action unknown_1000_0083_10083() {
                // SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// ClearCurrentVideoBuffer_1000_C0AD_1C0AD();// load_icons_sprites_ida_1000_C137_1C137();// draw_sprite_ida_1000_C22F_1C22F();// check_amr_or_eng_language_ida_1000_CFA0_1CFA0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD1EF, "unknown", this.unknown_1000_D1EF_1D1EF);
            public Action unknown_1000_D1EF_1D1EF() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD200, "unknown", this.unknown_1000_D200_1D200);
            public Action unknown_1000_D200_1D200() {
                // SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// draw_sprite_ida_1000_C22F_1C22F();// unknown_334B_011B_335CB();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB4EA, "unknown", this.unknown_1000_B4EA_1B4EA);
            public Action unknown_1000_B4EA_1B4EA() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1860, "unknown", this.unknown_1000_1860_11860);
            public Action unknown_1000_1860_11860() {
                // unknown_1000_1843_11843();// unknown_1000_5ADF_15ADF();// unknown_1000_AE04_1AE04();// unknown_1000_B930_1B930();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// transition_ida_1000_C108_1C108();// unknown_1000_D2BD_1D2BD();// InitMapCursorTypeDC58To0_1000_DAA3_1DAA3();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1843, "unknown", this.unknown_1000_1843_11843);
            public Action unknown_1000_1843_11843() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD2BD, "unknown", this.unknown_1000_D2BD_1D2BD);
            public Action unknown_1000_D2BD_1D2BD() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5ADF, "unknown", this.unknown_1000_5ADF_15ADF);
            public Action unknown_1000_5ADF_15ADF() {
                // unknown_1000_7B36_17B36();

                return nearRet();
            }

            // defineFunction(0x1000, 0x7B36, "unknown", this.unknown_1000_7B36_17B36);
            public Action unknown_1000_7B36_17B36() {
                // unknown_1000_5F79_15F79();// unknown_1000_79DE_179DE();// unknown_1000_8770_18770();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8770, "unknown", this.unknown_1000_8770_18770);
            public Action unknown_1000_8770_18770() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5F79, "unknown", this.unknown_1000_5F79_15F79);
            public Action unknown_1000_5F79_15F79() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x79DE, "unknown", this.unknown_1000_79DE_179DE);
            public Action unknown_1000_79DE_179DE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD75A, "unknown", this.unknown_1000_D75A_1D75A);
            public Action unknown_1000_D75A_1D75A() {
                // unknown_1000_1A34_11A34();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D1F2_1D1F2();// unknown_1000_D200_1D200();// unknown_1000_D795_1D795();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD795, "unknown", this.unknown_1000_D795_1D795);
            public Action unknown_1000_D795_1D795() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1A34, "unknown", this.unknown_1000_1A34_11A34);
            public Action unknown_1000_1A34_11A34() {
                // unknown_1000_1A9B_11A9B();// GetSunlightDay_1000_1AD1_11AD1();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// unknown_1000_E290_1E290();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1A9B, "unknown", this.unknown_1000_1A9B_11A9B);
            public Action unknown_1000_1A9B_11A9B() {
                // GetEsSiPointerToUnknown_1000_C1F4_1C1F4();// unknown_334B_0112_335C2();

                return nearRet();
            }

            // defineFunction(0x334B, 0x112, "unknown", this.unknown_334B_0112_335C2);
            public Action unknown_334B_0112_335C2() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0xE290, "unknown", this.unknown_1000_E290_1E290);
            public Action unknown_1000_E290_1E290() {
                // unknown_1000_D04E_1D04E();// unknown_1000_D12F_1D12F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD04E, "unknown", this.unknown_1000_D04E_1D04E);
            public Action unknown_1000_D04E_1D04E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD12F, "unknown", this.unknown_1000_D12F_1D12F);
            public Action unknown_1000_D12F_1D12F() {
                // GetCharacterCoordsXY_1000_D05F_1D05F();// unknown_334B_0115_335C5();

                return nearRet();
            }

            // defineFunction(0x334B, 0x115, "unknown", this.unknown_334B_0115_335C5);
            public Action unknown_334B_0115_335C5() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0xD1F2, "unknown", this.unknown_1000_D1F2_1D1F2);
            public Action unknown_1000_D1F2_1D1F2() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0x2DB1, "unknown", this.unknown_1000_2DB1_12DB1);
            public Action unknown_1000_2DB1_12DB1() {
                // unknown_1000_1797_11797();// unknown_1000_17BE_117BE();// unknown_1000_1834_11834();// open_SAL_resource_ida_1000_2D74_12D74();// unknown_1000_35AD_135AD();// unknown_1000_37B2_137B2();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// unknown_1000_AD5E_1AD5E();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C0F4_1C0F4();// unknown_1000_C412_1C412();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();// SetMapClickHandlerAddressToInGame_1000_D95B_1D95B();// unknown_1000_E387_1E387();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD717, "unknown", this.unknown_1000_D717_1D717);
            public Action unknown_1000_D717_1D717() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();// unknown_1000_D741_1D741();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD741, "unknown", this.unknown_1000_D741_1D741);
            public Action unknown_1000_D741_1D741() {
                // unknown_334B_011E_335CE();

                return nearRet();
            }

            // defineFunction(0x334B, 0x11E, "unknown", this.unknown_334B_011E_335CE);
            public Action unknown_334B_011E_335CE() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0x2EB2, "unknown", this.unknown_1000_2EB2_12EB2);
            public Action unknown_1000_2EB2_12EB2() {
                // unknown_1000_2E98_12E98();// unknown_1000_2EFB_12EFB();// unknown_1000_2FFB_12FFB();// unknown_1000_3090_13090();// unknown_1000_9285_19285();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// unknown_1000_D763_1D763();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x2E98, "unknown", this.unknown_1000_2E98_12E98);
            public Action unknown_1000_2E98_12E98() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2EFB, "unknown", this.unknown_1000_2EFB_12EFB);
            public Action unknown_1000_2EFB_12EFB() {
                // unknown_1000_7F27_17F27();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3090, "unknown", this.unknown_1000_3090_13090);
            public Action unknown_1000_3090_13090() {
                // unknown_1000_3127_13127();// unknown_1000_36EE_136EE();// unknown_1000_98E6_198E6();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3127, "unknown", this.unknown_1000_3127_13127);
            public Action unknown_1000_3127_13127() {
                // unknown_1000_331E_1331E();// unknown_1000_6603_16603();

                return nearRet();
            }

            // defineFunction(0x1000, 0x331E, "unknown", this.unknown_1000_331E_1331E);
            public Action unknown_1000_331E_1331E() {
                // unknown_1000_3385_13385();// unknown_1000_33BE_133BE();// unknown_1000_34A5_134A5();// unknown_1000_5274_15274();// unknown_1000_7F27_17F27();

                return nearRet();
            }

            // defineFunction(0x1000, 0x33BE, "unknown", this.unknown_1000_33BE_133BE);
            public Action unknown_1000_33BE_133BE() {
                // unknown_1000_33D9_133D9();// unknown_1000_6603_16603();

                return nearRet();
            }

            // defineFunction(0x1000, 0x33D9, "unknown", this.unknown_1000_33D9_133D9);
            public Action unknown_1000_33D9_133D9() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x34A5, "unknown", this.unknown_1000_34A5_134A5);
            public Action unknown_1000_34A5_134A5() {
                // unknown_1000_6639_16639();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6639, "unknown", this.unknown_1000_6639_16639);
            public Action unknown_1000_6639_16639() {
                // unknown_1000_6603_16603();

                return nearRet();
            }

            // defineFunction(0x1000, 0x7F27, "unknown", this.unknown_1000_7F27_17F27);
            public Action unknown_1000_7F27_17F27() {
                // unknown_1000_6906_16906();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3385, "unknown", this.unknown_1000_3385_13385);
            public Action unknown_1000_3385_13385() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5274, "unknown", this.unknown_1000_5274_15274);
            public Action unknown_1000_5274_15274() {
                // unknown_1000_5323_15323();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5323, "unknown", this.unknown_1000_5323_15323);
            public Action unknown_1000_5323_15323() {
                // unknown_1000_5133_15133();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5133, "unknown", this.unknown_1000_5133_15133);
            public Action unknown_1000_5133_15133() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x36EE, "unknown", this.unknown_1000_36EE_136EE);
            public Action unknown_1000_36EE_136EE() {
                // unknown_1000_30B9_130B9();// unknown_1000_3120_13120();// unknown_1000_3520_13520();

                return nearRet();
            }

            // defineFunction(0x1000, 0x30B9, "unknown", this.unknown_1000_30B9_130B9);
            public Action unknown_1000_30B9_130B9() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3120, "unknown", this.unknown_1000_3120_13120);
            public Action unknown_1000_3120_13120() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2FFB, "unknown", this.unknown_1000_2FFB_12FFB);
            public Action unknown_1000_2FFB_12FFB() {
                // unknown_1000_3EFE_13EFE();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();// unknown_1000_D741_1D741();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3EFE, "unknown", this.unknown_1000_3EFE_13EFE);
            public Action unknown_1000_3EFE_13EFE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD763, "unknown", this.unknown_1000_D763_1D763);
            public Action unknown_1000_D763_1D763() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D1F2_1D1F2();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD48A, "unknown", this.unknown_1000_D48A_1D48A);
            public Action unknown_1000_D48A_1D48A() {
                // SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_CF70_1CF70();// unknown_1000_D04E_1D04E();// GetCharacterCoordsXY_1000_D05F_1D05F();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// unknown_1000_D1BB_1D1BB();// unknown_334B_011E_335CE();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCF70, "unknown", this.unknown_1000_CF70_1CF70);
            public Action unknown_1000_CF70_1CF70() {
                // load_PHRASExx_HSQ_ida_1000_D00F_1D00F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD1BB, "unknown", this.unknown_1000_D1BB_1D1BB);
            public Action unknown_1000_D1BB_1D1BB() {
                // unknown_1000_D096_1D096();// unknown_1000_D12F_1D12F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9285, "unknown", this.unknown_1000_9285_19285);
            public Action unknown_1000_9285_19285() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x37B2, "unknown", this.unknown_1000_37B2_137B2);
            public Action unknown_1000_37B2_137B2() {
                // unknown_1000_37EB_137EB();// unknown_1000_395C_1395C();// unknown_1000_3971_13971();// unknown_1000_398C_1398C();// unknown_1000_39E6_139E6();// unknown_1000_3A95_13A95();// unknown_1000_3AA9_13AA9();// Fill47F8WithFF_1000_3AE9_13AE9();// draw_SAL_ida_1000_3B59_13B59();// unknown_1000_3EFE_13EFE();// unknown_1000_4988_14988();// unknown_1000_4A5A_14A5A();// unknown_1000_4D00_14D00();// MemCopy8Bytes_1000_5BA8_15BA8();// unknown_1000_98E6_198E6();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C432_1C432();// hnm_load_ida_1000_CA1B_1CA1B();// VgaFunc41CopyPalette2toPalette1_334B_017B_3362B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4D00, "unknown", this.unknown_1000_4D00_14D00);
            public Action unknown_1000_4D00_14D00() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC432, "unknown", this.unknown_1000_C432_1C432);
            public Action unknown_1000_C432_1C432() {
                // unknown_334B_011B_335CB();

                return nearRet();
            }

            // defineFunction(0x334B, 0x11B, "unknown", this.unknown_334B_011B_335CB);
            public Action unknown_334B_011B_335CB() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0xC1AA, "unknown", this.unknown_1000_C1AA_1C1AA);
            public Action unknown_1000_C1AA_1C1AA() {
                // unknown_334B_0106_335B6();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3DF4, "unknown", this.unknown_1000_3DF4_13DF4);
            public Action unknown_1000_3DF4_13DF4() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3E13, "unknown", this.unknown_1000_3E13_13E13);
            public Action unknown_1000_3E13_13E13() {
                // unknown_1000_3E80_13E80();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3E80, "unknown", this.unknown_1000_3E80_13E80);
            public Action unknown_1000_3E80_13E80() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0x139, "unknown", this.unknown_334B_0139_335E9);
            public Action unknown_334B_0139_335E9() {
                // unknown_334B_1ADC_34F8C();

                return farRet();
            }

            // defineFunction(0x334B, 0x1ADC, "unknown", this.unknown_334B_1ADC_34F8C);
            public Action unknown_334B_1ADC_34F8C() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3D2F, "unknown", this.unknown_1000_3D2F_13D2F);
            public Action unknown_1000_3D2F_13D2F() {
                // unknown_1000_127C_1127C();// unknown_1000_9123_19123();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C1AA_1C1AA();// draw_sprite_ida_1000_C22F_1C22F();// unknown_1000_C2FD_1C2FD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9123, "unknown", this.unknown_1000_9123_19123);
            public Action unknown_1000_9123_19123() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x127C, "unknown", this.unknown_1000_127C_1127C);
            public Action unknown_1000_127C_1127C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC2FD, "unknown", this.unknown_1000_C2FD_1C2FD);
            public Action unknown_1000_C2FD_1C2FD() {
                // draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC2A1, "unknown", this.unknown_1000_C2A1_1C2A1);
            public Action unknown_1000_C2A1_1C2A1() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0x169, "unknown", this.unknown_334B_0169_33619);
            public Action unknown_334B_0169_33619() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0xC412, "unknown", this.unknown_1000_C412_1C412);
            public Action unknown_1000_C412_1C412() {
                // VgaFunc11MemcpyDSToESFor64000_334B_0121_335D1();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAD5E, "unknown", this.unknown_1000_AD5E_1AD5E);
            public Action unknown_1000_AD5E_1AD5E() {
                // unknown_1000_AA96_1AA96();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_563E_0109_564E9();// unknown_563E_010C_564EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAA96, "unknown", this.unknown_1000_AA96_1AA96);
            public Action unknown_1000_AA96_1AA96() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x10C, "unknown", this.unknown_563E_010C_564EC);
            public Action unknown_563E_010C_564EC() {
                
   
                return farRet();
            }

            // defineFunction(0x563E, 0x4D7, "unknown", this.unknown_563E_04D7_568B7);
            public Action unknown_563E_04D7_568B7() {
                // unknown_563E_05A6_56986();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1834, "unknown", this.unknown_1000_1834_11834);
            public Action unknown_1000_1834_11834() {
                // unknown_334B_014B_335FB();

                return nearRet();
            }

            // defineFunction(0x334B, 0x14B, "unknown", this.unknown_334B_014B_335FB);
            public Action unknown_334B_014B_335FB() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0x1797, "unknown", this.unknown_1000_1797_11797);
            public Action unknown_1000_1797_11797() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_C1AA_1C1AA();// draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x35AD, "unknown", this.unknown_1000_35AD_135AD);
            public Action unknown_1000_35AD_135AD() {
                // unknown_1000_3520_13520();// unknown_1000_4182_14182();

                return nearRet();
            }

            // defineFunction(0x1000, 0x17BE, "unknown", this.unknown_1000_17BE_117BE);
            public Action unknown_1000_17BE_117BE() {
                // unknown_1000_1797_11797();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// unknown_1000_C446_1C446();// VgaFunc16CopySquareOfPixels_334B_0130_335E0();// unknown_334B_014E_335FE();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC446, "unknown", this.unknown_1000_C446_1C446);
            public Action unknown_1000_C446_1C446() {
                // VgaFunc14CopySquareOfPixelsSiIsSourceSegment_334B_012A_335DA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE387, "unknown", this.unknown_1000_E387_1E387);
            public Action unknown_1000_E387_1E387() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0xB0C, "unknown", this.unknown_334B_0B0C_33FBC);
            public Action unknown_334B_0B0C_33FBC() {
                // LoadPaletteInVgaDac_334B_0B68_34018();

                return farRet();
            }

            // defineFunction(0x1000, 0xAE04, "unknown", this.unknown_1000_AE04_1AE04);
            public Action unknown_1000_AE04_1AE04() {
                // unknown_1000_AD43_1AD43();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAD43, "unknown", this.unknown_1000_AD43_1AD43);
            public Action unknown_1000_AD43_1AD43() {
                // load_music_ida_1000_AE62_1AE62();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_563E_0103_564E3();

                return nearRet();
            }
  // Not providing stub for unknown. Reason: Function has no return


            // defineFunction(0x1000, 0xD7B7, "unknown", this.unknown_1000_D7B7_1D7B7);
            public Action unknown_1000_D7B7_1D7B7() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1B0D, "unknown", this.unknown_1000_1B0D_11B0D);
            public Action unknown_1000_1B0D_11B0D() {
                // unknown_1000_1A0F_11A0F();// SetHourOfTheDayToAX_1000_1AE0_11AE0();// unknown_1000_1BEC_11BEC();// unknown_1000_1C18_11C18();// unknown_1000_1C46_11C46();// unknown_1000_1D9F_11D9F();// unknown_1000_1DD3_11DD3();// unknown_1000_1DD4_11DD4();// unknown_1000_1DD7_11DD7();// unknown_1000_1DDA_11DDA();// unknown_1000_1DFE_11DFE();// unknown_1000_2B2A_12B2A();// unknown_1000_331E_1331E();// unknown_1000_38E1_138E1();// map_func_qq_ida_1000_63F0_163F0();// unknown_1000_6C6F_16C6F();// IsUnknownDC2BZero_1000_ABCC_1ABCC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x2B2A, "unknown", this.unknown_1000_2B2A_12B2A);
            public Action unknown_1000_2B2A_12B2A() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4F0C, "unknown", this.unknown_1000_4F0C_14F0C);
            public Action unknown_1000_4F0C_14F0C() {
                // unknown_1000_2E52_12E52();// unknown_1000_407E_1407E();// unknown_1000_41E1_141E1();// unknown_1000_4A00_14A00();// unknown_1000_4A1A_14A1A();// unknown_1000_4B3B_14B3B();// unknown_1000_5206_15206();// unknown_1000_62D6_162D6();// unknown_1000_B532_1B532();// map_func_ida_1000_B58B_1B58B();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// SetBackBufferAsActiveFrameBuffer_1000_C085_1C085();// load_icons_sprites_ida_1000_C137_1C137();// draw_sprite_ida_1000_C22F_1C22F();// hnm_do_frame_ida_1000_CA60_1CA60();// VgaFunc03DrawMouseCursor_334B_0109_335B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDC6A, "unknown", this.unknown_1000_DC6A_1DC6A);
            public Action unknown_1000_DC6A_1DC6A() {
                // unknown_1000_D6FE_1D6FE();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD50F, "unknown", this.unknown_1000_D50F_1D50F);
            public Action unknown_1000_D50F_1D50F() {
                // unknown_1000_9285_19285();// unknown_1000_92C9_192C9();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// unknown_1000_D6FE_1D6FE();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1AE7, "unknown", this.unknown_1000_1AE7_11AE7);
            public Action unknown_1000_1AE7_11AE7() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1A0F, "unknown", this.unknown_1000_1A0F_11A0F);
            public Action unknown_1000_1A0F_11A0F() {
                // unknown_1000_1A34_11A34();// load_icons_sprites_ida_1000_C137_1C137();// open_sprite_sheet_ida_1000_C13E_1C13E();// gfx_copy_rect_to_screen_ida_1000_C4AA_1C4AA();// unknown_1000_D200_1D200();// call_restore_cursor_ida_1000_DBB2_1DBB2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x38E1, "unknown", this.unknown_1000_38E1_138E1);
            public Action unknown_1000_38E1_138E1() {
                // unknown_1000_395C_1395C();// unknown_1000_3971_13971();// unknown_1000_39B9_139B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1D9F, "unknown", this.unknown_1000_1D9F_11D9F);
            public Action unknown_1000_1D9F_11D9F() {
                // unknown_1000_1E01_11E01();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1E01, "unknown", this.unknown_1000_1E01_11E01);
            public Action unknown_1000_1E01_11E01() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x6C6F, "unknown", this.unknown_1000_6C6F_16C6F);
            public Action unknown_1000_6C6F_16C6F() {
                // unknown_1000_6C46_16C46();// unknown_1000_6D19_16D19();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6C46, "unknown", this.unknown_1000_6C46_16C46);
            public Action unknown_1000_6C46_16C46() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x6D19, "unknown", this.unknown_1000_6D19_16D19);
            public Action unknown_1000_6D19_16D19() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1DD4, "unknown", this.unknown_1000_1DD4_11DD4);
            public Action unknown_1000_1DD4_11DD4() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1C18, "unknown", this.unknown_1000_1C18_11C18);
            public Action unknown_1000_1C18_11C18() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1BEC, "unknown", this.unknown_1000_1BEC_11BEC);
            public Action unknown_1000_1BEC_11BEC() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD6B7, "unknown", this.unknown_1000_D6B7_1D6B7);
            public Action unknown_1000_D6B7_1D6B7() {
                // unknown_1000_D694_1D694();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD694, "unknown", this.unknown_1000_D694_1D694);
            public Action unknown_1000_D694_1D694() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD65A, "unknown", this.unknown_1000_D65A_1D65A);
            public Action unknown_1000_D65A_1D65A() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD43E, "unknown", this.unknown_1000_D43E_1D43E);
            public Action unknown_1000_D43E_1D43E() {
                // unknown_1000_38E1_138E1();// unknown_1000_439F_1439F();// unknown_1000_445D_1445D();// unknown_1000_4658_14658();// unknown_1000_49EA_149EA();// SetUnknown11CATo1_1000_4ACA_14ACA();// unknown_1000_5B5D_15B5D();// unknown_1000_5B93_15B93();// MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// unknown_1000_5DCE_15DCE();// unknown_1000_98B2_198B2();// unknown_1000_A42C_1A42C();// unknown_1000_A44C_1A44C();// unknown_1000_A47D_1A47D();// unknown_1000_A4C6_1A4C6();// unknown_1000_A7C2_1A7C2();// unknown_1000_AB4F_1AB4F();// unknown_1000_AC3A_1AC3A();// map_func_ida_1000_B6C3_1B6C3();// unknown_1000_B8F3_1B8F3();// unknown_1000_B98B_1B98B();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_C0D5_1C0D5();// unknown_1000_C0F4_1C0F4();// load_icons_sprites_ida_1000_C137_1C137();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C21B_1C21B();// draw_sprite_ida_1000_C22F_1C22F();// unknown_1000_C4DD_1C4DD();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// unknown_1000_D2BD_1D2BD();// MenuAnimationRelated_1000_D316_1D316();// unknown_1000_D323_1D323();// unknown_1000_D33A_1D33A();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// unknown_1000_D72B_1D72B();// SetMapClickHandlerAddressFromAx_1000_D95E_1D95E();// SetSiToMapCursorTypeDC58_1000_DAAA_1DAAA();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA4C6, "unknown", this.unknown_1000_A4C6_1A4C6);
            public Action unknown_1000_A4C6_1A4C6() {
                // unknown_1000_A502_1A502();// IsUnknownDBC80x100_1000_AE28_1AE28();// CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA502, "unknown", this.unknown_1000_A502_1A502);
            public Action unknown_1000_A502_1A502() {
                // unknown_1000_A45C_1A45C();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();// unknown_1000_C2FD_1C2FD();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA45C, "unknown", this.unknown_1000_A45C_1A45C);
            public Action unknown_1000_A45C_1A45C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA47D, "unknown", this.unknown_1000_A47D_1A47D);
            public Action unknown_1000_A47D_1A47D() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA42C, "unknown", this.unknown_1000_A42C_1A42C);
            public Action unknown_1000_A42C_1A42C() {
                // unknown_1000_A465_1A465();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA465, "unknown", this.unknown_1000_A465_1A465);
            public Action unknown_1000_A465_1A465() {
                // unknown_1000_A45C_1A45C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA44C, "unknown", this.unknown_1000_A44C_1A44C);
            public Action unknown_1000_A44C_1A44C() {
                // unknown_1000_A465_1A465();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAC3A, "unknown", this.unknown_1000_AC3A_1AC3A);
            public Action unknown_1000_AC3A_1AC3A() {
                // IsUnknownDBC80x100_1000_AE28_1AE28();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD33A, "unknown", this.unknown_1000_D33A_1D33A);
            public Action unknown_1000_D33A_1D33A() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD239, "unknown", this.unknown_1000_D239_1D239);
            public Action unknown_1000_D239_1D239() {
                // unknown_1000_1A34_11A34();// unknown_1000_D1F2_1D1F2();// unknown_1000_E387_1E387();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC0D5, "unknown", this.unknown_1000_C0D5_1C0D5);
            public Action unknown_1000_C0D5_1C0D5() {
                // unknown_334B_015A_3360A();

                return nearRet();
            }

            // defineFunction(0x334B, 0x15A, "unknown", this.unknown_334B_015A_3360A);
            public Action unknown_334B_015A_3360A() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();// CopySquareOfPixels_334B_1B8E_3503E();// GenerateMenuTransitionFrame_334B_32C1_36771();// unknown_334B_35C8_36A78();

                return farRet();
            }

            // defineFunction(0x1000, 0xA7C2, "unknown", this.unknown_1000_A7C2_1A7C2);
            public Action unknown_1000_A7C2_1A7C2() {
                // IsUnknownDC2BZero_1000_ABCC_1ABCC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD23D, "unknown", this.unknown_1000_D23D_1D23D);
            public Action unknown_1000_D23D_1D23D() {
                // unknown_1000_1A34_11A34();// unknown_1000_D1F2_1D1F2();// unknown_1000_E387_1E387();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA5AA, "unknown", this.unknown_1000_A5AA_1A5AA);
            public Action unknown_1000_A5AA_1A5AA() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x9215, "unknown", this.unknown_1000_9215_19215);
            public Action unknown_1000_9215_19215() {
                // unknown_1000_38E1_138E1();// unknown_1000_439F_1439F();// unknown_1000_445D_1445D();// unknown_1000_4658_14658();// unknown_1000_49EA_149EA();// SetUnknown11CATo1_1000_4ACA_14ACA();// unknown_1000_5B5D_15B5D();// unknown_1000_5B93_15B93();// MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// unknown_1000_5DCE_15DCE();// unknown_1000_9285_19285();// unknown_1000_98B2_198B2();// unknown_1000_AB4F_1AB4F();// map_func_ida_1000_B6C3_1B6C3();// unknown_1000_C0F4_1C0F4();// load_icons_sprites_ida_1000_C137_1C137();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C21B_1C21B();// unknown_1000_C4DD_1C4DD();// unknown_1000_D323_1D323();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// unknown_1000_D72B_1D72B();// SetMapClickHandlerAddressFromAx_1000_D95E_1D95E();// SetSiToMapCursorTypeDC58_1000_DAAA_1DAAA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA576, "unknown", this.unknown_1000_A576_1A576);
            public Action unknown_1000_A576_1A576() {
                // unknown_1000_A453_1A453();// unknown_1000_A672_1A672();// unknown_1000_A69F_1A69F();// unknown_1000_D6FE_1D6FE();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD6FE, "unknown", this.unknown_1000_D6FE_1D6FE);
            public Action unknown_1000_D6FE_1D6FE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA453, "unknown", this.unknown_1000_A453_1A453);
            public Action unknown_1000_A453_1A453() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA672, "unknown", this.unknown_1000_A672_1A672);
            public Action unknown_1000_A672_1A672() {
                // unknown_1000_A685_1A685();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA685, "unknown", this.unknown_1000_A685_1A685);
            public Action unknown_1000_A685_1A685() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA69F, "unknown", this.unknown_1000_A69F_1A69F);
            public Action unknown_1000_A69F_1A69F() {
                // unknown_1000_A6B2_1A6B2();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA6B2, "unknown", this.unknown_1000_A6B2_1A6B2);
            public Action unknown_1000_A6B2_1A6B2() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA5DF, "unknown", this.unknown_1000_A5DF_1A5DF);
            public Action unknown_1000_A5DF_1A5DF() {
                // unknown_1000_A453_1A453();// unknown_1000_A594_1A594();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA594, "unknown", this.unknown_1000_A594_1A594);
            public Action unknown_1000_A594_1A594() {
                // unknown_1000_A672_1A672();// unknown_1000_A69F_1A69F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD42F, "unknown", this.unknown_1000_D42F_1D42F);
            public Action unknown_1000_D42F_1D42F() {
                // unknown_1000_A7C2_1A7C2();// unknown_1000_C0D5_1C0D5();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// unknown_1000_D2EA_1D2EA();// MenuAnimationRelated_1000_D316_1D316();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD2EA, "unknown", this.unknown_1000_D2EA_1D2EA);
            public Action unknown_1000_D2EA_1D2EA() {
                // unknown_1000_4415_14415();// unknown_1000_97CF_197CF();// unknown_1000_A541_1A541();// unknown_1000_B2B3_1B2B3();// unknown_1000_D36D_1D36D();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA541, "unknown", this.unknown_1000_A541_1A541);
            public Action unknown_1000_A541_1A541() {
                // unknown_1000_1797_11797();// SetMapClickHandlerAddressToInGame_1000_D95B_1D95B();// InitMapCursorTypeDC58To0_1000_DAA3_1DAA3();// VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD36D, "unknown", this.unknown_1000_D36D_1D36D);
            public Action unknown_1000_D36D_1D36D() {
                // unknown_1000_9285_19285();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x18BA, "unknown", this.unknown_1000_18BA_118BA);
            public Action unknown_1000_18BA_118BA() {
                // unknown_1000_39E6_139E6();// SetUnknown11CATo1_1000_4ACA_14ACA();// unknown_1000_4D00_14D00();// unknown_1000_98E6_198E6();// CallPcmFunc05_1000_AC30_1AC30();// unknown_1000_D2BD_1D2BD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5B5D, "unknown", this.unknown_1000_5B5D_15B5D);
            public Action unknown_1000_5B5D_15B5D() {
                // unknown_1000_407E_1407E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x407E, "unknown", this.unknown_1000_407E_1407E);
            public Action unknown_1000_407E_1407E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5A56, "unknown", this.unknown_1000_5A56_15A56);
            public Action unknown_1000_5A56_15A56() {
                // unknown_1000_1797_11797();// SetUnknown11CATo1_1000_4ACA_14ACA();// unknown_1000_5A9A_15A9A();// unknown_1000_5B69_15B69();// MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// unknown_1000_AD5E_1AD5E();// unknown_1000_B930_1B930();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();// unknown_1000_D2BD_1D2BD();// unknown_1000_D741_1D741();// unknown_1000_D792_1D792();// unknown_1000_DA25_1DA25();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDA25, "unknown", this.unknown_1000_DA25_1DA25);
            public Action unknown_1000_DA25_1DA25() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5B69, "unknown", this.unknown_1000_5B69_15B69);
            public Action unknown_1000_5B69_15B69() {
                // unknown_1000_C560_1C560();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC560, "unknown", this.unknown_1000_C560_1C560);
            public Action unknown_1000_C560_1C560() {
                // unknown_1000_C53E_1C53E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC53E, "unknown", this.unknown_1000_C53E_1C53E);
            public Action unknown_1000_C53E_1C53E() {
                // unknown_334B_0139_335E9();

                return nearRet();
            }

            // defineFunction(0x563E, 0x109, "unknown", this.unknown_563E_0109_564E9);
            public Action unknown_563E_0109_564E9() {
                
   
                return farRet();
            }

            // defineFunction(0x1000, 0x5A9A, "unknown", this.unknown_1000_5A9A_15A9A);
            public Action unknown_1000_5A9A_15A9A() {
                // unknown_1000_5B8D_15B8D();// unknown_1000_5DCE_15DCE();// unknown_1000_6314_16314();// unknown_1000_6715_16715();// unknown_1000_878C_1878C();// map_func_ida_1000_B6C3_1B6C3();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// unknown_1000_C13B_1C13B();// unknown_1000_C412_1C412();// unknown_1000_C6AD_1C6AD();// SetMapClickHandlerAddressFromAx_1000_D95E_1D95E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5B8D, "unknown", this.unknown_1000_5B8D_15B8D);
            public Action unknown_1000_5B8D_15B8D() {
                // UnknownMemcopy_1000_5B96_15B96();

                return nearRet();
            }

            // defineFunction(0x334B, 0x157, "unknown", this.unknown_334B_0157_33607);
            public Action unknown_334B_0157_33607() {
                // UnknownMapRelated_334B_2025_354D5();// unknown_334B_2123_355D3();// unknown_334B_2153_35603();

                return farRet();
            }

            // defineFunction(0x334B, 0x2123, "unknown", this.unknown_334B_2123_355D3);
            public Action unknown_334B_2123_355D3() {
                // CopyMapBlock_334B_2343_357F3();

                return nearRet();
            }

            // defineFunction(0x334B, 0x2153, "unknown", this.unknown_334B_2153_35603);
            public Action unknown_334B_2153_35603() {
                // CopyMapBlock_334B_2343_357F3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC13B, "unknown", this.unknown_1000_C13B_1C13B);
            public Action unknown_1000_C13B_1C13B() {
                // unknown_1000_C1AA_1C1AA();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// VgaFunc20NoOp_334B_013C_335EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5DCE, "unknown", this.unknown_1000_5DCE_15DCE);
            public Action unknown_1000_5DCE_15DCE() {
                // unknown_1000_5E42_15E42();// unknown_1000_62C9_162C9();// unknown_1000_633B_1633B();// unknown_1000_7C8F_17C8F();// unknown_1000_C343_1C343();

                return nearRet();
            }

            // defineFunction(0x1000, 0x633B, "unknown", this.unknown_1000_633B_1633B);
            public Action unknown_1000_633B_1633B() {
                // unknown_1000_634D_1634D();

                return nearRet();
            }

            // defineFunction(0x1000, 0x634D, "unknown", this.unknown_1000_634D_1634D);
            public Action unknown_1000_634D_1634D() {
                // unknown_1000_62D6_162D6();// unknown_1000_636A_1636A();// unknown_1000_639A_1639A();

                return nearRet();
            }

            // defineFunction(0x1000, 0x62D6, "unknown", this.unknown_1000_62D6_162D6);
            public Action unknown_1000_62D6_162D6() {
                // unknown_1000_B647_1B647();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB647, "unknown", this.unknown_1000_B647_1B647);
            public Action unknown_1000_B647_1B647() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x636A, "unknown", this.unknown_1000_636A_1636A);
            public Action unknown_1000_636A_1636A() {
                // map_func_ida_1000_B58B_1B58B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x639A, "unknown", this.unknown_1000_639A_1639A);
            public Action unknown_1000_639A_1639A() {
                // map_func_ida_1000_B58B_1B58B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x62C9, "unknown", this.unknown_1000_62C9_162C9);
            public Action unknown_1000_62C9_162C9() {
                // unknown_1000_B647_1B647();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5E42, "unknown", this.unknown_1000_5E42_15E42);
            public Action unknown_1000_5E42_15E42() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC343, "unknown", this.unknown_1000_C343_1C343);
            public Action unknown_1000_C343_1C343() {
                // unknown_334B_0112_335C2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x7C8F, "unknown", this.unknown_1000_7C8F_17C8F);
            public Action unknown_1000_7C8F_17C8F() {
                // unknown_1000_407E_1407E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6314, "unknown", this.unknown_1000_6314_16314);
            public Action unknown_1000_6314_16314() {
                // unknown_1000_407E_1407E();// unknown_1000_62D6_162D6();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_C1AA_1C1AA();// GetEsSiPointerToUnknown_1000_C1F4_1C1F4();// unknown_1000_C30D_1C30D();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC30D, "unknown", this.unknown_1000_C30D_1C30D);
            public Action unknown_1000_C30D_1C30D() {
                // unknown_334B_0112_335C2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6715, "unknown", this.unknown_1000_6715_16715);
            public Action unknown_1000_6715_16715() {
                // unknown_1000_6757_16757();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6757, "unknown", this.unknown_1000_6757_16757);
            public Action unknown_1000_6757_16757() {
                // unknown_1000_6770_16770();// unknown_1000_686E_1686E();// unknown_1000_6906_16906();

                return nearRet();
            }

            // defineFunction(0x1000, 0x686E, "unknown", this.unknown_1000_686E_1686E);
            public Action unknown_1000_686E_1686E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x6770, "unknown", this.unknown_1000_6770_16770);
            public Action unknown_1000_6770_16770() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xC6AD, "unknown", this.unknown_1000_C6AD_1C6AD);
            public Action unknown_1000_C6AD_1C6AD() {
                // unknown_1000_1797_11797();// unknown_1000_C13B_1C13B();// unknown_1000_C443_1C443();// unknown_1000_C51E_1C51E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC443, "unknown", this.unknown_1000_C443_1C443);
            public Action unknown_1000_C443_1C443() {
                // VgaFunc14CopySquareOfPixelsSiIsSourceSegment_334B_012A_335DA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC51E, "unknown", this.unknown_1000_C51E_1C51E);
            public Action unknown_1000_C51E_1C51E() {
                // VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0x878C, "unknown", this.unknown_1000_878C_1878C);
            public Action unknown_1000_878C_1878C() {
                // unknown_1000_D338_1D338();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD338, "unknown", this.unknown_1000_D338_1D338);
            public Action unknown_1000_D338_1D338() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD792, "unknown", this.unknown_1000_D792_1D792);
            public Action unknown_1000_D792_1D792() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5BB0, "unknown", this.unknown_1000_5BB0_15BB0);
            public Action unknown_1000_5BB0_15BB0() {
                // unknown_1000_7B1B_17B1B();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_CF70_1CF70();// unknown_1000_D03C_1D03C();// SetFontToIntro_1000_D068_1D068();// unknown_1000_D194_1D194();// unknown_1000_E2E3_1E2E3();

                return nearRet();
            }

            // defineFunction(0x1000, 0x7B1B, "unknown", this.unknown_1000_7B1B_17B1B);
            public Action unknown_1000_7B1B_17B1B() {
                // unknown_1000_C53E_1C53E();// unknown_334B_011E_335CE();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD03C, "unknown", this.unknown_1000_D03C_1D03C);
            public Action unknown_1000_D03C_1D03C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE2E3, "unknown", this.unknown_1000_E2E3_1E2E3);
            public Action unknown_1000_E2E3_1E2E3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD194, "unknown", this.unknown_1000_D194_1D194);
            public Action unknown_1000_D194_1D194() {
                // unknown_1000_CF70_1CF70();// unknown_1000_D04E_1D04E();// unknown_1000_D1BB_1D1BB();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD096, "unknown", this.unknown_1000_D096_1D096);
            public Action unknown_1000_D096_1D096() {
                // GetCharacterCoordsXY_1000_D05F_1D05F();// unknown_334B_0115_335C5();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6B34, "unknown", this.unknown_1000_6B34_16B34);
            public Action unknown_1000_6B34_16B34() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x599F, "unknown", this.unknown_1000_599F_1599F);
            public Action unknown_1000_599F_1599F() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5C03, "unknown", this.unknown_1000_5C03_15C03);
            public Action unknown_1000_5C03_15C03() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB8C6, "unknown", this.unknown_1000_B8C6_1B8C6);
            public Action unknown_1000_B8C6_1B8C6() {
                // unknown_1000_17E6_117E6();// unknown_1000_5ADF_15ADF();// unknown_1000_AE04_1AE04();// unknown_1000_B8A7_1B8A7();// transition_ida_1000_C108_1C108();// unknown_1000_D2BD_1D2BD();// SetMapClickHandlerAddressFromAx_1000_D95E_1D95E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB8A7, "unknown", this.unknown_1000_B8A7_1B8A7);
            public Action unknown_1000_B8A7_1B8A7() {
                // unknown_1000_BA75_1BA75();// open_sprite_sheet_ida_1000_C13E_1C13E();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// unknown_334B_0160_33610();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBA75, "unknown", this.unknown_1000_BA75_1BA75);
            public Action unknown_1000_BA75_1BA75() {
                // unknown_1000_B9F6_1B9F6();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB9F6, "unknown", this.unknown_1000_B9F6_1B9F6);
            public Action unknown_1000_B9F6_1B9F6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB827, "unknown", this.unknown_1000_B827_1B827);
            public Action unknown_1000_B827_1B827() {
                // unknown_1000_1797_11797();// unknown_1000_AA96_1AA96();// IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_1000_B84A_1B84A();// unknown_1000_B87E_1B87E();// unknown_1000_B941_1B941();// unknown_1000_D72B_1D72B();// unknown_1000_D7B2_1D7B2();// unknown_563E_010C_564EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB84A, "unknown", this.unknown_1000_B84A_1B84A);
            public Action unknown_1000_B84A_1B84A() {
                // MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();// SetSiToMapCursorTypeDC58_1000_DAAA_1DAAA();// unknown_334B_011E_335CE();// unknown_334B_0145_335F5();

                return nearRet();
            }

            // defineFunction(0x334B, 0x145, "unknown", this.unknown_334B_0145_335F5);
            public Action unknown_334B_0145_335F5() {
                // UnknownGlobeRelated_334B_1D07_351B7();// UnknownGlobeInitRelated_334B_1D5A_3520A();

                return farRet();
            }

            // defineFunction(0x1000, 0xB87E, "unknown", this.unknown_1000_B87E_1B87E);
            public Action unknown_1000_B87E_1B87E() {
                // MemCopy8Bytes_1000_5BA8_15BA8();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C305_1C305();// unknown_1000_C30D_1C30D();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC305, "unknown", this.unknown_1000_C305_1C305);
            public Action unknown_1000_C305_1C305() {
                // unknown_1000_C30D_1C30D();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB941, "unknown", this.unknown_1000_B941_1B941);
            public Action unknown_1000_B941_1B941() {
                // SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// unknown_1000_D48A_1D48A();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD7B2, "unknown", this.unknown_1000_D7B2_1D7B2);
            public Action unknown_1000_D7B2_1D7B2() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD72B, "unknown", this.unknown_1000_D72B_1D72B);
            public Action unknown_1000_D72B_1D72B() {
                // load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_D200_1D200();// unknown_1000_D741_1D741();

                return nearRet();
            }

            // defineFunction(0x334B, 0x2596, "unknown", this.unknown_334B_2596_35A46);
            public Action unknown_334B_2596_35A46() {
                // MemcpyDSToESFor64000_334B_1B7C_3502C();

                return nearRet();
            }

            // defineFunction(0x1000, 0x17E6, "unknown", this.unknown_1000_17E6_117E6);
            public Action unknown_1000_17E6_117E6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB9AE, "unknown", this.unknown_1000_B9AE_1B9AE);
            public Action unknown_1000_B9AE_1B9AE() {
                // unknown_1000_BAF2_1BAF2();// unknown_1000_BC0C_1BC0C();// unknown_1000_C4ED_1C4ED();// unknown_1000_DB67_1DB67();// unknown_1000_DB74_1DB74();// unknown_334B_0148_335F8();

                return nearRet();
            }

            // defineFunction(0x334B, 0x148, "unknown", this.unknown_334B_0148_335F8);
            public Action unknown_334B_0148_335F8() {
                
   
                return farRet();
            }

            // defineFunction(0x1000, 0xBC1F, "unknown", this.unknown_1000_BC1F_1BC1F);
            public Action unknown_1000_BC1F_1BC1F() {
                // unknown_1000_BC4E_1BC4E();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBC4E, "unknown", this.unknown_1000_BC4E_1BC4E);
            public Action unknown_1000_BC4E_1BC4E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xBAF2, "unknown", this.unknown_1000_BAF2_1BAF2);
            public Action unknown_1000_BAF2_1BAF2() {
                // unknown_1000_407E_1407E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDB74, "unknown", this.unknown_1000_DB74_1DB74);
            public Action unknown_1000_DB74_1DB74() {
                // VgaFunc04RestoreImageUnderMouseCursor_334B_010C_335BC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC4ED, "unknown", this.unknown_1000_C4ED_1C4ED);
            public Action unknown_1000_C4ED_1C4ED() {
                // VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBC0C, "unknown", this.unknown_1000_BC0C_1BC0C);
            public Action unknown_1000_BC0C_1BC0C() {
                // SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// load_icons_sprites_ida_1000_C137_1C137();// GetEsSiPointerToUnknown_1000_C1F4_1C1F4();// VgaFunc05Blit_334B_010F_335BF();

                return nearRet();
            }

            // defineFunction(0x1000, 0xDB67, "unknown", this.unknown_1000_DB67_1DB67);
            public Action unknown_1000_DB67_1DB67() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD439, "unknown", this.unknown_1000_D439_1D439);
            public Action unknown_1000_D439_1D439() {
                // unknown_1000_1834_11834();// unknown_1000_3AF9_13AF9();// unknown_1000_9197_19197();// unknown_1000_91A0_191A0();// unknown_1000_93DF_193DF();// unknown_1000_9908_19908();// unknown_1000_9B49_19B49();// unknown_1000_9BAC_19BAC();// unknown_1000_9F40_19F40();// unknown_1000_9F9E_19F9E();// unknown_1000_A42C_1A42C();// unknown_1000_A44C_1A44C();// unknown_1000_A47D_1A47D();// unknown_1000_A4C6_1A4C6();// unknown_1000_A7C2_1A7C2();// unknown_1000_AC3A_1AC3A();// Inc2788_1000_B2B9_1B2B9();// unknown_1000_B30F_1B30F();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_C0D5_1C0D5();// unknown_1000_C0F4_1C0F4();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();// unknown_1000_C4DD_1C4DD();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// unknown_1000_D280_1D280();// unknown_1000_D2BD_1D2BD();// MenuAnimationRelated_1000_D316_1D316();// unknown_1000_D338_1D338();// unknown_1000_D33A_1D33A();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// SetMapClickHandlerAddressFromAx_1000_D95E_1D95E();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB30F, "unknown", this.unknown_1000_B30F_1B30F);
            public Action unknown_1000_B30F_1B30F() {
                // unknown_1000_B2C4_1B2C4();// strcpy_to_filename_buf_ida_1000_F2FC_1F2FC();// provided_interrupt_handler_0x21_F000_0020_F0020();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB2C4, "unknown", this.unknown_1000_B2C4_1B2C4);
            public Action unknown_1000_B2C4_1B2C4() {
                // unknown_1000_CF70_1CF70();// unknown_1000_D03C_1D03C();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();// unknown_1000_E2E3_1E2E3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xD280, "unknown", this.unknown_1000_D280_1D280);
            public Action unknown_1000_D280_1D280() {
                // unknown_1000_A7C2_1A7C2();// unknown_1000_C0D5_1C0D5();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB2B3, "unknown", this.unknown_1000_B2B3_1B2B3);
            public Action unknown_1000_B2B3_1B2B3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB8F3, "unknown", this.unknown_1000_B8F3_1B8F3);
            public Action unknown_1000_B8F3_1B8F3() {
                // unknown_1000_B84A_1B84A();// unknown_1000_B87E_1B87E();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C43E_1C43E();// unknown_1000_C474_1C474();// unknown_1000_C4DD_1C4DD();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBE1D, "unknown", this.unknown_1000_BE1D_1BE1D);
            public Action unknown_1000_BE1D_1BE1D() {
                // unknown_1000_BDFA_1BDFA();// unknown_1000_BED7_1BED7();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// load_icons_sprites_ida_1000_C137_1C137();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C21B_1C21B();// unknown_1000_C2FD_1C2FD();// unknown_1000_D04E_1D04E();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// unknown_1000_D1A6_1D1A6();// unknown_1000_DA25_1DA25();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC21B, "unknown", this.unknown_1000_C21B_1C21B);
            public Action unknown_1000_C21B_1C21B() {
                // draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBED7, "unknown", this.unknown_1000_BED7_1BED7);
            public Action unknown_1000_BED7_1BED7() {
                // unknown_1000_BF26_1BF26();// unknown_1000_C02E_1C02E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC02E, "unknown", this.unknown_1000_C02E_1C02E);
            public Action unknown_1000_C02E_1C02E() {
                // map_func_ida_1000_BFE3_1BFE3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBF26, "unknown", this.unknown_1000_BF26_1BF26);
            public Action unknown_1000_BF26_1BF26() {
                // unknown_1000_BF61_1BF61();// unknown_1000_BF73_1BF73();// unknown_1000_CF70_1CF70();// unknown_1000_D03C_1D03C();// unknown_1000_E31C_1E31C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBF73, "unknown", this.unknown_1000_BF73_1BF73);
            public Action unknown_1000_BF73_1BF73() {
                // unknown_1000_D03C_1D03C();// unknown_1000_E2E3_1E2E3();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBF61, "unknown", this.unknown_1000_BF61_1BF61);
            public Action unknown_1000_BF61_1BF61() {
                // unknown_1000_D03C_1D03C();// unknown_1000_E31C_1E31C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE31C, "unknown", this.unknown_1000_E31C_1E31C);
            public Action unknown_1000_E31C_1E31C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xBDFA, "unknown", this.unknown_1000_BDFA_1BDFA);
            public Action unknown_1000_BDFA_1BDFA() {
                // GetSunlightDay_1000_1AD1_11AD1();// unknown_1000_BFA7_1BFA7();// SetFontToIntro_1000_D068_1D068();// unknown_1000_D194_1D194();// unknown_1000_E2DB_1E2DB();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE2DB, "unknown", this.unknown_1000_E2DB_1E2DB);
            public Action unknown_1000_E2DB_1E2DB() {
                // unknown_1000_CF70_1CF70();// unknown_1000_D03C_1D03C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBFA7, "unknown", this.unknown_1000_BFA7_1BFA7);
            public Action unknown_1000_BFA7_1BFA7() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD1A6, "unknown", this.unknown_1000_D1A6_1D1A6);
            public Action unknown_1000_D1A6_1D1A6() {
                // unknown_1000_D194_1D194();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC474, "unknown", this.unknown_1000_C474_1C474);
            public Action unknown_1000_C474_1C474() {
                // VgaFunc12CopyRectangle_334B_0124_335D4();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC43E, "unknown", this.unknown_1000_C43E_1C43E);
            public Action unknown_1000_C43E_1C43E() {
                // VgaFunc14CopySquareOfPixelsSiIsSourceSegment_334B_012A_335DA();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC4DD, "unknown", this.unknown_1000_C4DD_1C4DD);
            public Action unknown_1000_C4DD_1C4DD() {
                // unknown_1000_1797_11797();// call_restore_cursor_ida_1000_DBB2_1DBB2();// VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB98B, "unknown", this.unknown_1000_B98B_1B98B);
            public Action unknown_1000_B98B_1B98B() {
                // map_func_gfx_ida_1000_B977_1B977();// unknown_1000_BAF2_1BAF2();// unknown_1000_BC0C_1BC0C();// unknown_1000_C4ED_1C4ED();// unknown_1000_DB67_1DB67();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBE57, "unknown", this.unknown_1000_BE57_1BE57);
            public Action unknown_1000_BE57_1BE57() {
                // SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_C2FD_1C2FD();// unknown_1000_D04E_1D04E();// unknown_1000_D12F_1D12F();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBA9E, "unknown", this.unknown_1000_BA9E_1BA9E);
            public Action unknown_1000_BA9E_1BA9E() {
                // unknown_1000_407E_1407E();// unknown_1000_B683_1B683();// unknown_1000_B98B_1B98B();// unknown_1000_B9E0_1B9E0();// unknown_1000_BA15_1BA15();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB683, "unknown", this.unknown_1000_B683_1B683);
            public Action unknown_1000_B683_1B683() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB9E0, "unknown", this.unknown_1000_B9E0_1B9E0);
            public Action unknown_1000_B9E0_1B9E0() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xBA15, "unknown", this.unknown_1000_BA15_1BA15);
            public Action unknown_1000_BA15_1BA15() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xBC99, "unknown", this.unknown_1000_BC99_1BC99);
            public Action unknown_1000_BC99_1BC99() {
                // unknown_1000_BD00_1BD00();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_C551_1C551();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC551, "unknown", this.unknown_1000_C551_1C551);
            public Action unknown_1000_C551_1C551() {
                // unknown_1000_C53E_1C53E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xBD00, "unknown", this.unknown_1000_BD00_1BD00);
            public Action unknown_1000_BD00_1BD00() {
                // unknown_1000_C0D5_1C0D5();

                return nearRet();
            }

            // defineFunction(0x334B, 0x35C8, "unknown", this.unknown_334B_35C8_36A78);
            public Action unknown_334B_35C8_36A78() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xADBE, "unknown", this.unknown_1000_ADBE_1ADBE);
            public Action unknown_1000_ADBE_1ADBE() {
                // IsUnknownDBC80x100And2943BitmaskNonZero_1000_AEC6_1AEC6();// unknown_563E_010C_564EC();

                return nearRet();
            }

            // defineFunction(0x334B, 0x2AB0, "unknown", this.unknown_334B_2AB0_35F60);
            public Action unknown_334B_2AB0_35F60() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x91A0, "unknown", this.unknown_1000_91A0_191A0);
            public Action unknown_1000_91A0_191A0() {
                // unknown_1000_9123_19123();// unknown_1000_920F_1920F();// unknown_1000_98B2_198B2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x98B2, "unknown", this.unknown_1000_98B2_198B2);
            public Action unknown_1000_98B2_198B2() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x920F, "unknown", this.unknown_1000_920F_1920F);
            public Action unknown_1000_920F_1920F() {
                // unknown_1000_C1AA_1C1AA();// open_resource_by_index_si_ida_1000_F0B9_1F0B9();// VgaFunc20NoOp_334B_013C_335EC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3AF9, "unknown", this.unknown_1000_3AF9_13AF9);
            public Action unknown_1000_3AF9_13AF9() {
                // unknown_1000_37B5_137B5();// VgaFunc14CopySquareOfPixelsSiIsSourceSegment_334B_012A_335DA();// unknown_334B_016F_3361F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x37B5, "unknown", this.unknown_1000_37B5_137B5);
            public Action unknown_1000_37B5_137B5() {
                // unknown_1000_39E6_139E6();// Fill47F8WithFF_1000_3AE9_13AE9();// draw_SAL_ida_1000_3B59_13B59();// unknown_1000_3EFE_13EFE();// unknown_1000_4D00_14D00();// MemCopy8Bytes_1000_5BA8_15BA8();// unknown_1000_C432_1C432();

                return nearRet();
            }

            // defineFunction(0x334B, 0x16F, "unknown", this.unknown_334B_016F_3361F);
            public Action unknown_334B_016F_3361F() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0x9197, "unknown", this.unknown_1000_9197_19197);
            public Action unknown_1000_9197_19197() {
                // unknown_1000_9123_19123();// unknown_1000_C1AA_1C1AA();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9908, "unknown", this.unknown_1000_9908_19908);
            public Action unknown_1000_9908_19908() {
                // unknown_1000_127C_1127C();// unknown_1000_994F_1994F();// unknown_1000_996C_1996C();// unknown_1000_DA25_1DA25();

                return nearRet();
            }

            // defineFunction(0x1000, 0x994F, "unknown", this.unknown_1000_994F_1994F);
            public Action unknown_1000_994F_1994F() {
                // unknown_1000_E3B7_1E3B7();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE3B7, "unknown", this.unknown_1000_E3B7_1E3B7);
            public Action unknown_1000_E3B7_1E3B7() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x996C, "unknown", this.unknown_1000_996C_1996C);
            public Action unknown_1000_996C_1996C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x9BAC, "unknown", this.unknown_1000_9BAC_19BAC);
            public Action unknown_1000_9BAC_19BAC() {
                // MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// unknown_1000_9197_19197();// unknown_1000_9BEE_19BEE();// unknown_1000_9D16_19D16();// unknown_1000_C446_1C446();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9BEE, "unknown", this.unknown_1000_9BEE_19BEE);
            public Action unknown_1000_9BEE_19BEE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x9D16, "unknown", this.unknown_1000_9D16_19D16);
            public Action unknown_1000_9D16_19D16() {
                // unknown_334B_0112_335C2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x93DF, "unknown", this.unknown_1000_93DF_193DF);
            public Action unknown_1000_93DF_193DF() {
                // unknown_1000_90BD_190BD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x90BD, "unknown", this.unknown_1000_90BD_190BD);
            public Action unknown_1000_90BD_190BD() {
                // unknown_1000_92C9_192C9();// MenuAnimationRelated_1000_D316_1D316();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// unknown_1000_D48A_1D48A();// unknown_1000_D6FE_1D6FE();// call_restore_cursor_ida_1000_DBB2_1DBB2();// draw_mouse_ida_1000_DBEC_1DBEC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x92C9, "unknown", this.unknown_1000_92C9_192C9);
            public Action unknown_1000_92C9_192C9() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x9F40, "unknown", this.unknown_1000_9F40_19F40);
            public Action unknown_1000_9F40_19F40() {
                // SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9B49, "unknown", this.unknown_1000_9B49_19B49);
            public Action unknown_1000_9B49_19B49() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA0F1, "unknown", this.unknown_1000_A0F1_1A0F1);
            public Action unknown_1000_A0F1_1A0F1() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1803, "unknown", this.unknown_1000_1803_11803);
            public Action unknown_1000_1803_11803() {
                // unknown_1000_181E_1181E();

                return nearRet();
            }

            // defineFunction(0x1000, 0x181E, "unknown", this.unknown_1000_181E_1181E);
            public Action unknown_1000_181E_1181E() {
                // unknown_1000_17BE_117BE();// unknown_1000_E387_1E387();

                return nearRet();
            }

            // defineFunction(0x334B, 0x14E, "unknown", this.unknown_334B_014E_335FE);
            public Action unknown_334B_014E_335FE() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();

                return farRet();
            }

            // defineFunction(0x1000, 0x88AF, "unknown", this.unknown_1000_88AF_188AF);
            public Action unknown_1000_88AF_188AF() {
                // unknown_1000_88F1_188F1();// unknown_1000_8944_18944();// unknown_1000_8B11_18B11();// unknown_1000_CF70_1CF70();

                return nearRet();
            }

            // defineFunction(0x1000, 0x88F1, "unknown", this.unknown_1000_88F1_188F1);
            public Action unknown_1000_88F1_188F1() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x8944, "unknown", this.unknown_1000_8944_18944);
            public Action unknown_1000_8944_18944() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x8B11, "unknown", this.unknown_1000_8B11_18B11);
            public Action unknown_1000_8B11_18B11() {
                // unknown_1000_8C8A_18C8A();// unknown_1000_8CCD_18CCD();// unknown_1000_8DF0_18DF0();// unknown_1000_8F28_18F28();// unknown_1000_9046_19046();// unknown_1000_D04E_1D04E();// unknown_1000_D096_1D096();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8C8A, "unknown", this.unknown_1000_8C8A_18C8A);
            public Action unknown_1000_8C8A_18C8A() {
                // unknown_1000_9BAC_19BAC();// unknown_1000_C446_1C446();// unknown_1000_C4DD_1C4DD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8CCD, "unknown", this.unknown_1000_8CCD_18CCD);
            public Action unknown_1000_8CCD_18CCD() {
                // unknown_1000_8E16_18E16();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8E16, "unknown", this.unknown_1000_8E16_18E16);
            public Action unknown_1000_8E16_18E16() {
                // unknown_1000_8E9E_18E9E();// unknown_1000_8ED3_18ED3();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8ED3, "unknown", this.unknown_1000_8ED3_18ED3);
            public Action unknown_1000_8ED3_18ED3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x8E9E, "unknown", this.unknown_1000_8E9E_18E9E);
            public Action unknown_1000_8E9E_18E9E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x8F28, "unknown", this.unknown_1000_8F28_18F28);
            public Action unknown_1000_8F28_18F28() {
                // SetBackBufferAsActiveFrameBuffer_1000_C085_1C085();

                return nearRet();
            }

            // defineFunction(0x1000, 0x8DF0, "unknown", this.unknown_1000_8DF0_18DF0);
            public Action unknown_1000_8DF0_18DF0() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x9046, "unknown", this.unknown_1000_9046_19046);
            public Action unknown_1000_9046_19046() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x978E, "unknown", this.unknown_1000_978E_1978E);
            public Action unknown_1000_978E_1978E() {
                // unknown_1000_1797_11797();// SetUnknown11CATo1_1000_4ACA_14ACA();// unknown_1000_9025_19025();// unknown_1000_91A0_191A0();// unknown_1000_9908_19908();// unknown_1000_9BAC_19BAC();// unknown_1000_C0F4_1C0F4();// gfx_copy_rect_at_si_ida_1000_C477_1C477();// VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9025, "unknown", this.unknown_1000_9025_19025);
            public Action unknown_1000_9025_19025() {
                // VgaFunc05Blit_334B_010F_335BF();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9EFD, "unknown", this.unknown_1000_9EFD_19EFD);
            public Action unknown_1000_9EFD_19EFD() {
                // unknown_1000_A6CC_1A6CC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA6CC, "unknown", this.unknown_1000_A6CC_1A6CC);
            public Action unknown_1000_A6CC_1A6CC() {
                // unknown_1000_9123_19123();// unknown_1000_A7A5_1A7A5();// unknown_1000_A83F_1A83F();// unknown_1000_A8BC_1A8BC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA8BC, "unknown", this.unknown_1000_A8BC_1A8BC);
            public Action unknown_1000_A8BC_1A8BC() {
                // Unknown_1000_A8B1_1A8B1();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA83F, "unknown", this.unknown_1000_A83F_1A83F);
            public Action unknown_1000_A83F_1A83F() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x99BE, "unknown", this.unknown_1000_99BE_199BE);
            public Action unknown_1000_99BE_199BE() {
                // unknown_1000_908C_1908C();// unknown_1000_9197_19197();// unknown_1000_9BB1_19BB1();// rect_at_si_to_regs_ida_1000_C4F0_1C4F0();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9BB1, "unknown", this.unknown_1000_9BB1_19BB1);
            public Action unknown_1000_9BB1_19BB1() {
                // unknown_1000_9BEE_19BEE();// unknown_1000_9C2D_19C2D();// unknown_1000_9D16_19D16();// unknown_1000_C446_1C446();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9C2D, "unknown", this.unknown_1000_9C2D_19C2D);
            public Action unknown_1000_9C2D_19C2D() {
                // unknown_1000_9C54_19C54();// unknown_1000_9CC6_19CC6();// IsUnknownDC2BZero_1000_ABCC_1ABCC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9C54, "unknown", this.unknown_1000_9C54_19C54);
            public Action unknown_1000_9C54_19C54() {
                // unknown_1000_9CC6_19CC6();// IsUnknownDC2BZero_1000_ABCC_1ABCC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9CC6, "unknown", this.unknown_1000_9CC6_19CC6);
            public Action unknown_1000_9CC6_19CC6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x908C, "unknown", this.unknown_1000_908C_1908C);
            public Action unknown_1000_908C_1908C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD434, "unknown", this.unknown_1000_D434_1D434);
            public Action unknown_1000_D434_1D434() {
                // unknown_1000_A7C2_1A7C2();// unknown_1000_C0D5_1C0D5();// unknown_1000_D239_1D239();// unknown_1000_D23D_1D23D();// unknown_1000_D280_1D280();// unknown_1000_D2EA_1D2EA();// MenuAnimationRelated_1000_D316_1D316();// unknown_1000_D338_1D338();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();// DispatcherHelperDeterminesWhereToJump_1000_D454_1D454();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x97CF, "unknown", this.unknown_1000_97CF_197CF);
            public Action unknown_1000_97CF_197CF() {
                // unknown_1000_17BE_117BE();// unknown_1000_1834_11834();// unknown_1000_2EFB_12EFB();// unknown_1000_3090_13090();// unknown_1000_37B2_137B2();// unknown_1000_8C8A_18C8A();// unknown_1000_9B8B_19B8B();// unknown_1000_A7A5_1A7A5();// unknown_1000_C0F4_1C0F4();// unknown_1000_C412_1C412();// unknown_1000_C4DD_1C4DD();// unknown_1000_E387_1E387();

                return nearRet();
            }

            // defineFunction(0x1000, 0x9B8B, "unknown", this.unknown_1000_9B8B_19B8B);
            public Action unknown_1000_9B8B_19B8B() {
                // unknown_1000_A7A5_1A7A5();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3F1F, "unknown", this.unknown_1000_3F1F_13F1F);
            public Action unknown_1000_3F1F_13F1F() {
                // unknown_1000_1797_11797();// unknown_1000_1834_11834();// open_SAL_resource_ida_1000_2D74_12D74();// unknown_1000_35AD_135AD();// unknown_1000_36D3_136D3();// unknown_1000_37B2_137B2();// unknown_1000_3EFE_13EFE();// unknown_1000_40C3_140C3();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// unknown_1000_A1C4_1A1C4();// unknown_1000_A1E2_1A1E2();// unknown_1000_A7A5_1A7A5();// unknown_1000_ABD5_1ABD5();// CallPcmFunc05_1000_AC30_1AC30();// unknown_1000_AD5E_1AD5E();// unknown_1000_AE04_1AE04();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C0F4_1C0F4();// transition_ida_1000_C108_1C108();// unknown_1000_C412_1C412();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();// unknown_1000_D2BD_1D2BD();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA1C4, "unknown", this.unknown_1000_A1C4_1A1C4);
            public Action unknown_1000_A1C4_1A1C4() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x36D3, "unknown", this.unknown_1000_36D3_136D3);
            public Action unknown_1000_36D3_136D3() {
                // unknown_1000_36EE_136EE();// unknown_1000_98B2_198B2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3520, "unknown", this.unknown_1000_3520_13520);
            public Action unknown_1000_3520_13520() {
                // unknown_1000_2AAF_12AAF();// unknown_1000_96F1_196F1();

                return nearRet();
            }

            // defineFunction(0x1000, 0x96F1, "unknown", this.unknown_1000_96F1_196F1);
            public Action unknown_1000_96F1_196F1() {
                // unknown_1000_9F40_19F40();// unknown_1000_9F9E_19F9E();

                return nearRet();
            }

            // defineFunction(0x1000, 0xA334, "unknown", this.unknown_1000_A334_1A334);
            public Action unknown_1000_A334_1A334() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2AAF, "unknown", this.unknown_1000_2AAF_12AAF);
            public Action unknown_1000_2AAF_12AAF() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xA1E2, "unknown", this.unknown_1000_A1E2_1A1E2);
            public Action unknown_1000_A1E2_1A1E2() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xABD5, "unknown", this.unknown_1000_ABD5_1ABD5);
            public Action unknown_1000_ABD5_1ABD5() {
                // IsUnknownDC2BZero_1000_ABCC_1ABCC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x40C3, "unknown", this.unknown_1000_40C3_140C3);
            public Action unknown_1000_40C3_140C3() {
                // unknown_1000_40C9_140C9();

                return nearRet();
            }

            // defineFunction(0x1000, 0x40C9, "unknown", this.unknown_1000_40C9_140C9);
            public Action unknown_1000_40C9_140C9() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x37EB, "unknown", this.unknown_1000_37EB_137EB);
            public Action unknown_1000_37EB_137EB() {
                // unknown_1000_380C_1380C();// unknown_1000_4E12_14E12();

                return nearRet();
            }

            // defineFunction(0x1000, 0x380C, "unknown", this.unknown_1000_380C_1380C);
            public Action unknown_1000_380C_1380C() {
                // unknown_1000_388D_1388D();// calc_SAL_index_ida_1000_5E4F_15E4F();// open_sprite_sheet_ida_1000_C13E_1C13E();// draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x388D, "unknown", this.unknown_1000_388D_1388D);
            public Action unknown_1000_388D_1388D() {
                // unknown_1000_395C_1395C();// unknown_1000_3971_13971();// unknown_1000_398C_1398C();

                return nearRet();
            }

            // defineFunction(0x1000, 0x395C, "unknown", this.unknown_1000_395C_1395C);
            public Action unknown_1000_395C_1395C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3971, "unknown", this.unknown_1000_3971_13971);
            public Action unknown_1000_3971_13971() {
                // open_sprite_sheet_ida_1000_C13E_1C13E();// GetEsSiPointerToUnknown_1000_C1F4_1C1F4();

                return nearRet();
            }

            // defineFunction(0x1000, 0x398C, "unknown", this.unknown_1000_398C_1398C);
            public Action unknown_1000_398C_1398C() {
                // unknown_334B_0106_335B6();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4E12, "unknown", this.unknown_1000_4E12_14E12);
            public Action unknown_1000_4E12_14E12() {
                // unknown_1000_407E_1407E();// unknown_1000_409A_1409A();// unknown_1000_4EC6_14EC6();// unknown_1000_B532_1B532();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB532, "unknown", this.unknown_1000_B532_1B532);
            public Action unknown_1000_B532_1B532() {
                // map_func_ida_1000_B58B_1B58B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4EC6, "unknown", this.unknown_1000_4EC6_14EC6);
            public Action unknown_1000_4EC6_14EC6() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x409A, "unknown", this.unknown_1000_409A_1409A);
            public Action unknown_1000_409A_1409A() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3A95, "unknown", this.unknown_1000_3A95_13A95);
            public Action unknown_1000_3A95_13A95() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3AA9, "unknown", this.unknown_1000_3AA9_13AA9);
            public Action unknown_1000_3AA9_13AA9() {
                // unknown_1000_C305_1C305();// unknown_334B_0112_335C2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x49EA, "unknown", this.unknown_1000_49EA_149EA);
            public Action unknown_1000_49EA_149EA() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD323, "unknown", this.unknown_1000_D323_1D323);
            public Action unknown_1000_D323_1D323() {
                // unknown_1000_D280_1D280();// MenuAnimationRelated_1000_D316_1D316();// unknown_1000_D338_1D338();// SetBpToCurrentMenuTypeForScreenAction_1000_D41B_1D41B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x439F, "unknown", this.unknown_1000_439F_1439F);
            public Action unknown_1000_439F_1439F() {
                // unknown_1000_38B4_138B4();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C21B_1C21B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x38B4, "unknown", this.unknown_1000_38B4_138B4);
            public Action unknown_1000_38B4_138B4() {
                // unknown_1000_388D_1388D();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C2FD_1C2FD();

                return nearRet();
            }

            // defineFunction(0x1000, 0xAB4F, "unknown", this.unknown_1000_AB4F_1AB4F);
            public Action unknown_1000_AB4F_1AB4F() {
                // unknown_1000_A8BC_1A8BC();// IsUnknownDC2BZero_1000_ABCC_1ABCC();// CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4658, "unknown", this.unknown_1000_4658_14658);
            public Action unknown_1000_4658_14658() {
                // unknown_1000_CF70_1CF70();// unknown_1000_DA25_1DA25();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5B93, "unknown", this.unknown_1000_5B93_15B93);
            public Action unknown_1000_5B93_15B93() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xB7D2, "unknown", this.unknown_1000_B7D2_1B7D2);
            public Action unknown_1000_B7D2_1B7D2() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0x142, "unknown", this.unknown_334B_0142_335F2);
            public Action unknown_334B_0142_335F2() {
                // SetDiFromXYCordsDxBx_334B_0C10_340C0();// unknown_334B_2413_358C3();

                return farRet();
            }

            // defineFunction(0x334B, 0x2413, "unknown", this.unknown_334B_2413_358C3);
            public Action unknown_334B_2413_358C3() {
                // unknown_334B_2396_35846();// unknown_334B_23D7_35887();

                return nearRet();
            }

            // defineFunction(0x334B, 0x2396, "unknown", this.unknown_334B_2396_35846);
            public Action unknown_334B_2396_35846() {
                
   
                return nearRet();
            }

            // defineFunction(0x334B, 0x23D7, "unknown", this.unknown_334B_23D7_35887);
            public Action unknown_334B_23D7_35887() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x445D, "unknown", this.unknown_1000_445D_1445D);
            public Action unknown_1000_445D_1445D() {
                // unknown_1000_407E_1407E();// unknown_1000_5B93_15B93();// unknown_1000_62D6_162D6();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// load_icons_sprites_ida_1000_C137_1C137();// GetEsSiPointerToUnknown_1000_C1F4_1C1F4();// unknown_1000_C30D_1C30D();// unknown_1000_C4FB_1C4FB();// unknown_1000_DA25_1DA25();// unknown_1000_DA5F_1DA5F();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC4FB, "unknown", this.unknown_1000_C4FB_1C4FB);
            public Action unknown_1000_C4FB_1C4FB() {
                // VgaFunc16CopySquareOfPixels_334B_0130_335E0();

                return nearRet();
            }

            // defineFunction(0x1000, 0x46B5, "unknown", this.unknown_1000_46B5_146B5);
            public Action unknown_1000_46B5_146B5() {
                // SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_D04E_1D04E();// GetCharacterCoordsXY_1000_D05F_1D05F();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// unknown_1000_DB67_1DB67();// unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4586, "unknown", this.unknown_1000_4586_14586);
            public Action unknown_1000_4586_14586() {
                // unknown_1000_4658_14658();// unknown_1000_469B_1469B();// unknown_1000_514E_1514E();// unknown_1000_5D1D_15D1D();// unknown_1000_5E6D_15E6D();// unknown_1000_629D_1629D();// unknown_1000_62A6_162A6();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_D04E_1D04E();// GetCharacterCoordsXY_1000_D05F_1D05F();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// unknown_1000_D194_1D194();// unknown_1000_D19B_1D19B();// call_restore_cursor_ida_1000_DBB2_1DBB2();// VgaFunc03DrawMouseCursor_334B_0109_335B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5D1D, "unknown", this.unknown_1000_5D1D_15D1D);
            public Action unknown_1000_5D1D_15D1D() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5E6D, "unknown", this.unknown_1000_5E6D_15E6D);
            public Action unknown_1000_5E6D_15E6D() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x514E, "unknown", this.unknown_1000_514E_1514E);
            public Action unknown_1000_514E_1514E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x469B, "unknown", this.unknown_1000_469B_1469B);
            public Action unknown_1000_469B_1469B() {
                // unknown_1000_DA5F_1DA5F();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x629D, "unknown", this.unknown_1000_629D_1629D);
            public Action unknown_1000_629D_1629D() {
                // unknown_1000_6231_16231();// unknown_1000_CF70_1CF70();// unknown_1000_D04E_1D04E();// unknown_1000_D1BB_1D1BB();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6231, "unknown", this.unknown_1000_6231_16231);
            public Action unknown_1000_6231_16231() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x62A6, "unknown", this.unknown_1000_62A6_162A6);
            public Action unknown_1000_62A6_162A6() {
                // unknown_1000_CF70_1CF70();// unknown_1000_D12F_1D12F();// unknown_1000_D194_1D194();// unknown_1000_D1BB_1D1BB();

                return nearRet();
            }

            // defineFunction(0x1000, 0x450E, "unknown", this.unknown_1000_450E_1450E);
            public Action unknown_1000_450E_1450E() {
                // unknown_1000_181E_1181E();// unknown_1000_2DBF_12DBF();// unknown_1000_38E1_138E1();// unknown_1000_40D5_140D5();// unknown_1000_41C5_141C5();// unknown_1000_456C_1456C();// unknown_1000_4586_14586();// unknown_1000_45DE_145DE();// unknown_1000_4795_14795();// unknown_1000_4944_14944();// unknown_1000_4AB8_14AB8();// unknown_1000_4B3B_14B3B();// unknown_1000_4D00_14D00();// close_res_file_handle_ida_1000_A9A1_1A9A1();// unknown_1000_AB45_1AB45();// unknown_1000_ABA9_1ABA9();// unknown_1000_AD5E_1AD5E();// unknown_1000_C474_1C474();// unknown_1000_D2EA_1D2EA();// unknown_1000_DA5F_1DA5F();// unknown_1000_E3A0_1E3A0();// ClearAL_5635_0109_56459();

                return nearRet();
            }

            // defineFunction(0x1000, 0x456C, "unknown", this.unknown_1000_456C_1456C);
            public Action unknown_1000_456C_1456C() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xAB45, "unknown", this.unknown_1000_AB45_1AB45);
            public Action unknown_1000_AB45_1AB45() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE3A0, "unknown", this.unknown_1000_E3A0_1E3A0);
            public Action unknown_1000_E3A0_1E3A0() {
                // unknown_1000_D9D2_1D9D2();// PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x45DE, "unknown", this.unknown_1000_45DE_145DE);
            public Action unknown_1000_45DE_145DE() {
                // unknown_1000_4658_14658();// unknown_1000_469B_1469B();// unknown_1000_629D_1629D();// unknown_1000_62A6_162A6();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// unknown_1000_D04E_1D04E();// GetCharacterCoordsXY_1000_D05F_1D05F();// SetFontToMenu_1000_D075_1D075();// unknown_1000_D12F_1D12F();// call_restore_cursor_ida_1000_DBB2_1DBB2();

                return nearRet();
            }

            // defineFunction(0x1000, 0x44AB, "unknown", this.unknown_1000_44AB_144AB);
            public Action unknown_1000_44AB_144AB() {
                // unknown_1000_5B93_15B93();// SetTextBufferAsActiveFrameBuffer_1000_C08E_1C08E();// load_icons_sprites_ida_1000_C137_1C137();// unknown_1000_C30D_1C30D();// unknown_1000_C4FB_1C4FB();// unknown_1000_DB74_1DB74();// VgaFunc03DrawMouseCursor_334B_0109_335B9();

                return nearRet();
            }

            // defineFunction(0x1000, 0xABA9, "unknown", this.unknown_1000_ABA9_1ABA9);
            public Action unknown_1000_ABA9_1ABA9() {
                // CheckPcmEnabled_1000_AE2F_1AE2F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4944, "unknown", this.unknown_1000_4944_14944);
            public Action unknown_1000_4944_14944() {
                // unknown_1000_50BE_150BE();// unknown_1000_5124_15124();

                return nearRet();
            }

            // defineFunction(0x1000, 0x50BE, "unknown", this.unknown_1000_50BE_150BE);
            public Action unknown_1000_50BE_150BE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x5124, "unknown", this.unknown_1000_5124_15124);
            public Action unknown_1000_5124_15124() {
                // unknown_1000_407E_1407E();// unknown_1000_5133_15133();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4415, "unknown", this.unknown_1000_4415_14415);
            public Action unknown_1000_4415_14415() {
                // unknown_1000_2FFB_12FFB();// unknown_1000_43E3_143E3();// unknown_1000_469B_1469B();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// unknown_1000_C0F4_1C0F4();// unknown_1000_D717_1D717();// SetMapClickHandlerAddressToInGame_1000_D95B_1D95B();// unknown_1000_DA5F_1DA5F();// InitMapCursorTypeDC58To0_1000_DAA3_1DAA3();

                return nearRet();
            }

            // defineFunction(0x1000, 0x43E3, "unknown", this.unknown_1000_43E3_143E3);
            public Action unknown_1000_43E3_143E3() {
                // unknown_1000_388D_1388D();// unknown_1000_C43E_1C43E();// unknown_1000_C4DD_1C4DD();// unknown_334B_0160_33610();

                return nearRet();
            }

            // defineFunction(0x1000, 0x41C5, "unknown", this.unknown_1000_41C5_141C5);
            public Action unknown_1000_41C5_141C5() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x40D5, "unknown", this.unknown_1000_40D5_140D5);
            public Action unknown_1000_40D5_140D5() {
                // unknown_1000_36D3_136D3();// SetUnknown11CATo0_1000_4AC4_14AC4();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4795, "unknown", this.unknown_1000_4795_14795);
            public Action unknown_1000_4795_14795() {
                // unknown_1000_181E_1181E();// unknown_1000_37B2_137B2();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// audio_start_voc_ida_1000_AB15_1AB15();// CallPcmFunc05_1000_AC30_1AC30();// unknown_1000_AE04_1AE04();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// unknown_1000_C412_1C412();// unknown_1000_CE53_1CE53();// unknown_1000_E353_1E353();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCE53, "unknown", this.unknown_1000_CE53_1CE53);
            public Action unknown_1000_CE53_1CE53() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xE353, "unknown", this.unknown_1000_E353_1E353);
            public Action unknown_1000_E353_1E353() {
                // unknown_1000_4821_14821();// unknown_1000_DE7B_1DE7B();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4821, "unknown", this.unknown_1000_4821_14821);
            public Action unknown_1000_4821_14821() {
                // unknown_1000_3A73_13A73();// unknown_1000_3A95_13A95();// unknown_1000_3AA9_13AA9();// CallPcmFunc05_1000_AC30_1AC30();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// unknown_1000_C0F4_1C0F4();// open_sprite_sheet_ida_1000_C13E_1C13E();// unknown_1000_C43E_1C43E();// unknown_1000_C4DD_1C4DD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x3A73, "unknown", this.unknown_1000_3A73_13A73);
            public Action unknown_1000_3A73_13A73() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x4B3B, "unknown", this.unknown_1000_4B3B_14B3B);
            public Action unknown_1000_4B3B_14B3B() {
                // unknown_1000_0FD9_10FD9();// unknown_1000_407E_1407E();// unknown_1000_40C3_140C3();// unknown_1000_5206_15206();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5206, "unknown", this.unknown_1000_5206_15206);
            public Action unknown_1000_5206_15206() {
                // unknown_1000_5198_15198();// unknown_1000_51CB_151CB();

                return nearRet();
            }

            // defineFunction(0x1000, 0x51CB, "unknown", this.unknown_1000_51CB_151CB);
            public Action unknown_1000_51CB_151CB() {
                // unknown_1000_5124_15124();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5198, "unknown", this.unknown_1000_5198_15198);
            public Action unknown_1000_5198_15198() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2DBF, "unknown", this.unknown_1000_2DBF_12DBF);
            public Action unknown_1000_2DBF_12DBF() {
                // unknown_1000_1797_11797();// unknown_1000_1834_11834();// open_SAL_resource_ida_1000_2D74_12D74();// unknown_1000_35AD_135AD();// unknown_1000_37B2_137B2();// MemCopy8BytesFrom1470ToD83C_1000_5BA0_15BA0();// unknown_1000_AD5E_1AD5E();// SetFrontBufferAsActiveFrameBuffer_1000_C07C_1C07C();// gfx_call_bp_with_front_buffer_as_screen_ida_1000_C097_1C097();// unknown_1000_C0F4_1C0F4();// gfx_copy_framebuf_to_screen_ida_1000_C4CD_1C4CD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4988, "unknown", this.unknown_1000_4988_14988);
            public Action unknown_1000_4988_14988() {
                // unknown_1000_5B5D_15B5D();// unknown_1000_5B69_15B69();// unknown_1000_5B93_15B93();// MemCopy8BytesDsSIToDsDi_1000_5B99_15B99();// unknown_1000_5DCE_15DCE();// unknown_1000_62C9_162C9();// map_func_ida_1000_B6C3_1B6C3();// SetBackBufferAsActiveFrameBuffer_1000_C085_1C085();// load_icons_sprites_ida_1000_C137_1C137();// draw_sprite_ida_1000_C22F_1C22F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4A5A, "unknown", this.unknown_1000_4A5A_14A5A);
            public Action unknown_1000_4A5A_14A5A() {
                // SetBackBufferAsActiveFrameBuffer_1000_C085_1C085();// load_icons_sprites_ida_1000_C137_1C137();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4B2B, "unknown", this.unknown_1000_4B2B_14B2B);
            public Action unknown_1000_4B2B_14B2B() {
                // unknown_1000_C46F_1C46F();// VgaFunc04RestoreImageUnderMouseCursor_334B_010C_335BC();

                return nearRet();
            }

            // defineFunction(0x1000, 0xC46F, "unknown", this.unknown_1000_C46F_1C46F);
            public Action unknown_1000_C46F_1C46F() {
                // VgaFunc14CopySquareOfPixelsSiIsSourceSegment_334B_012A_335DA();

                return nearRet();
            }

            // defineFunction(0x334B, 0x136, "unknown", this.unknown_334B_0136_335E6);
            public Action unknown_334B_0136_335E6() {
                
   
                return farRet();
            }

            // defineFunction(0x1000, 0x4182, "unknown", this.unknown_1000_4182_14182);
            public Action unknown_1000_4182_14182() {
                // unknown_1000_5D36_15D36();

                return nearRet();
            }

            // defineFunction(0x1000, 0x5D36, "unknown", this.unknown_1000_5D36_15D36);
            public Action unknown_1000_5D36_15D36() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x4AB8, "unknown", this.unknown_1000_4AB8_14AB8);
            public Action unknown_1000_4AB8_14AB8() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xCA8F, "unknown", this.unknown_1000_CA8F_1CA8F);
            public Action unknown_1000_CA8F_1CA8F() {
                // unknown_1000_CB1A_1CB1A();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4A1A, "unknown", this.unknown_1000_4A1A_14A1A);
            public Action unknown_1000_4A1A_14A1A() {
                // unknown_1000_DB74_1DB74();

                return nearRet();
            }

            // defineFunction(0x1000, 0x4A00, "unknown", this.unknown_1000_4A00_14A00);
            public Action unknown_1000_4A00_14A00() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2E52, "unknown", this.unknown_1000_2E52_12E52);
            public Action unknown_1000_2E52_12E52() {
                // unknown_1000_35AD_135AD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x41E1, "unknown", this.unknown_1000_41E1_141E1);
            public Action unknown_1000_41E1_141E1() {
                // unknown_1000_B56C_1B56C();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB56C, "unknown", this.unknown_1000_B56C_1B56C);
            public Action unknown_1000_B56C_1B56C() {
                // unknown_1000_B53B_1B53B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xB53B, "unknown", this.unknown_1000_B53B_1B53B);
            public Action unknown_1000_B53B_1B53B() {
                // map_func_ida_1000_B58B_1B58B();

                return nearRet();
            }

            // defineFunction(0x1000, 0xCEC9, "unknown", this.unknown_1000_CEC9_1CEC9);
            public Action unknown_1000_CEC9_1CEC9() {
                // unknown_1000_CAA0_1CAA0();// unknown_1000_CAD4_1CAD4();// unknown_1000_CC4E_1CC4E();// hnm_decode_video_frame_ida_1000_CC96_1CC96();

                return nearRet();
            }

            // defineFunction(0x1000, 0xFD9, "unknown", this.unknown_1000_0FD9_10FD9);
            public Action unknown_1000_0FD9_10FD9() {
                // unknown_1000_1B23_11B23();// SetUnknown2788To0_1000_B2BE_1B2BE();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1B23, "unknown", this.unknown_1000_1B23_11B23);
            public Action unknown_1000_1B23_11B23() {
                // unknown_1000_1A0F_11A0F();// SetHourOfTheDayToAX_1000_1AE0_11AE0();// unknown_1000_1BEC_11BEC();// unknown_1000_1C18_11C18();// unknown_1000_1D9F_11D9F();// unknown_1000_1DD7_11DD7();// unknown_1000_331E_1331E();// unknown_1000_38E1_138E1();// map_func_qq_ida_1000_63F0_163F0();// unknown_1000_6C6F_16C6F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1DD7, "unknown", this.unknown_1000_1DD7_11DD7);
            public Action unknown_1000_1DD7_11DD7() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x503C, "unknown", this.unknown_1000_503C_1503C);
            public Action unknown_1000_503C_1503C() {
                // unknown_1000_5D36_15D36();

                return nearRet();
            }

            // defineFunction(0x1000, 0x425B, "unknown", this.unknown_1000_425B_1425B);
            public Action unknown_1000_425B_1425B() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x40AE, "unknown", this.unknown_1000_40AE_140AE);
            public Action unknown_1000_40AE_140AE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x2170, "unknown", this.unknown_1000_2170_12170);
            public Action unknown_1000_2170_12170() {
                // PushAll_1000_E270_1E270();// PopAll_1000_E283_1E283();

                return nearRet();
            }

            // defineFunction(0x1000, 0x316E, "unknown", this.unknown_1000_316E_1316E);
            public Action unknown_1000_316E_1316E() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x3406, "unknown", this.unknown_1000_3406_13406);
            public Action unknown_1000_3406_13406() {
                // unknown_1000_342D_1342D();

                return nearRet();
            }

            // defineFunction(0x1000, 0x342D, "unknown", this.unknown_1000_342D_1342D);
            public Action unknown_1000_342D_1342D() {
                // unknown_1000_6EFD_16EFD();

                return nearRet();
            }

            // defineFunction(0x1000, 0x6EFD, "unknown", this.unknown_1000_6EFD_16EFD);
            public Action unknown_1000_6EFD_16EFD() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x34D0, "unknown", this.unknown_1000_34D0_134D0);
            public Action unknown_1000_34D0_134D0() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x432, "unknown", this.unknown_563E_0432_56812);
            public Action unknown_563E_0432_56812() {
                // unknown_563E_049B_5687B();// unknown_563E_05BF_5699F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1DD3, "unknown", this.unknown_1000_1DD3_11DD3);
            public Action unknown_1000_1DD3_11DD3() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0xD19B, "unknown", this.unknown_1000_D19B_1D19B);
            public Action unknown_1000_D19B_1D19B() {
                // unknown_1000_CF70_1CF70();// unknown_1000_D1BB_1D1BB();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1DDA, "unknown", this.unknown_1000_1DDA_11DDA);
            public Action unknown_1000_1DDA_11DDA() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x39B9, "unknown", this.unknown_1000_39B9_139B9);
            public Action unknown_1000_39B9_139B9() {
                // unknown_334B_0172_33622();

                return nearRet();
            }

            // defineFunction(0x334B, 0x172, "unknown", this.unknown_334B_0172_33622);
            public Action unknown_334B_0172_33622() {
                
   
                return farRet();
            }

            // defineFunction(0x1000, 0x3916, "unknown", this.unknown_1000_3916_13916);
            public Action unknown_1000_3916_13916() {
                // unknown_334B_0175_33625();

                return nearRet();
            }

            // defineFunction(0x334B, 0x175, "unknown", this.unknown_334B_0175_33625);
            public Action unknown_334B_0175_33625() {
                // SetBxCxPaletteRelated_334B_0A21_33ED1();// LoadPaletteInVgaDac_334B_0B68_34018();

                return farRet();
            }

            // defineFunction(0x563E, 0x453, "unknown", this.unknown_563E_0453_56833);
            public Action unknown_563E_0453_56833() {
                // unknown_563E_049B_5687B();// unknown_563E_05BF_5699F();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1DFE, "unknown", this.unknown_1000_1DFE_11DFE);
            public Action unknown_1000_1DFE_11DFE() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1C46, "unknown", this.unknown_1000_1C46_11C46);
            public Action unknown_1000_1C46_11C46() {
                // unknown_1000_1CDA_11CDA();// unknown_1000_1D66_11D66();// unknown_1000_1E43_11E43();// unknown_1000_BF26_1BF26();// unknown_1000_C02E_1C02E();// unknown_1000_E3CC_1E3CC();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1D66, "unknown", this.unknown_1000_1D66_11D66);
            public Action unknown_1000_1D66_11D66() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1E43, "unknown", this.unknown_1000_1E43_11E43);
            public Action unknown_1000_1E43_11E43() {
                // unknown_1000_1AC5_11AC5();

                return nearRet();
            }

            // defineFunction(0x1000, 0x1AC5, "unknown", this.unknown_1000_1AC5_11AC5);
            public Action unknown_1000_1AC5_11AC5() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x1CDA, "unknown", this.unknown_1000_1CDA_11CDA);
            public Action unknown_1000_1CDA_11CDA() {
                // unknown_1000_5D36_15D36();// unknown_1000_E3DF_1E3DF();

                return nearRet();
            }

            // defineFunction(0x1000, 0xE3DF, "unknown", this.unknown_1000_E3DF_1E3DF);
            public Action unknown_1000_E3DF_1E3DF() {
                
   
                return nearRet();
            }

            // defineFunction(0x1000, 0x642E, "unknown", this.unknown_1000_642E_1642E);
            public Action unknown_1000_642E_1642E() {
                
   
                return nearRet();
            }

            // defineFunction(0x563E, 0x1E1, "unknown", this.unknown_563E_01E1_565C1);
            public Action unknown_563E_01E1_565C1() {
                // unknown_563E_052F_5690F();

                return farRet();
            }
}
